9825@10@//########################################################################@D@C@
9825@20@//### Template Header (must be present for template to be loaded)         @D@C@
9825@30@//### Worker name: ADM                                                    @D@C@
9825@40@//### Function:  BDRO Daily Extract of Non-Form rules                     @D@C@
9825@50@//########################################################################@D@C@
9825@60@//  2019-01-18 AJG: Add rule exclusion logic based on contract dates      @D@C@
9825@70@//    . Do not write to review if:                                        @D@C@
9825@80@//     . crs-rule_eff  >  contract_end                                    @D@C@
9825@90@//     . crs-rule_end  <  contract_eff                                    @D@C@
9825@100@//     . cntr_end_dte < '2017-01-01'                                      @D@C@
9825@102@//                                                                        @D@C@
9825@104@// 2021-02-11...                                                          @D@C@
9825@106@//     . cntr_end_dte < '2019-01-01'                                      @D@C@
9825@110@//                                                                        @D@C@
9825@120@//  2019-11-13 AJG: Code added to create a table of all history rule      @D@C@
9825@130@//   versions.  Then match to all targeted rule versions passed from the  @D@C@
9825@140@//   formulary job (9700).                                                @D@C@
9825@150@//                                                                        @D@C@
9825@160@//  If all hist versions are matched to targeted, then the rule/ndc is    @D@C@
9825@161@//  not a candidate as a new preferred hist rule to be added to Review.   @D@C@
9825@162@//                                                                        @D@C@
9825@163@// 2020-05-11 AJG: . Re-build bdro_drug_hist table from Preferred History @D@C@
9825@164@//                   rows in bdro_cmprhnsv.                               @D@C@
9825@165@//                 . Add new Drug Hist rows for new P-Hist rules from CRS @D@C@
9825@166@//                 . Added trim function when inserting carrier_id        @D@C@
9825@167@//                   in table: bdro_rule_form_id                          @D@C@
9825@168@//                                                                        @D@C@
9825@169@// 2020-06-09 AJG: . Add code to update any rule in the bdro_cmprhnsv     @D@C@
9825@170@//                   table if crs_rule_exp_dte >                          @D@C@
9825@171@//                   max(crs_rule_exp_dte) extracted from CRS today       @D@C@
9825@172@//                                                                        @D@C@
9825@173@//  2021-03-15 AJG: Add code to exclude rules attached to a               @D@C@
9825@174@//                  Secondary drug list.  Use new view created in         @D@C@
9825@175@//                  9800 tmplt: fr_proddb_v.bdro_secondary_druglist       @D@C@
9825@176@//                                                                        @D@C@
9825@177@//  2021-04-14 AJG: Add code to exclude Open-Enrollment and               @D@C@
9825@178@//                  'Test' Groups.                                        @D@C@
9825@179@//                                                                        @D@C@
9825@180@//  2021-11-10 AJG: Add rows to Maint or Review if new contract dates     @D@C@
9825@181@//                  found in Access Brand list table                      @D@C@
9825@182@//                                                                        @D@C@
9825@200@exec tcache_select 'T9825' as temp_table_suffix
	,'T9800' as fm_temp_table_suffix @D@restart@
9825@202@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@204@exec tdat_SET QUERY_BAND = 'BDRO="NFM Daily";' for SESSION @D@C@
9825@210@exec !_?fastload_dir?/run_admin_queue_monitor ?request_id? @D@C@
9825@211@//*                                                          @D@C@
9825@212@//*  2020-09-10 AJG...                                       @D@C@
9825@213@//* get date parms for drug hist from validation_cde         @D@C@
9825@214@//*                                                          @D@C@
9825@215@exec cache_select value_cde as w_cntr_end_dte
                     from validation_code where table_nme = 'bdro_job_table'
                                           and column_nme = 'cntr_end_dte'  @D@C@
9825@216@exec cache_select value_cde as w_min_end_dte
                     from validation_code where table_nme = 'bdro_job_table'
                                           and column_nme = 'min_end_dte'  @D@C@
9825@220@//* contains parameters stored in the validation_code table			 *@D@C@
9825@230@exec tdat_drop table fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? @D@C@
9825@240@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        column_nme                      CHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        prod_srce_cde                   INTEGER NOT NULL,
        rule_cat_cde                    CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX ( column_nme ,prod_srce_cde ) @D@C@
9825@250@//exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
        t_bdro_job_parms fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? bfrpbdrodruglst() @D@C@
9825@260@exec !_?fastload_dir?/fastload_informix_to_teradata ?request_id?
        t_bdro_job_parms fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? bfrpbdrodruglst() @D@C@
9825@270@//*                                                                             * @D@C@
9825@280@//* Unload all active rules from the 'old' review table                         * @D@C@
9825@290@//*                                                                             * @D@C@
9825@300@exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!? @D@C@
9825@310@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_category_cde		CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	access_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	form_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_originator_dsc		VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC default ' ',
	rule_nme			VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	alt_group_type			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_source_ind     		CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	new_drug_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	cat_id				SMALLINT NOT NULL,
	cntr_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	oper_id				INTEGER NOT NULL,
	comment_txt			VARCHAR(260) CHARACTER SET LATIN NOT CASESPECIFIC)
	PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@320@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
	t_nf_rule_cat_batch   fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_nf_rule_cat_batch
        (ndc9_nbr            	char(9) not null
        ,group_type          	char(1) not null
        ,rule_id             	integer
	,crs_rule_eff_dte    	DATE
	,crs_rule_end_dte    	DATE
        ,rule_cat_cde        	char(3) not null
        ,access_ind          	char(1) not null
        ,form_ind            	char(1) not null
        ,orig_dsc            	varchar(60) default ' ' 
        ,rule_nme            	varchar(120)
        ,alt_group_type      	char(2) not null
        ,rule_source_ind     	char(1) not null
        ,new_drug_ind        	char(1) not null
        ,cat_id              	smallint not null
	,eff_dte             	DATE not null
	,end_dte             	DATE not null
        ,oper_id             	integer not null
        ,comment_txt         	varchar(250));
        INSERT INTO t_nf_rule_cat_batch
        SELECT  ndc9_nbr
                ,case when group_type = 'MD' then 'Y'
                        else 'N' end
                ,rule_id
                ,crs_rule_eff_dte
                ,crs_rule_end_dte
                ,rule_cat_cde
                ,access_ind
                ,case when access_ind = 'N' then 'Y'
                        else 'N' end
                ,source_flag
                ,ident_dsc
                ,group_type
                ,'R'
                ,new_drug_ind
                ,cat_id
                ,eff_dte
                ,end_dte
                ,oper_id
                ,substr(comment_txt,1,250)
	FROM 	bdro_rule_cmprhnsv
	WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
	AND 	cat_id <= 0
	AND 	(form_ind = 'Y' OR access_ind = 'Y');
        INSERT INTO t_nf_rule_cat_batch
        SELECT  ndc9_nbr
                ,case when group_type = 'MD' then 'Y'
                        else 'N' end
               ,rule_id
               ,crs_rule_eff_dte
               ,crs_rule_end_dte
               ,rule_cat_cde
               ,'N'
               ,'N'
               ,source_flag
               ,ident_dsc
               ,group_type
                ,'R'
               ,new_drug_ind
               ,cat_id
               ,eff_dte
               ,end_dte
               ,oper_id * -1
               ,substr(comment_txt,1,250)
	FROM 	bdro_rule_cmprhnsv
	WHERE 	now() BETWEEN oper_insert_tms AND oper_end_tms
	AND 	cat_id <= 0
	AND 	form_ind = 'N'
	AND 	access_ind = 'N';" @D@C@
9825@330@//*                                                                             * @D@C@
9825@340@//* Unload all of the active 'Decisioned' rules from the Maint table            * @D@C@
9825@350@//*                                                                             * @D@C@
9825@360@exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!? @D@C@
9825@370@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_category_cde		CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	access_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	form_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_originator_dsc		VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC default ' ',
	rule_nme			VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	alt_group_type			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_source_ind 		CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	new_drug_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	cat_id				SMALLINT NOT NULL,
	cntr_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	oper_id				INTEGER NOT NULL,
	comment_txt			VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC)
	PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@380@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
	t_nf_rule_cat fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_nf_rule_cat
	(ndc9_nbr            text not null
	,group_type          text not null
	,rule_id             integer
	,crs_rule_eff_dte    DATE not null
	,crs_rule_end_dte    DATE not null
	,rule_cat_cde        text not null
	,access_ind          text not null
	,form_ind            text not null
	,orig_dsc            text default ' ' 
	,rule_nme            text
	,alt_group_type      text not null
	,rule_source_ind     text not null
	,new_drug_ind        text not null
	,cat_id              smallint not null
	,eff_dte             DATE  null
	,end_dte             DATE  null
	,oper_id             integer not null
	,comment_txt         text
	);
	INSERT INTO t_nf_rule_cat
	SELECT  distinct ndc9_nbr
            ,case when group_type = 'MD' then 'Y'
                    else 'N' end
	       ,rule_id    
	       ,crs_rule_eff_dte
	       ,crs_rule_end_dte
	       ,rule_cat_cde 
	       ,access_ind
	       ,form_ind
	       ,source_flag
	       ,ident_dsc  
	       ,group_type 
	       ,'M'                
	       ,'N'                
	       ,cat_id     
	       ,eff_dte    
	       ,end_dte    
	       ,oper_id    
	       ,' ' 
	FROM 	bdro_rule_cmprhnsv
	WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
	and cat_id > 0;" @D@C@
9825@385@exec tdat_update fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!?
        set rule_originator_dsc = ' '
        where rule_originator_dsc is null  @D@C@
9825@386@exec tdat_update fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!?
        set comment_txt = ' '
        where comment_txt is null  @D@C@
9825@387@exec tdat_update fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!?
        set rule_originator_dsc = ' '
        where rule_originator_dsc is null  @D@C@
9825@388@exec tdat_update fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!?
        set comment_txt = ' '
        where comment_txt is null  @D@C@
9825@390@//*                                                                             * @D@C@
9825@400@//*  Populate the permanent 'drug_rule' and 'drug_rule_arch' tables             * @D@C@
9825@410@//*                                                                             * @D@C@
9825@420@exec tdat_delete from fr_proddb.BDRO_NF_drugs_rules_ndc ALL @D@C@
9825@425@exec tdat_delete from fr_proddb.BDRO_NF_drugs_rules_arch_ndc
        where 	run_dte < current_date -  INTERVAL '8' day @D@C@
9825@430@exec tdat_delete from fr_proddb.BDRO_NF_drugs_rules_arch_ndc
	Where 	run_dte = current_date @D@C@
9825@440@exec tdat_insert into fr_proddb.BDRO_NF_drugs_rules_ndc
	Select 	*
	from 	fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!? @D@C@
9825@450@exec tdat_insert into fr_proddb.BDRO_NF_drugs_rules_ndc
	Select 	*
	from 	fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!? @D@C@
9825@460@exec tdat_insert into fr_proddb.BDRO_NF_drugs_rules_arch_ndc
	Select 	current_date,
		a.* 
	From 	fr_proddb.BDRO_NF_drugs_rules_ndc a @D@C@
9825@470@//*                                                                                * @D@C@
9825@480@exec tdat_collect stats on fr_proddb.BDRO_NF_drugs_rules_ndc column (ndc9_nbr, rule_id) @D@C@
9825@490@exec tdat_collect stats on fr_proddb.BDRO_NF_drugs_rules_arch_ndc column (run_dte) @D@C@
9825@492@//*                                                                                * @D@C@
9825@510@//*  Retrieve brand/group-type/rule-id and rule-eff-dte from Review and Maint   * @D@C@
9825@520@//*  tables.  This is needed to ensure that NF Targeted rules are not added     * @D@C@
9825@530@//*  if the same rule already exists as targeted/non-form or targeted formulary * @D@C@
9825@540@//*  (targeted/non-form = access/non-form)                                      * @D@C@
9825@550@//*                                                                             * @D@C@
9825@560@exec tdat_drop table fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!? @D@C@
9825@570@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL)
	PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@580@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
	t_nf_rc_form     fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_nf_rc_form
	(ndc9_nbr            text not null
	,group_type          text not null
	,rule_id             integer
	,crs_rule_eff_dte    DATE not null
	,crs_rule_end_dte    DATE not null);
	INSERT INTO t_nf_rc_form
        select *
        from (
                SELECT  ndc9_nbr
                       ,group_type
                       ,rule_id
                       ,crs_rule_eff_dte
                       ,crs_rule_end_dte
                FROM    bdro_rule_cmprhnsv
                WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
                AND     access_ind = 'N'
                AND     cat_id <= 0
	        AND     form_ind = 'Y'
                Group by 1,2,3,4,5
                union
                SELECT  ndc9_nbr
                       ,group_type
                       ,rule_id
                       ,crs_rule_eff_dte
                       ,crs_rule_end_dte
                FROM    bdro_rule_cmprhnsv
                WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
                AND     form_ind = 'Y'
                and rule_id > 0
                Group by 1,2,3,4,5) a;" @D@C@
9825@590@exec tdat_insert into fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!?
	Select distinct 
		ndc9_nbr
		,alt_group_type
		,rule_id
		,rule_eff_dte
		,rule_exp_dte
	from 	fr_proddb.BDRO_NF_drugs_rules_ndc 
	where 	access_ind = 'Y' @D@C@
9825@600@//* ===========================================================================    * @D@C@
9825@610@//*  Extract the current list of form/non-form form-ids for All  brands            * @D@C@
9825@620@//*  (Use for Access Rules)                                                        * @D@C@
9825@630@//* ===========================================================================    * @D@C@
9825@640@exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!? @D@C@
9825@650@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	ndc_nbr				CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	status_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	BRAND_NME			VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	non_form_eff_dte		DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	non_form_exp_dte		DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'))
	UNIQUE PRIMARY INDEX (form_id ,ndc_nbr , status_ind, non_form_eff_dte) @D@C@
9825@660@exec tdat_insert into fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!?
	SELECT DISTINCT 
		FORMDRUG.FORMULARY_ID,
		FORMDRUG.PRODUCT_SERVICE_ID AS NDC, 
                case when STATUS_IND not in ('N','Y') then 'N'
                        else STATUS_IND end,
		MEDCUR.BRAND_NME, 
		FORMDRUG.eff_dte,
                case when CAST(FORMDRUG.end_dte as DATE) > '2090-01-01'
                        then CAST ('3000-12-31' AS DATE)
                        else CAST(FORMDRUG.end_dte as DATE) end
	FROM 	fr_proddb_v.formulary_chapter_product FORMDRUG 
		INNER JOIN IW_DEFLT_PRODDB_V.MEDICAL_PRODUCT_CURRENT MEDCUR 
	ON 	FORMDRUG.PRODUCT_SERVICE_ID = MEDCUR.PRODUCT_SERVICE_ID
	WHERE 	SUBSTR(FORMDRUG.FORMULARY_ID, 2,4)  <> '22XX'
	and 	SUBSTR(FORMDRUG.FORMULARY_ID, 2,4)  <> '69XX'
	and	FORMDRUG.FORMULARY_ID  <> ' '
	and 	FORMDRUG.RNK = '1'
	/* and 	STATUS_IND   = 'N' */
	and 	FORMDRUG.END_DTE > '2013-12-31'
	and 	FORMDRUG.EFF_DTE <> '1800-01-01'
	and 	FORMDRUG.END_EFF_DTE = '3000-12-31'
	and 	MEDCUR.OBSOLETE_DTE > '2013-12-31' @D@C@
9825@670@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!? column (ndc_nbr) @D@C@
9825@680@exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? @D@C@
9825@690@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc_nbr                         CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        status_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        BRAND_NME                       VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        non_form_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        non_form_exp_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'))
        UNIQUE PRIMARY INDEX (form_id ,ndc_nbr , status_ind, non_form_eff_dte) @D@C@
9825@700@exec tdat_insert into fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!?
       SELECT   DISTINCT
                FORMDRUG.FORMULARY_ID,
                FORMDRUG.ndc_nbr,
                FORMDRUG.STATUS_IND,
                MEDCUR.BRAND_NME,
                FORMDRUG.eff_dte,
                FORMDRUG.end_dte
        FROM    fr_proddb_v.form_ndc_status_override FORMDRUG
                INNER JOIN IW_DEFLT_PRODDB_V.MEDICAL_PRODUCT_CURRENT MEDCUR
        ON      FORMDRUG.ndc_nbr = MEDCUR.PRODUCT_SERVICE_ID
                INNER JOIN fr_proddb.bdro_cntr_ndcs CNS
        ON      FORMDRUG.ndc_nbr = CNS.NDC_NBR
        WHERE   SUBSTR(FORMDRUG.FORMULARY_ID, 2,4)  <> '22XX'
        and     SUBSTR(FORMDRUG.FORMULARY_ID, 2,4)  <> '69XX'
        and     FORMDRUG.FORMULARY_ID  <> ' '
        and     STATUS_IND   = 'N'
        and     FORMDRUG.END_DTE > '2013-12-31'
        and     MEDCUR.OBSOLETE_DTE > '2013-12-31' @D@C@
9825@710@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? column (ndc_nbr) @D@C@
9825@720@//* ===========================================================================    * @D@C@
9825@730@//*                                                                                * @D@C@
9825@740@//*  . Create new table of all Groups in client profile along with all form-ids    * @D@C@
9825@750@//*  . populated for each group.                                                   * @D@C@
9825@760@//*                                                                                * @D@C@
9825@770@exec tdat_drop table fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!? @D@C@
9825@780@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        GROUP_NO                        VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC,
        FORM_ID                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31')
) PRIMARY INDEX ( GROUP_NO) @D@C@
9825@790@exec tdat_insert into fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!?
        SELECT  DISTINCT a.operational_id
                ,Substr(b.formulary_id,6,5) AS FORM_ID
                ,b.formulary_eff_dte
                ,case when b.end_eff_dte < b.formulary_end_dte then b.end_eff_dte
                        else b.formulary_end_dte end
        FROM    IW_DEFLT_PRODDB_V.CLIENT_CURRENT a,
                IW_DEFLT_PRODDB_V.CLIENT_PRODUCT_ITEM_RH b
        WHERE   a.client_id = b.client_id
        AND     a.client_src_cde = b.client_src_cde
        AND     b.end_eff_dte > b.formulary_eff_dte
        AND     b.formulary_id > '0000000000'
        AND     TO_NUMBER(Substr(b.formulary_id,6,5)) is not null
        AND     b.end_eff_dte = '3000-12-31' @D@C@
9825@820@//exec tdat_update fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!?
        set     grp_form_eff_dte = '2014-01-01'
        where   grp_form_eff_dte < '2014-01-01' @D@C@
9825@830@exec tdat_update fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!?
        set     grp_form_end_dte = '3000-12-31'
        where   grp_form_end_dte > '2090-01-01'
        and     grp_form_end_dte < '3000-12-31' @D@C@
9825@840@exec tdat_CREATE VOLATILE TABLE vt_BDRO_CLNT_Profile_Groups AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY   GROUP_NO, FORM_ID) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY GROUP_NO, FORM_ID
                                  ORDER BY grp_form_eff_dte, grp_form_end_dte) as range_dte_seq,
                GROUP_NO,
                FORM_ID,
                grp_form_eff_dte,
                grp_form_end_dte
        FROM    fr_workdb.wt_BDRO_CLNT_Profile_Groups_0_?!temp_table_suffix!?
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@850@exec tdat_collect stats on vt_BDRO_CLNT_Profile_Groups column (group_key_id, range_dte_seq) @D@C@
9825@860@exec tdat_collect stats on vt_BDRO_CLNT_Profile_Groups index (group_key_id) @D@C@
9825@870@exec tdat_drop table fr_workdb.wt_BDRO_CLNT_Profile_Groups_?!temp_table_suffix!? @D@C@
9825@880@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_CLNT_Profile_Groups_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        GROUP_NO                        CHAR(15) CHARACTER SET LATIN NOT CASESPECIFIC,
        FORM_ID                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31')
) PRIMARY INDEX ( GROUP_NO) @D@C@
9825@890@exec tdat_insert into fr_workdb.wt_BDRO_CLNT_Profile_Groups_?!temp_table_suffix!?
WITH RECURSIVE  BDRO_CLNT_Profile_Groups_fin (group_key_id_f,
                                GROUP_NO_f, FORM_ID_f,
                                grp_form_eff_dte_f, grp_form_end_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        GROUP_NO, FORM_ID,
                        grp_form_eff_dte, grp_form_end_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_BDRO_CLNT_Profile_Groups
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        GROUP_NO, FORM_ID,
                        case when grp_form_end_dte_f + interval '1' day between grp_form_eff_dte and grp_form_end_dte then grp_form_eff_dte_f
                                when grp_form_end_dte between grp_form_eff_dte_f and grp_form_end_dte_f then grp_form_eff_dte_f
                                else grp_form_eff_dte end,
                        grp_form_end_dte,
                        case when grp_form_end_dte_f + interval '1' day between grp_form_eff_dte and grp_form_end_dte
                                        then range_per_seq_f
                                when grp_form_end_dte between grp_form_eff_dte_f and grp_form_end_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_BDRO_CLNT_Profile_Groups
                        join BDRO_CLNT_Profile_Groups_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  GROUP_NO_f,
                FORM_ID_f,
                min(grp_form_eff_dte_f),
                max(grp_form_end_dte_f)
        FROM    BDRO_CLNT_Profile_Groups_fin
        group by 1,2, range_per_seq_f @D@C@
9825@900@exec tdat_collect stats on fr_workdb.wt_BDRO_CLNT_Profile_Groups_?!temp_table_suffix!? index(group_no) @D@C@
9825@902@exec tdat_drop table vt_BDRO_CLNT_Profile_Groups @D@C@
9825@910@//*                                                                                * @D@C@
9825@920@//* Mar/2019: AJG                                                                  * @D@C@
9825@930@//*                                                                                * @D@C@
9825@940@//* Changes added to retrieve additional product-ids from a new source view:       * @D@C@
9825@950@//*    'IW_DEFLT_PRODDB_V.Client_Product_Rh'.                                      * @D@C@
9825@960@//*                                                                                * @D@C@
9825@970@//* Old process needs to remain because some product-ids were not included in      * @D@C@
9825@980@//* in the above Product_Rh view.                                                  * @D@C@
9825@990@//*                                                                                * @D@C@
9825@1000@//* Step1: Extract all relevant prod-ids within the selected client hierarchy      * @D@C@
9825@1010@//* ===========================================================================    * @D@C@
9825@1020@//*                                                                                * @D@C@
9825@1030@//*  1A) IDENTIFY STEP-THERAPY/PA PRODUCTS SETUP IN CRS                            * @D@C@
9825@1040@//*  1B) IDENTIFY PST PRODUCTS SETUP IN CRS                                        * @D@C@
9825@1050@//*  1C) IDENTIFY TRADITIONAL PRIOR-AUTH PRODUCTS SETUP IN CRS                     * @D@C@
9825@1060@//*                                                                                * @D@C@
9825@1070@//* BDRO SQL 1 - QUERY PULLS ALL STEP-THERAPY, PRIOR-AUTH, PST PRODUCTS ASSIGNED   * @D@C@
9825@1080@//* TO CLIENTS AND GROUPS SEPARATE PRODUCT COLUMNS INTO A SINGLE PRODUCT_ID.       * @D@C@
9825@1090@//* STEP-THERAPY AND TRADITIONAL PRIOR-AUTH PRODUCTS ARE STORED ON SCREEN25 UNDER  * @D@C@
9825@1100@//* SEPARATE COLUMNS.  PST PRODUCT ASSIGNMENTS ARE STORED ON SCREEN37.  PURPOSE OF * @D@C@
9825@1110@//* THIS QUERY IS TO EXTRACT ALL APPLICABLE CLINICAL PRODUCTS AND CONSOLIDATE THEM * @D@C@
9825@1120@//* INTO A SINGLE TABLE (PRODUCT SOURCE CODE OF 69 - STEP-THERAPY, 58 - PST,       * @D@C@
9825@1130@//* 65 - TRADITIONAL PRIOR-AUTH                                                    * @D@C@
9825@1140@//*                                                                                * @D@C@
9825@1150@exec tdat_drop table fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!? @D@C@
9825@1160@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        client_prod_type                CHAR(1) CHARACTER SET UNICODE NOT CASESPECIFIC NOT NULL,
        group_operational_id            VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_eff_dte                     DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_term_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        product_id                      INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL,
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'))
        PRIMARY INDEX (group_operational_id) @D@C@
9825@1240@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!?
        SELECT  '1',
                SCRN.OPERATIONAL_ID,
                CLT.EFF_DTE AS GRP_EFF_DT,
                CLT.TERMINATION_DTE AS GRP_TERM_DT,
                SCRN.DUR_PRODUCT_ID,
                SCRN.DUR_PRODUCT_SRC_CDE,
                SCRN.EFF_DTE AS PROD_EFF_DT,
                SCRN.END_DTE AS PROD_EXP_DT,
                c.form_id,
                c.grp_form_eff_dte,
                c.grp_form_end_dte,
                CASE WHEN c.grp_form_eff_dte < PROD_EFF_DT THEN PROD_EFF_DT
                        ELSE c.grp_form_eff_dte END,
                CASE WHEN c.grp_form_end_dte > PROD_EXP_DT THEN PROD_EXP_DT
                        ELSE c.grp_form_end_dte END
        FROM    IW_DEFLT_PRODDB_V.CLIENT_CLINICAL_PARAMETER_RH SCRN,
                fr_proddb.BDRO_formxref c,
                IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
        where   SCRN.OPERATIONAL_ID = c.group_no
        And     (c.grp_form_eff_dte between PROD_EFF_DT and PROD_EXP_DT
                OR
                PROD_EFF_DT  between c.grp_form_eff_dte and c.grp_form_end_dte)
        and     SCRN.DUR_PRODUCT_ID <> 0
        and     SCRN.EFF_DTE > '1800-01-01'
        and     SCRN.END_DTE > '2013-12-31'
        and     SCRN.OPERATIONAL_ID = CLT.OPERATIONAL_ID
        and     CLT.EFF_DTE > '1800-01-01'
        and     CLT.TERMINATION_DTE > '2013-12-31'
        and     CLT.EFF_DTE <= CLT.TERMINATION_DTE
        and     SCRN.END_OPERATIONAL_DTE = '3000-12-31'
        and     CLT.CLIENT_TYPE_CDE IN ('GR','BG')
        and     c.group_no not in (
                select group_no
                from fr_workdb.BDRO_formxref_notin_clp) @D@C@
9825@1250@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!?
        SELECT  '2',
                SCRN.OPERATIONAL_ID,
                CLT.EFF_DTE AS GRP_EFF_DT,
                CLT.TERMINATION_DTE AS GRP_TERM_DT,
                SCRN.prior_auth_product_id,
                SCRN.prior_auth_product_src_cde,
                SCRN.EFF_DTE AS PROD_EFF_DT,
                SCRN.END_DTE AS PROD_EXP_DT,
                c.form_id,
                c.grp_form_eff_dte,
                c.grp_form_end_dte,
                CASE WHEN c.grp_form_eff_dte < PROD_EFF_DT THEN PROD_EFF_DT
                        ELSE c.grp_form_eff_dte END,
                CASE WHEN c.grp_form_end_dte > PROD_EXP_DT THEN PROD_EXP_DT
                        ELSE c.grp_form_end_dte END
        FROM    IW_DEFLT_PRODDB_V.CLIENT_CLINICAL_PARAMETER_RH SCRN,
                fr_proddb.BDRO_formxref c,
                IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
        where   SCRN.OPERATIONAL_ID = c.group_no
        And     (c.grp_form_eff_dte between PROD_EFF_DT and PROD_EXP_DT
                OR
                PROD_EFF_DT  between c.grp_form_eff_dte and c.grp_form_end_dte)
        and     SCRN.prior_auth_product_id <> 0
        and     SCRN.EFF_DTE > '1800-01-01'
        and     SCRN.END_DTE > '2013-12-31'
        and     SCRN.OPERATIONAL_ID = CLT.OPERATIONAL_ID
        and     CLT.EFF_DTE > '1800-01-01'
        and     CLT.TERMINATION_DTE > '2013-12-31'
        and     CLT.EFF_DTE <= CLT.TERMINATION_DTE
        and     SCRN.END_OPERATIONAL_DTE = '3000-12-31'
        and     CLT.CLIENT_TYPE_CDE IN ('GR','BG')
        and     c.group_no not in (
                select group_no
                from fr_workdb.BDRO_formxref_notin_clp) @D@C@
9825@1260@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!?
        SELECT  '3',
                SCRN.OPERATIONAL_ID,
                CLT.EFF_DTE AS GRP_EFF_DT,
                CLT.TERMINATION_DTE AS GRP_TERM_DT,
                SCRN.formulary_covg_rvw_product_id,
                58 AS PROD_SOURCE_CDE,
                SCRN.EFF_DTE AS PROD_EFF_DT,
                SCRN.END_DTE AS PROD_EXP_DT,
                c.form_id,
                c.grp_form_eff_dte,
                c.grp_form_end_dte,
                CASE WHEN c.grp_form_eff_dte < PROD_EFF_DT THEN PROD_EFF_DT
                        ELSE c.grp_form_eff_dte END,
                CASE WHEN c.grp_form_end_dte > PROD_EXP_DT THEN PROD_EXP_DT
                        ELSE c.grp_form_end_dte END
        FROM    IW_DEFLT_PRODDB_V.CLIENT_CLINICAL_PARAMETER_RH SCRN,
                fr_proddb.BDRO_formxref c,
                IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
        where   SCRN.OPERATIONAL_ID = c.group_no
        And     (c.grp_form_eff_dte between PROD_EFF_DT and PROD_EXP_DT
                OR
                PROD_EFF_DT  between c.grp_form_eff_dte and c.grp_form_end_dte)
        and     SCRN.formulary_covg_rvw_product_id <> 0
        and     SCRN.EFF_DTE > '1800-01-01'
        and     SCRN.END_DTE > '2013-12-31'
        and     SCRN.OPERATIONAL_ID = CLT.OPERATIONAL_ID
        and     CLT.EFF_DTE > '1800-01-01'
        and     CLT.TERMINATION_DTE > '2013-12-31'
        and     CLT.EFF_DTE <= CLT.TERMINATION_DTE
        and     SCRN.END_OPERATIONAL_DTE = '3000-12-31'
        and     CLT.CLIENT_TYPE_CDE IN ('GR','BG')
        and     c.group_no not in (
                select group_no
                from fr_workdb.BDRO_formxref_notin_clp) @D@C@
9825@1270@exec tdat_collect stats on fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!? INDEX(group_operational_id) @D@C@
9825@1280@//*                                                                                * @D@C@
9825@1290@//* Mar/2019: AJG                                                                  * @D@C@
9825@1300@//* Step2: Extract any additional product_id using the new 'product_Rh' view       * @D@C@
9825@1310@//* ===========================================================================    * @D@C@
9825@1320@//* . Code added to retrieve product-id, prod-srce-cde,                            * @D@C@
9825@1330@//*   prod-eff-dte and prod-exp-dte from Client_Product_RH table.                  * @D@C@
9825@1340@//*                                                                                * @D@C@
9825@1350@exec tdat_drop table fr_workdb.wt_BDRO_group_prod_CLT_RH1_?!temp_table_suffix!? @D@C@
9825@1360@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_group_prod_CLT_RH1_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        client_id            INTEGER NOT NULL,
        client_src_cde       BYTEINT NOT NULL,
        group_operational_id VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        product_id           INTEGER NOT NULL,
        product_source_cde   INTEGER NOT NULL,
        prod_eff_dte         DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte         DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        operational_dte      DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX (group_operational_id) @D@C@
9825@1370@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_CLT_RH1_?!temp_table_suffix!?
	select  cp.client_id,
		cp.client_src_cde,
		cbh.group_operational_id,
		cp.product_id,
		cp.product_src_cde,
		min(cp.eff_dte),
		max(cp.end_dte),
		max(cp.operational_dte)
	from 	IW_DEFLT_PRODDB_V.Client_Product_Rh cp,
		iw_deflt_proddb_v.client_billing_hierarchy_Curr  CBH
	Where 	cp.product_src_cde IN (58,65,69)
	and 	cbh.Group_client_id = cp.client_id
	and 	cbh.group_client_src_cde = cp.client_src_cde
	and 	cp.end_dte > '2013-12-31'
	and 	cp.end_dte >= cp.eff_dte
	and 	current_date between cp.operational_dte and cp.end_eff_dte
	Group by 1,2,3,4,5 @D@C@
9825@1380@//*                                                                                * @D@C@
9825@1390@exec tdat_drop table fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? @D@C@
9825@1400@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        client_id                       INTEGER NOT NULL,
        client_src_cde                  BYTEINT NOT NULL,
        group_operational_id            VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_eff_dte                     DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_term_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        product_id                      INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65),
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'))
        PRIMARY INDEX (group_operational_id) @D@C@
9825@1410@//*                                                                                * @D@C@
9825@1420@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!?
        select  RH1.client_id,
                RH1.client_src_cde,
                RH1.group_operational_id,
                CAST(CLT.EFF_DTE AS DATE FORMAT 'YYYYMMDD') AS GRP_EFF_DT,
                CAST(CLT.TERMINATION_DTE AS DATE FORMAT 'YYYYMMDD') AS GRP_TERM_DT,
                RH1.product_id,
                RH1.product_source_cde,
                RH1.prod_eff_dte,
                RH1.prod_exp_dte,
                xref.form_id,
                xref.grp_form_eff_dte,
                xref.grp_form_end_dte,
                CASE WHEN xref.grp_form_eff_dte < RH1.prod_eff_dte THEN RH1.prod_eff_dte
                        ELSE xref.grp_form_eff_dte END,
                CASE WHEN xref.grp_form_end_dte > RH1.prod_exp_dte THEN RH1.prod_exp_dte
                        ELSE xref.grp_form_end_dte END
        from    fr_workdb.wt_BDRO_group_prod_CLT_RH1_?!temp_table_suffix!? RH1,
                IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT,
                fr_proddb.BDRO_formxref xref
        Where   xref.group_no      = RH1.group_operational_id
        and     CLT.OPERATIONAL_ID = RH1.group_operational_id
        and     CLT.CLIENT_TYPE_CDE IN ('GR','BG')
        and     (  xref.grp_form_eff_dte between RH1.prod_eff_dte and RH1.prod_exp_dte
                OR RH1.prod_eff_dte  between xref.grp_form_eff_dte and xref.grp_form_end_dte)
        and     RH1.product_id <> 0
        and     RH1.prod_eff_dte <> 0
        and     RH1.prod_exp_dte > '2013-12-31'
        and     CLT.EFF_DTE > '1800-01-01'
        and     CLT.TERMINATION_DTE > '2013-12-31'
        and     CLT.EFF_DTE <= CLT.TERMINATION_DTE
        and     xref.group_no not in (
                select group_no
                from fr_workdb.BDRO_formxref_notin_clp) @D@C@
9825@1430@exec tdat_collect stats on fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? INDEX(group_operational_id) @D@C@
9825@1440@//*                                                                                * @D@C@
9825@1450@//*  Now insert any group rows retrieved from the old method into the new table:   * @D@C@
9825@1460@//*  'fr_workdb.wt_BDRO_group_prod_CLT_RH2'                                        * @D@C@
9825@1470@//*                                                                                * @D@C@
9825@1480@exec tdat_insert into fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!?
        Select 	0,
		0,
		group_operational_id,
		grp_eff_dte,
		grp_term_dte,
		product_id,
		product_source_cde,
		prod_eff_dte,
		prod_exp_dte,
		form_id,
		grp_form_eff_dte,
		grp_form_end_dte,
		calc_eff_dte,
		calc_exp_dte
	from 	fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!? a
	where 	(a.group_operational_id,a.product_id,a.product_source_cde,a.form_id) NOT IN
		(Select	group_operational_id,
			product_id,
			product_source_cde,
			form_id
		from 	fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? b
		group by 1,2,3,4) @D@C@
9825@1490@exec tdat_collect stats on fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? INDEX(group_operational_id) @D@C@
9825@1500@//*                                                                                * @D@C@
9825@1510@exec tdat_drop table fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? @D@C@
9825@1520@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_operational_id            VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_eff_dte                     DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_term_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31', DATE '2999-12-31'),
        product_source_cde              INTEGER NOT NULL,
        prod_id                         INTEGER NOT NULL,
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL  COMPRESS (DATE '3000-12-31'))
        PRIMARY INDEX ( group_operational_id) @D@C@
9825@1530@//*                                                                                * @D@C@
9825@1540@exec tdat_insert into fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
        SELECT  CL.CARRIER_OPERATIONAL_ID,
                SCRN.group_operational_id,
                'N',  /*  Default group_type to Comm */
                SCRN.grp_eff_dte,
                case when SCRN.grp_term_dte > '2040-01-01'
                        then CAST ('3000-12-31' AS DATE FORMAT 'YYYY-MM-DD')
                        else SCRN.grp_term_dte end,
                SCRN.form_id,
                SCRN.grp_form_eff_dte,
                SCRN.grp_form_end_dte,
                SCRN.product_source_cde,
                SCRN.product_id,
                SCRN.calc_eff_dte,
                case when SCRN.calc_exp_dte > '2040-01-01'
                        then CAST ('3000-12-31' AS DATE FORMAT 'YYYY-MM-DD')
                        else SCRN.calc_exp_dte end
        FROM    fr_workdb.wt_BDRO_group_prod_CLT_RH2_?!temp_table_suffix!? SCRN
                INNER JOIN IW_DEFLT_PRODDB_V.CLIENT_BILLING_HIERARCHY_CURR CL
        ON      SCRN.group_operational_id = CL.GROUP_OPERATIONAL_ID     /*CLIENT HIERARCHY TABLE CURRENT/HISTORY FROM CBM*/
                INNER JOIN IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
        ON      SCRN.group_operational_id = CLT.OPERATIONAL_ID          /*CLIENT CURRENT TBL, Get eff_dte and Term date*/
        and     CLT.CLIENT_TYPE_CDE IN ('GR','BG')
        WHERE   CLT.EFF_DTE  > '1800-01-01'                             /*GROUP EFFECTIVE DATE IS VALID*/
        and     CL.CLIENT_ORG_OPERATIONAL_ID <> ''                      /*ORGANIZATION ID IS ASSIGNED*/
        and     CLT.TERMINATION_DTE > '2013-12-31'                      /*PULLS GROUPS THAT ARE ACTIVE AS OF 2014*/
        and     CLT.EFF_DTE <= CLT.TERMINATION_DTE
        group by 1,2,3,4,5,6,7,8,9,10,11,12 @D@C@
9825@1541@exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? a,
                (Select group_operational_id,
                        eff_dte,
                        MEDICARE_D_IND,
                        MEDICARE_D_TYPE_CDE
                from    IW_DEFLT_PRODDB_V.CLIENT_MED_D_SETTINGS_RH
                where   end_eff_dte = '3000-12-31') b,
                (Select group_operational_id,
                        max(eff_dte) as max_eff_dte
                from    IW_DEFLT_PRODDB_V.CLIENT_MED_D_SETTINGS_RH
                where   end_eff_dte = '3000-12-31'
                group by 1) c
        set     group_type = 'Y'
        where   a.group_operational_id = b.group_operational_id
        and     b.group_operational_id = c.group_operational_id
        and     b.eff_dte = c.max_eff_dte
        and     b.MEDICARE_D_IND = 'Y'
        and     b.MEDICARE_D_TYPE_CDE <> '4'@D@C@
9825@1542@//* END OF CHANGES: Mar/2019: AJG                                                  * @D@C@
9825@1543@//*                                                                                * @D@C@
9825@1544@//*                                                                                * @D@C@
9825@1545@//* 2021-04-14 AJG: Add code to exclude Open-Enrollment and                        * @D@C@
9825@1546@//*                 'Test' Groups.                                                 * @D@C@
9825@1547@//*                                                                                * @D@C@
9825@1548@exec tdat_drop table fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!? @D@C@
9825@1550@exec tdat_CREATE SET TABLE fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        group_operational_id            VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL 
                                                         COMPRESS ('Y','N','T'),
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65,0),
        prod_id                         INTEGER NOT NULL COMPRESS(0),
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL
                                                         COMPRESS (DATE '1800-01-01'))
        PRIMARY INDEX ( group_operational_id) @D@C@
9825@1551@//*                                                                                * @D@C@
9825@1552@//*  Open-Enrollment Groups...                                                     * @D@C@
9825@1553@//*                                                                                * @D@C@
9825@1554@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
        column (group_operational_id,group_type)  @D@C@
9825@1556@exec tdat_insert into fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!?
        SELECT a.group_operational_id,
               a.group_type,
               a.product_source_cde,
               a.prod_id,
               a.prod_eff_dte
          From fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? a,
               IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
         where a.group_operational_id = CLT.OPERATIONAL_ID
           and CLT.CLIENT_TYPE_CDE IN ('GR','BG')
           and a.group_type = 'Y'
           and CLT.open_enroll_ind = 'Y'
           and current_date < a.prod_eff_dte
         group by 1,2,3,4,5  @D@C@
9825@1557@//*                                                                                * @D@C@
9825@1558@//*  Test Groups...                                                                * @D@C@
9825@1559@//*                                                                                * @D@C@
9825@1560@exec tdat_insert into fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!?
        SELECT distinct a.group_operational_id,
               'T',
               0,
               0,
               '1800-01-01'
          From fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? a,
               IW_DEFLT_PRODDB_V.CLIENT_CURRENT CLT
         where a.group_operational_id = CLT.OPERATIONAL_ID
           and CLT.CLIENT_TYPE_CDE IN ('GR','BG')
           and CLT.non_production_group_ind = 'Y' @D@C@
9825@1561@//*                                                                                * @D@C@
9825@1562@//*  Delete the newly defined excluded groups                                      * @D@C@
9825@1563@//*                                                                                * @D@C@
9825@1564@exec tdat_delete a
        from    fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? a,
                fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!? b
        where   a.group_operational_id = b.group_operational_id
        and     b.group_type = 'T'  @D@C@
9825@1566@//*                                                                                * @D@C@
9825@1568@exec tdat_delete a
        from    fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? a,
                fr_workdb.wt_bdro_NF_excluded_groups_?!temp_table_suffix!? b
        where   a.group_operational_id = b.group_operational_id
        and     a.group_type = 'Y'
        and     a.product_source_cde = b.product_source_cde
        and     a.prod_id = b.prod_id
        and     a.prod_eff_dte = b.prod_eff_dte  @D@C@
9825@1570@//*                                                                                * @D@C@
9825@1571@//* END OF CHANGES: Apr/2021: AJG                                                  * @D@C@
9825@1580@//* ===========================================================================    * @D@C@
9825@1590@//*   Remove test or dummy groups or carriers                                      * @D@C@
9825@1600@exec tdat_delete FROM fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
                where   group_operational_id like any ('%TEST%','MDL%', 'OE%')
                or      carrier_operational_id = '0654' @D@C@
9825@1610@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? column product_source_cde @D@C@
9825@1620@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? column group_type @D@C@
9825@1630@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? column (product_source_cde ,prod_id) @D@C@
9825@1640@//*                                                                                * @D@C@
9825@1650@//* New Code to prevent spool space errors.  Use output from 9725 job              * @D@C@
9825@1660@//*                                                                                * @D@C@
9825@1670@exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!? @D@C@
9825@1680@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_tgt_products_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	product_id			INTEGER NOT NULL,
	product_source_cde		INTEGER NOT NULL,	
	rule_id				INTEGER NOT NULL)
	PRIMARY INDEX ( product_id ,rule_id ) @D@C@
9825@1690@exec tdat_insert into fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!?
	SELECT DISTINCT
		PRODUCT_ID,
		PRODUCT_SOURCE_CDE,
		RULE_ID
	FROM 	fr_proddb_v.bdro_prod_rule_incm_t01N /* !!!!!!!!! from FM daily !!!!!!!!!! */ @D@C@
9825@1700@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!? INDEX ( product_id ,rule_id ) @D@C@
9825@1710@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!? column ( product_id ,product_source_cde ) @D@C@
9825@1720@//*                                                                             * @D@C@
9825@1730@//* Extract Med product rows for ALL Brands                                     * @D@C@
9825@1740@//*                                                                             * @D@C@
9825@1750@exec tdat_drop table fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? @D@C@
9825@1760@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_med_prod_ALL_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        Brand_nme                       VARCHAR(30) CHARACTER SET LATIN NOT CASESPECIFIC,
        product_service_id              CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_stc_cde                      CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_hicl_cde                     CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_strength_cde                 CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_admin_route_cde              CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_dosage_form_cde              CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC,
        drug_substitution_cde           CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        trade_name_id                   INTEGER,
        package_size_qty                DECIMAL(11,3),
        ndc_mfr_cde                     CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
        ndc9_cde                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
        rx_required_cde                 CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        sk_generic_class_cde            CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
	contr_ndc_ind   		CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
	form_status_ind 		CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        match_key_txt                   CHAR(74) CHARACTER SET LATIN NOT CASESPECIFIC)
        PRIMARY INDEX (product_service_id) @D@C@
9825@1770@exec tdat_insert into fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?
        SELECT  BRAND_NME,
                product_service_id,
                sk_stc_cde,
                sk_hicl_cde,
                sk_strength_cde,
                sk_admin_route_cde,
                sk_dosage_form_cde,
                drug_substitution_cde,
                TRADE_NAME_ID,
                PACKAGE_SIZE_QTY,
                SUBSTR(product_service_id,1,5),
                SUBSTR(product_service_id,1,9),
                RX_REQUIRED_CDE,
                sk_generic_class_cde,
		'N',
		' ',
                ' '
        FROM    IW_DEFLT_PRODDB_V.MEDICAL_PRODUCT_CURRENT 
	WHERE 	obsolete_dte > '2013-12-31' @D@C@
9825@1780@exec tdat_update fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?
        set     match_key_txt = sk_stc_cde ||
                        sk_hicl_cde ||
                        sk_strength_cde ||
                        sk_admin_route_cde ||
                        sk_dosage_form_cde ||
                        drug_substitution_cde ||
                        ndc_mfr_cde ||
                        ndc9_cde ||
                        product_service_id ||
                        rx_required_cde ||
                        sk_generic_class_cde  ||
                        cast(cast(package_size_qty as FORMAT '9(8)V999') as char(11)) ||
                        cast(cast(trade_name_id as FORMAT '9(10)') as char(10)) @D@C@
9825@1790@exec tdat_update fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?
	set	contr_ndc_ind = 'Y'
		,form_status_ind = 'N'
	WHERE 	product_service_id IN (
		SELECT 	ndc_nbr 
		from 	fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? 
		group by 1) @D@C@
9825@1800@exec tdat_update fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?
	set	form_status_ind = 'N'
	WHERE 	product_service_id IN (
		SELECT 	ndc_nbr 
                from    fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!?
		where	status_ind = 'N'
		group by 1) 
	and 	contr_ndc_ind <> 'Y' @D@C@
9825@1810@exec tdat_update fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?
	set	form_status_ind = case when form_status_ind = 'N' then 'B'
                                        else 'Y' end
	WHERE 	product_service_id IN (
		SELECT 	ndc_nbr 
                from    fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!?
		where	status_ind = 'Y'
		group by 1) 
	and 	contr_ndc_ind <> 'Y' @D@C@
9825@1820@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? INDEX (product_service_id) @D@C@
9825@1830@//* ===========================================================================    * @D@C@
9825@1840@//* Extract the Access brand list and copy to Teradata.                            * @D@C@
9825@1850@//*                                                                                * @D@C@
9825@1860@exec tdat_drop table fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? @D@C@
9825@1870@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	med_d_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	drug_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	drug_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL)
	PRIMARY INDEX ( ndc9_nbr ,drug_eff_dte ) @D@C@
9825@1880@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
	t_bdro_NF_ACC_brands fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_bdro_NF_ACC_brands_t (
	ndc9_nbr  	text,
	med_d_ind 	text,
	eff_dte 	DATE,
	end_dte 	DATE);
	CREATE TEMP TABLE t_bdro_NF_ACC_brands (
        ndc9_nbr        text,
        med_d_ind       text,
        eff_dte         DATE,
        end_dte         DATE);

	INSERT INTO t_bdro_NF_ACC_brands_t
	SELECT 	ndc9_nbr,
		CASE  WHEN contract_type_cde = 'MD' THEN 'Y'
			ELSE 'N' END,
		eff_dte,
		end_dte
	FROM  	bdro_brand_list
	WHERE  	now() between oper_insert_tms and oper_end_tms
	AND  	ndc_type_ind = 'A';

	CREATE TEMP TABLE t_contracted_ndcs (
        ndc9_nbr                text,
        med_d_ind               text,
        eff_dte                 DATE,
        end_dte                 DATE);

        INSERT INTO t_contracted_ndcs
        SELECT  substr(a.ndc_nbr, 1, 9)
                ,case when b.contract_type_cde = 'MD' then 'Y' else 'N' end
                ,min(a.eff_dte)
                ,max(a.end_dte)
        FROM    base_reb_product a,
                reb_contract b,
                reb_contract_rh c,
                medical_product d
        WHERE   now() BETWEEN a.oper_insert_tms AND a.oper_end_tms
        and     a.end_dte > '2013-12-31'
        and     a.reb_contract_id = b.reb_contract_id
        and     now() BETWEEN b.oper_insert_tms AND b.oper_end_tms
        and     a.reb_contract_id = c.reb_contract_id
        and     now() BETWEEN c.oper_insert_tms AND c.oper_end_tms
        and     c.end_dte > '2013-12-31'
        and     b.contract_type_cde || b.contract_type_ind not IN ('CMES', 'CMCM', 'BRCM', 'MDCM')
        and     a.ndc_nbr = d.ndc_nbr
        GROUP BY 1,2;

        INSERT INTO t_bdro_NF_ACC_brands
        SELECT  a.ndc9_nbr
		,a.med_d_ind
                ,case when b.eff_dte > a.eff_dte then b.eff_dte
                        else a.eff_dte end
                ,case when b.end_dte < a.end_dte then b.end_dte
                        else a.end_dte end
	from 	t_bdro_NF_ACC_brands_t a,
		t_contracted_ndcs b
	where 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.med_d_ind = b.med_d_ind
	And     (b.eff_dte between a.eff_dte and a.end_dte
		OR
		a.eff_dte between b.eff_dte and b.end_dte);"  @D@C@
9825@1890@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? INDEX (ndc9_nbr ,drug_eff_dte) @D@C@
9825@1900@//*                                                                                * @D@C@
9825@1910@//*  Create new work tables to extract Selected Brands for NF Access Rules         * @D@C@
9825@1920@//*                                                                                * @D@C@
9825@1930@//* . Extract products, rules and brand names: used for the selected NF brands     * @D@C@
9825@1940@//*       . for access rules, only access brands are selected                      * @D@C@
9825@1950@//*       . for non-access rules, any NF brand can be selected but the same rule   * @D@C@
9825@1960@//*         must exist in the history table and the Hist brand must have a         * @D@C@
9825@1970@//*         rebate-eligible NDC                                                    * @D@C@
9825@1980@//*                                                                                * @D@C@
9825@1982@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@1990@exec tdat_drop table fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!? @D@C@
9825@2000@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	product_id			INTEGER NOT NULL,
	product_source_cde		INTEGER NOT NULL,		
	rule_id				INTEGER NOT NULL,
	rule_row_id			INTEGER NOT NULL,
	rule_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr ) @D@C@
9825@2010@exec tdat_drop table fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? @D@C@
9825@2020@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        match_key_txt                   CHAR(74) CHARACTER SET LATIN NOT CASESPECIFIC,
        match_key_id                   	INTEGER) 
        PRIMARY INDEX (match_key_txt,ndc9_nbr) @D@C@
9825@2030@exec tdat_insert into fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?
        SELECT DISTINCT
                SUBSTR(B.product_service_id,1,9),
                A.match_key_txt
		,0
        FROM    (select distinct match_key_txt
                 from  fr_proddb_v.bdro_prod_rule_incm_t01N) A,
                fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!?  B
        WHERE   b.match_key_txt LIKE a.match_key_txt
        and     b.contr_ndc_ind = 'Y'
        and     b.form_status_ind in ('N','B')
        AND     SUBSTR(B.product_service_id,1,9) IN (
		SELECT  ndc9_nbr
		from    fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?
		group by 1 ) @D@C@
9825@2040@exec tdat_collect stats on fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? column (match_key_txt) @D@C@
9825@2050@exec tdat_insert into fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!?
        SELECT  A.PRODUCT_ID,
                A.PRODUCT_SOURCE_CDE,
                A.RULE_ID,
                A.RULE_ROW_ID,
                'A',
                (A.rule_eff_dte),
                (A.rule_exp_dte),
                B.ndc9_nbr
        FROM    fr_proddb_v.bdro_prod_rule_incm_t01N /* !!!!!!!!! from FM daily !!!!!!!!!! */ A,
                fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?  B
        WHERE   b.match_key_txt = a.match_key_txt
        GROUP BY 1,2,3,4,5,6,7,8 @D@C@
9825@2060@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!?  
			INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr)  @D@C@
9825@2070@//*=============================================================================   * @D@C@
9825@2080@//* ????????        Code added to ensure rules that were previously decisioned     * @D@C@
9825@2090@//*               (added to maint table) are included in the daily rules extract.  * @D@C@
9825@2100@//*                This will ensure that all the required hierarchy data is        * @D@C@
9825@2110@//*                pulled so that the final results table is populated accurately  * @D@C@
9825@2120@//*                                                                                * @D@C@
9825@2130@exec tdat_drop table fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? @D@C@
9825@2140@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        access_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        form_ind                        CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_originator_dsc             VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_nme                        VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX ( ndc9_nbr ,rule_id ,rule_eff_dte ,rule_exp_dte ) @D@C@
9825@2150@exec tdat_insert into fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!?
        Select  distinct 
		a.ndc9_nbr
                ,a.rule_id
                ,zeroifnull(b.rule_row_id) * -1 /* missing will have negative rule_row_id */
                ,a.rule_category_cde
                ,a.access_ind
                ,a.form_ind
                ,a.rule_originator_dsc
                ,a.rule_nme
                ,a.rule_eff_dte
                ,a.rule_exp_dte
        from    fr_proddb.BDRO_NF_drugs_rules_ndc a 
                left outer join
                fr_proddb_v.bdro_rule_detail b
        on      a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme
        where   a.cat_id NOT IN (-1,0,3)
        and     a.form_ind = 'N'
	and	a.access_ind = 'Y'
        and     (a.ndc9_nbr, a.rule_id, a.rule_eff_dte) NOT IN (
                Select  ndc9_nbr, rule_id, rule_eff_dte
                from  	fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!? 
                group by 1,2,3) @D@C@
9825@2160@exec tdat_insert into fr_proddb_v.bdro_rule_detail
        select  rule_id,
                rule_category_cde,
                rule_originator_dsc,
                rule_nme,
		3,
                NULL
        from    (SELECT  distinct rule_id,
                        rule_category_cde,
                        rule_originator_dsc,
                        rule_nme
                from    fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!?
                where   rule_row_id = 0) a @D@C@
9825@2170@exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? a,
                fr_proddb_v.bdro_rule_detail b
        set     rule_row_id = b.rule_row_id * -1 /* missing will have negative rule_row_id */
        where   a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme
        and     a.rule_row_id = 0 @D@C@
9825@2180@exec tdat_insert into fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!?
        SELECT  distinct
		A.PRODUCT_ID,
                A.PRODUCT_SOURCE_CDE,
                A.RULE_ID,
		B.RULE_ROW_ID,
                'A',
                B.rule_eff_dte,
                B.rule_exp_dte,
                B.ndc9_nbr
	FROM 	fr_proddb_v.bdro_prod_rule_incm_t01N   /* !!!!!!!!! from FM daily !!!!!!!!!! */ A,
                fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? B
        WHERE   a.rule_id = b.rule_id @D@C@
9825@2190@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!?  
			INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr)  @D@C@
9825@2200@//*================================================================================* @D@C@
9825@2210@//* . get brands (form + non-form) for targeted rules.                             * @D@C@
9825@2220@//* . If NF,   brands cannot be in Access drug list                                * @D@C@
9825@2230@//* . If Form, brands cannot be in BDRO Brand list table for non-access brands     * @D@C@
9825@2240@//* . Match to client hier to get group type (Comm or Med-D)                       * @D@C@
9825@2250@//* . Any remaining rules + brands cannot be in Review or Maint tables             * @D@C@
9825@2260@//* . Create distinct list of remaining rules 'Targeted Select'                    * @D@C@
9825@2270@//* . Retireve Hist rows if rule is in 'Targeted Select' list                      * @D@C@
9825@2280@//* . Get brand names for Hist rules.  Brands must be formulary and Rebate-eligible* @D@C@
9825@2290@//* . Proceed as before: Match History Vs. Targeted                                * @D@C@
9825@2300@//*================================================================================* @D@C@
9825@2310@exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? @D@C@
9825@2320@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	form_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@2330@exec tdat_delete from fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? all @D@C@
9825@2340@exec tdat_insert into fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?
        SELECT DISTINCT
                SUBSTR(B.product_service_id,1,9),
                A.match_key_txt
		,0
        FROM    (select distinct match_key_txt 
		 from  fr_proddb_v.bdro_prod_rule_incm_t01N) A,
                fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? B
        WHERE   b.match_key_txt LIKE a.match_key_txt
        and	b.form_status_ind in ('N', 'B') @D@C@
9825@2350@exec tdat_collect stats on fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? column (match_key_txt) @D@C@
9825@2360@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!?
        SELECT DISTINCT
                A.RULE_ID,
                A.rule_eff_dte,
                A.rule_exp_dte,
                B.ndc9_nbr,
                'N'
        FROM    fr_proddb_v.bdro_prod_rule_incm_t01N A, /* !!!!!!!!! from FM daily !!!!!!!!!! */ 
                fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? B
        WHERE   b.match_key_txt = a.match_key_txt @D@C@
9825@2370@exec tdat_delete from fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? all @D@C@
9825@2380@exec tdat_insert into fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?
        SELECT DISTINCT
                SUBSTR(B.product_service_id,1,9),
                A.match_key_txt
		,0
        FROM    (select distinct match_key_txt
                 from  fr_proddb_v.bdro_prod_rule_incm_t01N) A,
                fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? B
        WHERE   b.match_key_txt LIKE a.match_key_txt
        and     b.form_status_ind in ('Y', 'B') @D@C@
9825@2390@exec tdat_collect stats on fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? column (match_key_txt) @D@C@
9825@2400@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!?
        SELECT DISTINCT
                A.RULE_ID,
                A.rule_eff_dte,
                A.rule_exp_dte,
                B.ndc9_nbr,
                'Y'
        FROM    fr_proddb_v.bdro_prod_rule_incm_t01N A, /* !!!!!!!!! from FM daily !!!!!!!!!! */ 
                fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? B
        WHERE   b.match_key_txt = a.match_key_txt @D@C@
9825@2410@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? INDEX (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@2420@//*                                                                             * @D@C@
9825@2430@//* Get the group type for the Targeted Rules/Brands                            * @D@C@
9825@2440@//*                                                                             * @D@C@
9825@2450@exec tdat_drop table fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!? @D@C@
9825@2460@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	group_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	prod_id				INTEGER NOT NULL,
	product_source_cde		INTEGER NOT NULL)
	PRIMARY INDEX (prod_id ,product_source_cde ) @D@C@
9825@2470@exec tdat_insert into fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!?
	SELECT  group_type,
		prod_id,
		product_source_cde
	from 	fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
	group by 1,2,3  @D@C@
9825@2480@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!? INDEX (prod_id ,product_source_cde) @D@C@
9825@2490@exec tdat_drop table fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? @D@C@
9825@2500@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	form_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	delete_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( ndc9_nbr,rule_id,rule_eff_dte) @D@C@
9825@2510@exec tdat_insert into fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!?  
	SELECT DISTINCT
		c.ndc9_nbr,
		a.group_type,              
		c.RULE_ID,
		c.rule_eff_dte,
		c.rule_exp_dte,
		c.form_type,
		'N'
	From 	fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!? b,
		fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? c
	Where 	a.prod_id = b.product_id
	and 	a.product_source_cde = b.product_source_cde
	and 	b.rule_id = c.rule_id  @D@C@
9825@2520@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? INDEX ( ndc9_nbr,rule_id,rule_eff_dte) @D@C@
9825@2530@//*                                                                             * @D@C@
9825@2540@//* Non-form brands cannot be in the Access Brand List                          * @D@C@
9825@2550@//*                                                                             * @D@C@
9825@2560@exec tdat_update fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!?  
	set	delete_ind = 'Y'
	WHERE 	form_type = 'N'
	AND 	(ndc9_nbr, group_type) IN (
		Select 	ndc9_nbr, med_d_ind 
		from 	fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?  
		group by 1,2) @D@C@
9825@2570@//*                                                                             * @D@C@
9825@2580@//* Formulary brands cannot be in BDRO Brand list table for non-access brands   * @D@C@
9825@2590@//*                                                                             * @D@C@
9825@2600@exec tdat_update fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? 
	set	delete_ind = 'Y'
	WHERE 	form_type = 'Y'
	AND 	(ndc9_nbr, group_type) IN (
		Select 	substr(ndc_nbr,1,9), med_d_ind 
		from 	fr_proddb_v.bdro_cntr_ndcs_form_cur /* !!!!!!!!! from FM daily !!!!!!!!!! */
		group by 1,2) @D@C@
9825@2610@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? INDEX ( ndc9_nbr,rule_id,rule_eff_dte) @D@C@
9825@2620@//*                                                                             * @D@C@
9825@2630@//* Drop any targeted rule if already in Review or Maintenance tables           * @D@C@
9825@2640@//*                                                                             * @D@C@
9825@2650@exec tdat_update fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? 
	set	delete_ind = 'Y'
	where	delete_ind = 'N'
	and   	(group_type,rule_id,rule_eff_dte,rule_exp_dte) IN (
		select 	group_type,rule_id,rule_eff_dte,rule_exp_dte
		from 	fr_proddb.BDRO_NF_drugs_rules_ndc 
		where	access_ind = 'Y' 
		or 	form_ind = 'Y' 
		group by 1,2,3,4) @D@C@
9825@2660@//exec tdat_update fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!?
                  SET rule_exp_dte = CAST ('3000-12-31' AS DATE FORMAT 'YYYY-MM-DD')
                WHERE rule_exp_dte = '2099-01-01'                                           @D@C@
9825@2670@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? column delete_ind @D@C@
9825@2680@exec tdat_delete from fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? ALL @D@C@
9825@2690@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!?
	SELECT DISTINCT
		RULE_ID,
		rule_eff_dte,
		rule_exp_dte,
		ndc9_nbr,
		form_type
	FROM 	fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? 
	where	delete_ind = 'N' @D@C@
9825@2700@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? INDEX (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@2710@//*                                                                             * @D@C@
9825@2720@//*  Get all of the History Rules That match the selected Targeted rules           * @D@C@
9825@2730@//*                                                                                * @D@C@
9825@2740@exec tdat_drop table fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!? @D@C@
9825@2750@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_temp_rule_product_NF_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_nme                        VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
        rule_version_seq                SMALLINT NOT NULL,
        rule_type_id                    INTEGER NOT NULL,
        status_id                       SMALLINT,
        originator_id                   SMALLINT,
        effect_date                     TIMESTAMP(6),
        expire_date                     TIMESTAMP(6))
PRIMARY INDEX ( rule_id ) @D@C@
9825@2760@exec tdat_insert into fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!?
        SELECT DISTINCT
		rule_id,
		rule_nme,
		rule_category_cde,
		rule_version_seq,
		rule_type_id,
		status_id,
		originator_id,
		effect_date,
		expire_date
	from	fr_proddb_v.bdro_temp_rule_product /* !!!!!!!!! from FM daily !!!!!!!!!! */ 
	where	rule_id in (
		select 	distinct rule_id
		from	fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!?
		where 	delete_ind = 'N') @D@C@
9825@2770@exec tdat_drop table fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? @D@C@
9825@2771@//*                                                                                * @D@C@
9825@2772@//*  2021-03-15 Add Drug List-id to the hist rule extract                 ``       * @D@C@
9825@2773@//*                                                                                * @D@C@
9825@2780@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_category_cde		CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_originator_dsc		VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        DRUG_LIST_ID                    INTEGER NOT NULL,
	rule_id				INTEGER NOT NULL,
	rule_nme			VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	fdb_sk_stc			CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_sk_hicl			CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_sk_str			CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_sk_rt			CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_sk_dose			CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_subcode			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
	trade_nme_id			INTEGER,
	pkg_size_qty			DECIMAL(11,3),
	ndc_mfr_cde			CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
	ndc9_cde			CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
	ndc11_cde			CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC,
	fdb_CL				CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
	FDB_SK_GTC			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
        match_key_txt                   CHAR(74) CHARACTER SET LATIN NOT CASESPECIFIC,
        match_key_id                  	INTEGER) 
NO PRIMARY INDEX @D@C@
9825@2790@exec tdat_insert into fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!?
	SELECT	RULE.RULE_CATEGORY_CDE,
                DR2.DOMAIN_ITEM_DSC,
                DRUGLIST.DRUG_LIST_ID,
                RULE.RULE_ID,
                RULE.RULE_NME,
                (RULE.EFFECT_DATE),
                (case when CAST(RULE.EXPIRE_DATE as DATE) > '2090-01-01'
                        then CAST ('3000-12-31' AS DATE)
                        else CAST(RULE.EXPIRE_DATE as DATE) end),
		DRUGLIST.FDB_SK_STC,
		DRUGLIST.FDB_SK_HICL,
		DRUGLIST.FDB_SK_STR,
		DRUGLIST.FDB_SK_RT,
		DRUGLIST.FDB_SK_DOSE,
                CASE WHEN DRUGLIST.FDB_SUBCODE = 'W' THEN 'A'
                        WHEN DRUGLIST.FDB_SUBCODE = 'X' THEN 'B'
                        WHEN DRUGLIST.FDB_SUBCODE = 'Y' THEN 'G'
                        ELSE DRUGLIST.FDB_SUBCODE END,
		DRUGLIST.TRADE_NM_ID,
		DRUGLIST.FDB_PS,
		DRUGLIST.NDC_MANUF_CDE,
		DRUGLIST.NDC9_CDE,
		DRUGLIST.NDC11_CDE,
		DRUGLIST.FDB_CL,
		DRUGLIST.FDB_SK_GTC,
		' ',
		0
        FROM    fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!? RULE
                INNER JOIN IRHM_CRS_PRODDB_V.RULE_TYPE RUTYP
        ON      RULE.RULE_TYPE_ID = RUTYP.RULE_TYPE_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR
        ON      RULE.STATUS_ID = DR.DOMAIN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR2
        ON      RULE.ORIGINATOR_ID = DR2.DOMAIN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.VARIABLE_VALUE VAR
        ON      RULE.RULE_ID = VAR.RULE_AGN_ID
        AND     RULE.RULE_VERSION_SEQ = VAR.RULE_VERSION_SEQ
                INNER JOIN IRHM_CRS_PRODDB_V.TECH_DRUG_LIST_DETAIL DRUGLIST
        ON      VAR.ARGUMENT_ID = DRUGLIST.DRUG_LIST_ID
        WHERE   DR.domain_nme = 'status_id'
        and     DR2.domain_nme = 'originator_id'
        and     VAR.variable_type_cde = '3005'
        and     VAR.argument_cde = 2        /*1-INCOMING/TARGETED DRUG, 2-HISTORY DRUG*/
        and     DRUGLIST.DRUG_LIST_ID <> 9999 
	GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 @D@C@
9825@2791@//                                                                        @D@C@
9825@2792@//  Remove unwanted drug lists that are linked mostly to Generics         @D@C@
9825@2793@//                                                                        @D@C@
9825@2794@exec tdat_delete
                  from fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? a
                 where (a.rule_id,a.drug_list_id) IN
                 (Select distinct rule_id,sec_drug_list_id
                    from fr_proddb_v.bdro_secondary_druglist b
                   where var_value_nbr in (2,3))  @D@C@
9825@2795@//                                                                        @D@C@
9825@2800@exec tdat_update fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!?
	set	fdb_sk_stc = coalesce(fdb_sk_stc,' ')
		,fdb_sk_hicl = coalesce(fdb_sk_hicl,' ')
		,fdb_sk_str = coalesce(fdb_sk_str,' ')
		,fdb_sk_rt = coalesce(fdb_sk_rt,' ')
		,fdb_sk_dose = coalesce(fdb_sk_dose,' ')
		,fdb_subcode = coalesce(fdb_subcode,' ')
		,ndc_mfr_cde = coalesce(ndc_mfr_cde,' ')
		,ndc9_cde = coalesce(ndc9_cde,' ')
		,ndc11_cde = coalesce(ndc11_cde,' ')
		,fdb_CL = coalesce(fdb_CL,' ')
		,FDB_SK_GTC = coalesce(FDB_SK_GTC,' ')
		,pkg_size_qty = coalesce(pkg_size_qty,0)
		,trade_nme_id = coalesce(trade_nme_id,0) @D@C@
9825@2810@exec tdat_update fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!?
        set     match_key_txt =  cast(case when fdb_sk_stc > ' ' then fdb_sk_stc else REGEXP_REPLACE( fdb_sk_stc,' ','_') end as char(6)) ||
                        cast(case when fdb_sk_hicl > ' ' then fdb_sk_hicl else REGEXP_REPLACE( fdb_sk_hicl,' ','_') end as char(6)) ||
                        cast(case when fdb_sk_str > ' ' then fdb_sk_str else REGEXP_REPLACE( fdb_sk_str,' ','_') end as char(5)) ||
                        cast(case when fdb_sk_rt > ' ' then fdb_sk_rt else REGEXP_REPLACE( fdb_sk_rt,' ','_') end as char(3)) ||
                        cast(case when fdb_sk_dose > ' ' then fdb_sk_dose else REGEXP_REPLACE( fdb_sk_dose,' ','_') end as char(4)) ||
                        cast(case when fdb_subcode > ' ' then fdb_subcode else REGEXP_REPLACE( fdb_subcode,' ','_') end as char(1)) ||
                        cast(case when ndc_mfr_cde > ' ' then ndc_mfr_cde else REGEXP_REPLACE( ndc_mfr_cde,' ','_') end as char(5)) ||
                        cast(case when ndc9_cde > ' ' then ndc9_cde else REGEXP_REPLACE( ndc9_cde,' ','_') end as char(9)) ||
                        cast(case when ndc11_cde > ' ' then ndc11_cde else REGEXP_REPLACE( ndc11_cde,' ','_') end as char(11)) ||
                        cast(case when fdb_CL > ' ' then fdb_CL else REGEXP_REPLACE( fdb_CL,' ','_') end as char(1)) ||
                        cast(case when FDB_SK_GTC > ' ' then FDB_SK_GTC else REGEXP_REPLACE( FDB_SK_GTC,' ','_') end as char(2)) ||
                        case when pkg_size_qty > 0 then cast(cast(pkg_size_qty as FORMAT '9(8)V999') as char(11))  else '___________' end ||
                        case when trade_nme_id > 0 then cast(cast(trade_nme_id as FORMAT '9(10)') as char(10))  else '__________' end @D@C@
9825@2812@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? column match_key_txt @D@C@
9825@2813@exec tdat_drop table fr_workdb.wt_match_key_txt_id_?!temp_table_suffix!? @D@C@
9825@2814@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_match_key_txt_id_?!temp_table_suffix!? ,FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO,
     MAP = TD_MAP1
     (
	match_key_txt 	CHAR(74) CHARACTER SET LATIN NOT CASESPECIFIC,
	match_key_id 	INTEGER GENERATED BY DEFAULT AS IDENTITY  (START WITH 1 INCREMENT BY 1
                                                    MINVALUE 1 MAXVALUE 2147483647 NO CYCLE)
) PRIMARY INDEX (match_key_id) @D@C@
9825@2815@exec tdat_insert into fr_workdb.wt_match_key_txt_id_?!temp_table_suffix!?
	select  match_key_txt
		,null
	from 	fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? 
	group by 1 @D@C@
9825@2816@exec tdat_collect stats on fr_workdb.wt_match_key_txt_id_?!temp_table_suffix!? column match_key_txt @D@C@
9825@2817@exec tdat_update a 
	from 	fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? a,
		fr_workdb.wt_match_key_txt_id_?!temp_table_suffix!? b
	set 	match_key_id = b.match_key_id 
	where 	a.match_key_txt = b.match_key_txt @D@C@
9825@2818@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? column (match_key_id) @D@C@
9825@2830@//*                                                                                * @D@C@
9825@2840@//*  Get the brands for the History rules based on the revised Inclusion codes     * @D@C@
9825@2850@//*                                                                                * @D@C@
9825@2852@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@2860@exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? @D@C@
9825@2870@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_nme			VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_originator_dsc             VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	delete_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX (rule_id, ndc9_nbr) @D@C@
9825@2880@exec tdat_delete from fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? all @D@C@
9825@2890@exec tdat_insert into fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?
        SELECT DISTINCT
                SUBSTR(B.product_service_id,1,9),
                A.match_key_txt
		,A.match_key_id
        FROM    (select distinct match_key_txt
			,match_key_id
                 from  fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!?) A,
                fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? B
        WHERE   b.match_key_txt LIKE a.match_key_txt @D@C@
9825@2892@exec tdat_collect stats on fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? column (match_key_id) @D@C@
9825@2894@//exec tdat_create index (match_key_txt) on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? @D@C@
9825@2895@//exec tdat_create index (match_key_txt) on fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!?   @D@C@
9825@2900@exec tdat_CREATE VOLATILE set  TABLE vt_BDRO_NF_HIST_rules_brands_all AS (
        select rule_category_cde,
                rule_originator_dsc,
                rule_id,
                rule_nme,
                ndc9_nbr,
                rule_eff_dte,
                rule_exp_dte,
                sum(1) over(rows unbounded preceding) as row_id
        FROM    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? a,
                fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? b
        where   b.match_key_id = a.match_key_id 	/*b.match_key_txt = a.match_key_txt*/
        ) WITH DATA PRIMARY INDEX (row_id) ON COMMIT PRESERVE ROWS @D@C@
9825@2902@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_HIST_rules_brands AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY   rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY   rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr
                                  ORDER BY rule_eff_dte, rule_exp_dte) as range_dte_seq,
                rule_category_cde,
                rule_originator_dsc,
                rule_id,
                rule_nme,
                ndc9_nbr,
                rule_eff_dte,
                rule_exp_dte
        FROM    vt_BDRO_NF_HIST_rules_brands_all
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@2910@//exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_HIST_rules_brands AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY   rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY   rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr
                                  ORDER BY rule_eff_dte, rule_exp_dte) as range_dte_seq,
                rule_category_cde,
                rule_originator_dsc,
                rule_id,
                rule_nme,
                ndc9_nbr,
                rule_eff_dte,
                rule_exp_dte
        FROM    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? a,
		fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? b
	where	b.match_key_txt = a.match_key_txt
	group by 3,4,5,6,7,8,9
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@2912@exec tdat_drop TABLE vt_BDRO_NF_HIST_rules_brands_all @D@C@
9825@2920@exec tdat_collect stats on vt_BDRO_NF_HIST_rules_brands column (group_key_id, range_dte_seq) @D@C@
9825@2930@exec tdat_collect stats on vt_BDRO_NF_HIST_rules_brands index (group_key_id) @D@C@
9825@2940@exec tdat_insert into fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
WITH RECURSIVE  BDRO_NF_HIST_rules_brands_fin (group_key_id_f,
                                rule_category_cde_f, rule_originator_dsc_f, rule_id_f, rule_nme_f, ndc9_nbr_f,
                                rule_eff_dte_f, rule_exp_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr,
                        rule_eff_dte, rule_exp_dte,
                        range_dte_seq, range_dte_seq
                FROM   	vt_BDRO_NF_HIST_rules_brands
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        rule_category_cde, rule_originator_dsc, rule_id, rule_nme, ndc9_nbr,
                        case when rule_exp_dte_f + interval '1' day between rule_eff_dte and rule_exp_dte then rule_eff_dte_f
                                when rule_exp_dte between rule_eff_dte_f and rule_exp_dte_f then rule_eff_dte_f
                                else rule_eff_dte end,
                        rule_exp_dte,
                        case when rule_exp_dte_f + interval '1' day between rule_eff_dte and rule_exp_dte
                                        then range_per_seq_f
                                when rule_exp_dte between rule_eff_dte_f and rule_exp_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_BDRO_NF_HIST_rules_brands
                        join BDRO_NF_HIST_rules_brands_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  rule_id_f, 
                min(rule_eff_dte_f),
                max(rule_exp_dte_f),
		rule_nme_f,	
		rule_category_cde_f, 
		rule_originator_dsc_f,
                ndc9_nbr_f,
                'Y'
        FROM    BDRO_NF_HIST_rules_brands_fin
	group by 1,4,5,6,7,8,range_per_seq_f @D@C@
9825@2950@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? INDEX (rule_id, ndc9_nbr) @D@C@
9825@2952@exec tdat_drop TABLE vt_BDRO_NF_HIST_rules_brands @D@C@
9825@2960@//*================================================================================* @D@C@
9825@2970@//  2019-11-14 AJG: Add code to match all Targeted vs Hist rule versions. @D@C@
9825@2980@//                  If all hist versions are matched to targeted,         @D@C@
9825@2990@//                  then the rule/ndc is not a candidate as               @D@C@
9825@3000@//                  a new preferred hist rule to be added to Review.      @D@C@
9825@3010@//                                                                        @D@C@
9825@3020@//*================================================================================* @D@C@
9825@3030@exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!? @D@C@
9825@3040@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        match_ind                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@3050@//*                                                                                  @D@C@
9825@3060@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!?
        SELECT DISTINCT A.RULE_ID,A.rule_eff_dte,
                        A.rule_exp_dte,B.ndc9_nbr,' '
           FROM
           (select distinct rule_id,rule_eff_dte,rule_exp_dte
              from fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!?)    a,
           (select distinct rule_id,ndc9_nbr  
              from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?) b
         WHERE a.rule_id = b.rule_id  @D@C@
9825@3070@//*                                                                                  @D@C@
9825@3080@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!?
                        column (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@3090@//*                                                                                  @D@C@
9825@3100@exec tdat_update a
        From fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!?  a,
             fr_proddb_v.bdro_ALL_target_versions   b
        SET     match_ind = 'Y'
        Where   a.ndc9_nbr     = b.ndc9_nbr
        and     a.rule_id      = b.rule_id
        and     a.rule_eff_dte = b.rule_eff_dte
        and     a.rule_exp_dte = b.rule_exp_dte @D@C@
9825@3110@//*                                                                                  @D@C@
9825@3120@//*                                                                                  @D@C@
9825@3130@//*  2019-11-14 AJG:    E N D   O F   C H A N G E S                                  @D@C@
9825@3140@//*================================================================================* @D@C@
9825@3150@//*                                                                                * @D@C@
9825@3160@//*  Determine which History brands are rebate-eligible                            * @D@C@
9825@3170@//* (Needed for the selection of Targeted non-form rules)                          * @D@C@
9825@3180@//* Delete any History rule if the History Brand is not formulary   		     * @D@C@
9825@3190@//*                                                                                * @D@C@
9825@3200@exec tdat_drop TABLE fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!? @D@C@
9825@3210@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_id				INTEGER NOT NULL)
	PRIMARY INDEX ( ndc9_nbr ,rule_id ) @D@C@
9825@3220@exec tdat_insert into fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!?
	SELECT 	distinct a.ndc9_nbr,
	       	a.rule_id
	FROM 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?  a,
	      	fr_proddb_v.bdro_cntr_ndcs_form_cur   b,
	      	IW_DEFLT_PRODDB_V.MEDICAL_PRODUCT_CURRENT c
	WHERE 	c.obsolete_dte > '2013-12-31'
        AND     a.ndc9_nbr =  SUBSTR(b.ndc_nbr,1,9)
	AND 	b.ndc_nbr   = c.product_service_id @D@C@
9825@3230@exec tdat_delete from fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!?
        where   ndc9_nbr NOT in (
                SELECT  distinct SUBSTR(ndc_nbr,1,9)
                From    fr_proddb.BDRO_forms_and_brands) @D@C@
9825@3240@exec tdat_delete from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
	where	(ndc9_nbr, rule_id) NOT in (
		select	ndc9_nbr, rule_id
		from	fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!?) @D@C@
9825@3250@//exec tdat_delete from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? 
	where   delete_ind = 'Y' @D@C@
9825@3260@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? INDEX (rule_id, ndc9_nbr) @D@C@
9825@3270@//*                                                                             * @D@C@
9825@3280@//* Create temp table to contain the Hist Rule name with the latest eff-dte     * @D@C@
9825@3290@//*                                                                             * @D@C@
9825@3300@exec tdat_drop table fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!? @D@C@
9825@3310@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_max_HIST_rule_nme_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_nme			VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( rule_id ,rule_eff_dte ,rule_nme ) @D@C@
9825@3320@exec tdat_insert into fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!?
      SELECT 	RULE_ID,
		rule_eff_dte,
                rule_nme 
	FROM 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
	WHERE 	(rule_id, rule_eff_dte) in (
		SELECT 	rule_id, max(rule_eff_dte) 
		from 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? 
		Group by 1)  @D@C@
9825@3330@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!? INDEX ( rule_id ,rule_eff_dte ,rule_nme ) @D@C@
9825@3340@exec tdat_update a
	From 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!? b
	SET   	rule_nme = b.rule_nme 
	WHERE 	a.rule_id = b.rule_id @D@C@
9825@3350@//*                                                                             * @D@C@
9825@3360@//* Create temp table containing All Medical product data where                 * @D@C@
9825@3370@//*  the targeted brand matched the selected History brand                      * @D@C@
9825@3380@//* Delete matching rules from History and Targeted before summarizing          * @D@C@
9825@3390@//*                                                                             * @D@C@
9825@3400@exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_rules_Matched_?!temp_table_suffix!? @D@C@
9825@3410@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_HIST_rules_matched_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( rule_id ,rule_eff_dte ,rule_exp_dte ,ndc9_nbr ) @D@C@
9825@3420@exec tdat_exec tdat_insert into fr_workdb.wt_BDRO_NF_HIST_rules_Matched_?!temp_table_suffix!?
	sELECT DISTINCT
		A.RULE_ID,
		A.rule_eff_dte,
		A.rule_exp_dte,
		A.ndc9_nbr
	from 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? b
	Where 	a.ndc9_nbr    = b.ndc9_nbr
	and 	a.rule_id      = b.rule_id
	and 	a.rule_eff_dte = b.rule_eff_dte
	and 	a.rule_exp_dte = b.rule_exp_dte @D@C@
9825@3430@exec tdat_delete from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?  a,
		fr_workdb.wt_BDRO_NF_HIST_rules_Matched_?!temp_table_suffix!? b
	Where 	a.ndc9_nbr    = b.ndc9_nbr
	and 	a.rule_id      = b.rule_id
	and 	a.rule_eff_dte = b.rule_eff_dte
	and 	a.rule_exp_dte = b.rule_exp_dte @D@C@
9825@3440@exec tdat_delete from fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!?  a,
                fr_workdb.wt_BDRO_NF_HIST_rules_Matched_?!temp_table_suffix!? b
        Where   a.ndc9_nbr    = b.ndc9_nbr
        and     a.rule_id      = b.rule_id
        and     a.rule_eff_dte = b.rule_eff_dte
        and     a.rule_exp_dte = b.rule_exp_dte @D@C@
9825@3450@//*                                                                             * @D@C@
9825@3460@//* Create Summ table containing All Targeted CRS rules that match the          * @D@C@
9825@3470@//* History Rules.                                                              * @D@C@
9825@3480@//*                                                                             * @D@C@
9825@3490@exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_Hist_Targeted_?!temp_table_suffix!? @D@C@
9825@3500@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ALL_Hist_targeted_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( rule_id ,rule_eff_dte ,ndc9_nbr ) @D@C@
9825@3510@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_Hist_Targeted_?!temp_table_suffix!?
        SELECT	RULE_ID,
	        (rule_eff_dte),
		(rule_exp_dte),
		ndc9_nbr 
	FROM 	fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!?
        Group by 1,2,3,4 @D@C@
9825@3520@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ALL_Hist_Targeted_?!temp_table_suffix!? INDEX ( rule_id ,rule_eff_dte ,ndc9_nbr ) @D@C@
9825@3530@//*                                                                             * @D@C@
9825@3540@//* Delete any History rule if the rule matches any selected targeted rule      * @D@C@
9825@3550@//*   that was dropped earlier in this process                                  * @D@C@
9825@3560@//*                                                                             * @D@C@
9825@3570@exec tdat_delete from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? 
	Where (ndc9_nbr,rule_id,rule_eff_dte,rule_exp_dte) IN (
		select 	ndc9_nbr,rule_id,rule_eff_dte,rule_exp_dte
		from 	fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!?
		group by 1,2,3,4)  @D@C@
9825@3580@//*                                                                             * @D@C@
9825@3590@//* Create Summ table containing All History CRS rules that were extracted      * @D@C@
9825@3600@//*                                                                             * @D@C@
9825@3610@exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!?  @D@C@
9825@3620@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
	PRIMARY INDEX ( rule_id ,ndc9_nbr ) @D@C@
9825@3630@exec tdat_insert into fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!?
	SELECT 	RULE_ID,
		min(rule_eff_dte),
		max(rule_exp_dte),
		ndc9_nbr 
	FROM 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
	Group by 1,4 @D@C@
9825@3640@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!? INDEX ( rule_id ,ndc9_nbr ) @D@C@
9825@3650@//*                                                                             * @D@C@
9825@3660@//* Delete any History rule if the rule matches the targeted                    * @D@C@
9825@3670@//*                                                                             * @D@C@
9825@3680@exec tdat_delete from fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? 
	Where 	(ndc9_nbr,rule_id) IN	(
		select 	b.ndc9_nbr, b.rule_id
		from 	fr_workdb.wt_BDRO_NF_ALL_Hist_Targeted_?!temp_table_suffix!? b,
			fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!? c
		Where 	b.ndc9_nbr    = c.ndc9_nbr
		and 	b.rule_id      = c.rule_id
		and 	b.rule_eff_dte = c.rule_eff_dte
		and 	b.rule_exp_dte = c.rule_exp_dte) @D@C@
9825@3690@//*                                                                             * @D@C@
9825@3700@//* Get all pertinent CRS Rule data for each candidate Hist elig rule_id        * @D@C@
9825@3710@//*                                                                             * @D@C@
9825@3720@exec tdat_delete from fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!? all @D@C@
9825@3730@exec tdat_insert into fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!?
        SELECT DISTINCT
                rule_id,
                rule_nme,
                rule_category_cde,
                rule_version_seq,
                rule_type_id,
                status_id,
                originator_id,
                effect_date,
                expire_date
        from    fr_proddb_v.bdro_temp_rule_product /* !!!!!!!!! from FM daily !!!!!!!!!! */
        where   rule_id in (
                select  distinct rule_id
                from    fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?) @D@C@
9825@3731@//*                                                                                * @D@C@
9825@3732@//*  2021-03-15 Add Drug List-id to the hist rule extract                 ``       * @D@C@
9825@3733@//*                                                                                * @D@C@
9825@3740@exec tdat_drop TABLE fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? @D@C@
9825@3750@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_originator_dsc             VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        DRUG_LIST_ID                    INTEGER NOT NULL,
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_nme                        VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        fdb_sk_stc                      CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_sk_hicl                     CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_sk_str                      CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_sk_rt                       CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_sk_dose                     CHAR(4) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_subcode                     CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        trade_nme_id                    INTEGER,
        pkg_size_qty                    DECIMAL(11,3),
        ndc_mfr_cde                     CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,
        ndc9_cde                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
        ndc11_cde                       CHAR(11) CHARACTER SET LATIN NOT CASESPECIFIC,
        fdb_CL                          CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        FDB_SK_GTC                      CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
        match_key_txt                   CHAR(74) CHARACTER SET LATIN NOT CASESPECIFIC)
NO PRIMARY INDEX @D@C@
9825@3755@//                                                                        @D@C@
9825@3760@exec tdat_insert into fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
        SELECT  RULE.RULE_CATEGORY_CDE,
                DR2.DOMAIN_ITEM_DSC,
                DRUGLIST.DRUG_LIST_ID,
                RULE.RULE_ID,
		0,
                RULE.RULE_NME,
                (RULE.EFFECT_DATE),
                (case when CAST(RULE.EXPIRE_DATE as DATE) > '2090-01-01'
                        then CAST ('3000-12-31' AS DATE)
                        else CAST(RULE.EXPIRE_DATE as DATE) end),
                DRUGLIST.FDB_SK_STC,
                DRUGLIST.FDB_SK_HICL,
                DRUGLIST.FDB_SK_STR,
                DRUGLIST.FDB_SK_RT,
                DRUGLIST.FDB_SK_DOSE,
                CASE WHEN DRUGLIST.FDB_SUBCODE = 'W' THEN 'A'
                        WHEN DRUGLIST.FDB_SUBCODE = 'X' THEN 'B'
                        WHEN DRUGLIST.FDB_SUBCODE = 'Y' THEN 'G'
                        ELSE DRUGLIST.FDB_SUBCODE END,
                DRUGLIST.TRADE_NM_ID,
                DRUGLIST.FDB_PS,
                DRUGLIST.NDC_MANUF_CDE,
                DRUGLIST.NDC9_CDE,
                DRUGLIST.NDC11_CDE,
                DRUGLIST.FDB_CL,
                DRUGLIST.FDB_SK_GTC,
                ' '
        FROM    fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!? RULE
                INNER JOIN IRHM_CRS_PRODDB_V.RULE_TYPE RUTYP
        ON      RULE.RULE_TYPE_ID = RUTYP.RULE_TYPE_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR
        ON      RULE.STATUS_ID = DR.DOMAIN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR2
        ON      RULE.ORIGINATOR_ID = DR2.DOMAIN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.VARIABLE_VALUE VAR
        ON      RULE.RULE_ID = VAR.RULE_AGN_ID
        AND     RULE.RULE_VERSION_SEQ = VAR.RULE_VERSION_SEQ
                INNER JOIN IRHM_CRS_PRODDB_V.TECH_DRUG_LIST_DETAIL DRUGLIST
        ON      VAR.ARGUMENT_ID = DRUGLIST.DRUG_LIST_ID
        WHERE   DR.domain_nme = 'status_id'
        and     DR2.domain_nme = 'originator_id'
        and     VAR.variable_type_cde = '3005'
        and     VAR.argument_cde = 2        /*1-INCOMING/TARGETED DRUG, 2-HISTORY DRUG*/
        and     DRUGLIST.DRUG_LIST_ID <> 9999
        GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 @D@C@
9825@3761@//                                                                        @D@C@
9825@3762@//  Remove unwanted drug lists that are linked mostly to Generics         @D@C@
9825@3763@//                                                                        @D@C@
9825@3764@exec tdat_delete
                  from fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? a
                 where (a.rule_id,a.drug_list_id) IN
                 (Select distinct rule_id,sec_drug_list_id
                    from fr_proddb_v.bdro_secondary_druglist b
                   where var_value_nbr in (2,3))  @D@C@
9825@3770@exec tdat_update fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
        set     fdb_sk_stc = coalesce(fdb_sk_stc,' ')
                ,fdb_sk_hicl = coalesce(fdb_sk_hicl,' ')
                ,fdb_sk_str = coalesce(fdb_sk_str,' ')
                ,fdb_sk_rt = coalesce(fdb_sk_rt,' ')
                ,fdb_sk_dose = coalesce(fdb_sk_dose,' ')
                ,fdb_subcode = coalesce(fdb_subcode,' ')
                ,ndc_mfr_cde = coalesce(ndc_mfr_cde,' ')
                ,ndc9_cde = coalesce(ndc9_cde,' ')
                ,ndc11_cde = coalesce(ndc11_cde,' ')
                ,fdb_CL = coalesce(fdb_CL,' ')
                ,FDB_SK_GTC = coalesce(FDB_SK_GTC,' ')
                ,pkg_size_qty = coalesce(pkg_size_qty,0)
                ,trade_nme_id = coalesce(trade_nme_id,0) @D@C@
9825@3780@exec tdat_update fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
        set     match_key_txt =  cast(case when fdb_sk_stc > ' ' then fdb_sk_stc else REGEXP_REPLACE( fdb_sk_stc,' ','_') end as char(6)) ||
                        cast(case when fdb_sk_hicl > ' ' then fdb_sk_hicl else REGEXP_REPLACE( fdb_sk_hicl,' ','_') end as char(6)) ||
                        cast(case when fdb_sk_str > ' ' then fdb_sk_str else REGEXP_REPLACE( fdb_sk_str,' ','_') end as char(5)) ||
                        cast(case when fdb_sk_rt > ' ' then fdb_sk_rt else REGEXP_REPLACE( fdb_sk_rt,' ','_') end as char(3)) ||
                        cast(case when fdb_sk_dose > ' ' then fdb_sk_dose else REGEXP_REPLACE( fdb_sk_dose,' ','_') end as char(4)) ||
                        cast(case when fdb_subcode > ' ' then fdb_subcode else REGEXP_REPLACE( fdb_subcode,' ','_') end as char(1)) ||
                        cast(case when ndc_mfr_cde > ' ' then ndc_mfr_cde else REGEXP_REPLACE( ndc_mfr_cde,' ','_') end as char(5)) ||
                        cast(case when ndc9_cde > ' ' then ndc9_cde else REGEXP_REPLACE( ndc9_cde,' ','_') end as char(9)) ||
                        cast(case when ndc11_cde > ' ' then ndc11_cde else REGEXP_REPLACE( ndc11_cde,' ','_') end as char(11)) ||
                        cast(case when fdb_CL > ' ' then fdb_CL else REGEXP_REPLACE( fdb_CL,' ','_') end as char(1)) ||
                        cast(case when FDB_SK_GTC > ' ' then FDB_SK_GTC else REGEXP_REPLACE( FDB_SK_GTC,' ','_') end as char(2)) ||
                        case when pkg_size_qty > 0 then cast(cast(pkg_size_qty as FORMAT '9(8)V999') as char(11))  else '___________' end ||
                        case when trade_nme_id > 0 then cast(cast(trade_nme_id as FORMAT '9(10)') as char(10))  else '__________' end @D@C@
9825@3790@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? column match_key_txt @D@C@
9825@3800@//*                                                                             * @D@C@
9825@3810@//* Update the Rule name for Each History Rule                                  * @D@C@
9825@3820@//*                                                                             * @D@C@
9825@3830@exec tdat_update a
        From    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? a,
                fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!?  b
        SET     rule_nme  = b.rule_nme
        WHERE   a.rule_id   = b.rule_id @D@C@
9825@3840@exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? a,
                fr_proddb_v.bdro_rule_detail b
        set     rule_row_id = b.rule_row_id
        where   a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme @D@C@
9825@3850@exec tdat_insert into fr_proddb_v.bdro_rule_detail
        select  rule_id,
                rule_category_cde,
                rule_originator_dsc,
                rule_nme,
		4,
                NULL
        from    (SELECT  distinct rule_id,
                        rule_category_cde,
                        rule_originator_dsc,
                        rule_nme
                from    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
                where   rule_row_id = 0) a @D@C@
9825@3860@exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? a,
                fr_proddb_v.bdro_rule_detail b
        set     rule_row_id = b.rule_row_id
        where   a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme
        and     a.rule_row_id = 0 @D@C@
9825@3870@//*                                                                             * @D@C@
9825@3880@//* Get the Product-id's for each of the selected History rules                 * @D@C@
9825@3890@//*                                                                             * @D@C@
9825@3900@exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!? @D@C@
9825@3910@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	product_id			INTEGER NOT NULL,
	product_source_cde		INTEGER NOT NULL,	
	rule_id				INTEGER NOT NULL)
	PRIMARY INDEX ( product_id, rule_id ) @D@C@
9825@3920@exec tdat_insert into fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!?
	SELECT DISTINCT
		PROD.PRODUCT_ID,
		PROD.PRODUCT_SOURCE_CDE,
		RULE.RULE_AGN_ID
	FROM 	IRHM_CRS_PRODDB_V.RULE_DETAIL RULE
		INNER JOIN IRHM_CRS_PRODDB_V.RULE_GROUP_DETAIL RGD 
	ON 	RULE.RULE_AGN_ID = RGD.RULE_AGN_ID
		INNER JOIN IRHM_CRS_PRODDB_V.PRODUCT_RULE_GRP PR 
	ON 	RGD.RULE_GROUP_ID = PR.RULE_GROUP_ID
		INNER JOIN IRHM_CRS_PRODDB_V.PRODUCT PROD 
	ON 	PR.PRODUCT_SOURCE_CDE = PROD.PRODUCT_SOURCE_CDE
	AND 	PR.PRODUCT_ID = PROD.PRODUCT_ID
	AND 	PR.PRODUCT_VERSION_SEQ = PROD.PRODUCT_VERSION_SEQ
	WHERE 	RULE.RULE_AGN_ID IN (
		Select distinct rule_id 
		from  fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? 
		group by 1) @D@C@
9825@3930@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!? INDEX ( product_id, rule_id ) @D@C@
9825@3940@exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_rules_brands_tmp_?!temp_table_suffix!? @D@C@
9825@3950@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_tgt_rules_brands_tmp_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (rule_id ,ndc9_nbr, rule_eff_dte ) @D@C@
9825@3951@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
             column (RULE_ID ,RULE_ROW_ID) @D@C@
9825@3952@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!?
             column (RULE_ID) @D@C@
9825@3953@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
             column (RULE_EFF_DTE ,RULE_EXP_DTE)  @D@C@
9825@3954@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
             column (RULE_ID) @D@C@
9825@3955@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?
             column (NDC9_NBR) @D@C@
9825@3960@exec tdat_insert into fr_workdb.wt_BDRO_NF_TGT_rules_brands_tmp_?!temp_table_suffix!?
        SELECT  distinct
                A.RULE_ID,
                A.RULE_ROW_ID,
                D.rule_eff_dte,
                D.rule_exp_dte,
                SUBSTR(B.product_service_id,1,9)
        FROM    fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? A,
                fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? B,
                fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? D
        WHERE   SUBSTR(B.product_service_id,1,9) = D.ndc9_nbr
        AND     A.RULE_ID   = D.RULE_ID
        AND     b.match_key_txt LIKE a.match_key_txt @D@C@
9825@3970@//*=============================================================================   * @D@C@
9825@3980@//* ????????        Code added to ensure rules that were previously decisioned     * @D@C@
9825@3990@//*               (added to maint table) are included in the daily rules extract.  * @D@C@
9825@4000@//*                This will ensure that all the required hierarchy data is        * @D@C@
9825@4010@//*                pulled so that the final results table is populated accurately  * @D@C@
9825@4020@//*                                                                                * @D@C@
9825@4030@exec tdat_insert into fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!?
        Select  distinct 
		a.ndc9_nbr
                ,a.rule_id
		,zeroifnull(b.rule_row_id) * -1 /* missing will have negative rule_row_id */ 
                ,a.rule_category_cde
                ,a.access_ind
                ,a.form_ind
                ,a.rule_originator_dsc
                ,a.rule_nme
                ,a.rule_eff_dte
                ,a.rule_exp_dte
        from    fr_proddb.BDRO_NF_drugs_rules_ndc a
		left outer join
                fr_proddb_v.bdro_rule_detail b
        on      a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme
        where   a.cat_id NOT IN (-1,0,3)
        and     a.form_ind = 'N'
        and     a.access_ind = 'N'
        and     (a.ndc9_nbr, a.rule_id, a.rule_eff_dte) NOT IN (
                Select  ndc9_nbr, rule_id, rule_eff_dte
                from    fr_workdb.wt_BDRO_NF_TGT_rules_brands_tmp_?!temp_table_suffix!? 
                group by 1,2,3) @D@C@
9825@4040@exec tdat_insert into fr_proddb_v.bdro_rule_detail
        select  rule_id,
                rule_category_cde,
                rule_originator_dsc,
                rule_nme,
		5,
                NULL
        from    (SELECT  distinct rule_id,
                        rule_category_cde,
                        rule_originator_dsc,
                        rule_nme
                from    fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!?
                where   rule_row_id = 0) a @D@C@
9825@4050@exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? a,
                fr_proddb_v.bdro_rule_detail b
        set     rule_row_id = b.rule_row_id * -1 /* missing will have negative rule_row_id */
        where   a.rule_id = b.rule_id
        and     a.rule_category_cde = b.rule_category_cde
        and     a.rule_originator_dsc = b.rule_originator_dsc
        and     a.rule_nme = b.rule_nme
        and     a.rule_row_id = 0 @D@C@
9825@4060@//exec tdat_collect stats on fr_proddb_v.bdro_rule_detail index (rule_row_id) @D@C@
9825@4070@//*                                                                             * @D@C@
9825@4080@//*  Create new table to extract Selected Brands for NF Targeted Rules             * @D@C@
9825@4090@//*                                                                                * @D@C@
9825@4092@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@4100@exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? @D@C@
9825@4110@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_tgt_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        product_id                      INTEGER NOT NULL,
        product_source_cde             	INTEGER NOT NULL, 
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr ) @D@C@
9825@4120@exec tdat_insert into fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!?
        SELECT  distinct 
		b.PRODUCT_ID,
                b.PRODUCT_SOURCE_CDE,
                A.RULE_ID,
                A.RULE_ROW_ID,
                'T',
                a.rule_eff_dte,
                a.rule_exp_dte,
                a.ndc9_nbr
	FROM 	fr_workdb.wt_BDRO_NF_TGT_rules_brands_tmp_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!?  b
	WHERE 	a.rule_id = b.rule_id @D@C@
9825@4130@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? 
				INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr ) @D@C@
9825@4140@//*                                                                                * @D@C@
9825@4150@//*  Delete any NF Targeted rule if the brand/rule is not in the list of           * @D@C@
9825@4160@//*   Hist rules to be retained                                                    * @D@C@
9825@4170@//*                                                                                * @D@C@
9825@4180@exec tdat_delete from fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? 
	Where 	(ndc9_nbr,rule_id,rule_eff_dte,rule_exp_dte) NOT IN (
		select 	ndc9_nbr,rule_id,rule_eff_dte,rule_exp_dte
		from 	fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!?)       @D@C@
9825@4190@//*  add missing rules                                                            * @D@C@
9825@4200@exec tdat_insert into fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!?
        SELECT  distinct
                a.PRODUCT_ID,
                a.PRODUCT_SOURCE_CDE,
                B.RULE_ID,
                B.RULE_ROW_ID,
                'T',
                B.rule_eff_dte,
                B.rule_exp_dte,
                B.ndc9_nbr
        FROM    fr_proddb_v.bdro_prod_rule_incm_t01N a,
                fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? B
        WHERE   a.rule_id = b.rule_id
        and     b.form_ind = 'N'
        and     b.access_ind = 'N' @D@C@
9825@4210@//*===========================================================================  * @D@C@
9825@4220@//*  Delete any access rules if the brand is not in the list of                    * @D@C@
9825@4230@//*   non-form drugs                                                               * @D@C@
9825@4240@//*            ????????????????????????                                            * @D@C@
9825@4250@exec tdat_delete from fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!?
	Where 	ndc9_nbr NOT IN (
		SELECT 	substr(ndc_nbr,1,9)
		From  	fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? 
		Group by 1) @D@C@
9825@4260@//*                                                                                * @D@C@
9825@4270@//*   Delete any targeted rules if the brand is not in the list of                 * @D@C@
9825@4280@//*   formulary drugs                                                              * @D@C@
9825@4290@//*                                                                                * @D@C@
9825@4300@exec tdat_delete from fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!?
	Where 	ndc9_nbr NOT IN (
		SELECT 	substr(ndc_nbr,1,9)
		From  	fr_proddb_v.BDRO_forms_and_brands 
		Group by 1) @D@C@
9825@4310@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? 
					INDEX ( product_id ,product_source_cde ,rule_id ,ndc9_nbr ) @D@C@
9825@4320@//*                                                                                * @D@C@
9825@4330@//* ===========================================================================    * @D@C@
9825@4340@//*  Create a final NF_rules_brands table with generated AGN's that will           * @D@C@
9825@4350@//*   be used to save work space.                                                  * @D@C@
9825@4360@//*                                                                                * @D@C@
9825@4370@exec tdat_drop table fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!? @D@C@
9825@4380@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	product_id			INTEGER NOT NULL,
	product_source_cde		INTEGER NOT NULL,	
	rule_id				INTEGER NOT NULL,
	rule_row_id			INTEGER NOT NULL,
	rule_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	med_d_ind			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'))
        NO PRIMARY INDEX @D@C@
9825@4390@exec tdat_insert into fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!?
        select distinct
                a.product_id
                ,a.product_source_cde
                ,a.rule_id
                ,a.rule_row_id
                ,a.rule_type
                ,a.rule_eff_dte
                ,a.rule_exp_dte
                ,a.ndc9_nbr
                ,b.med_d_ind
                ,CASE WHEN a.rule_eff_dte < b.drug_eff_dte THEN b.drug_eff_dte
                        ELSE a.rule_eff_dte END
                ,CASE WHEN a.rule_exp_dte > b.drug_exp_dte THEN b.drug_exp_dte
                        ELSE a.rule_exp_dte END
        From    fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!? a,
                fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? b
        where   a.ndc9_nbr = b.ndc9_nbr
        And     (a.rule_eff_dte between b.drug_eff_dte and b.drug_exp_dte
                OR
                b.drug_eff_dte  between a.rule_eff_dte and a.rule_exp_dte) @D@C@
9825@4400@exec tdat_insert into fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!?
        select distinct
                a.product_id
                ,a.product_source_cde
                ,a.rule_id
                ,a.rule_row_id
                ,a.rule_type
                ,a.rule_eff_dte
                ,a.rule_exp_dte
                ,a.ndc9_nbr
                ,b.med_d_ind
                ,CASE WHEN a.rule_eff_dte < b.drug_eff_dte THEN b.drug_eff_dte
                        ELSE a.rule_eff_dte END
                ,CASE WHEN a.rule_exp_dte > b.drug_exp_dte THEN b.drug_exp_dte
                        ELSE a.rule_exp_dte END
        From    fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? a,
                (select distinct substr(ndc_nbr,1,9) as ndc9_nbr
                        ,med_d_ind
                        ,drug_eff_dte
                        ,drug_exp_dte
                from    fr_proddb_v.bdro_cntr_ndcs_form_cur) b    /* !!!!!!!!! from FM daily !!!!!!!!!! */
        where   a.ndc9_nbr = b.ndc9_nbr
        And     (a.rule_eff_dte between b.drug_eff_dte and b.drug_exp_dte
                OR
                b.drug_eff_dte  between a.rule_eff_dte and a.rule_exp_dte) @D@C@
9825@4410@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!?
                                column (product_id, product_source_cde, med_d_ind) @D@C@
9825@4420@//*                                                                                * @D@C@
9825@4430@exec tdat_CREATE VOLATILE TABLE vt_bdro_carr_prod_all_t AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY carrier_operational_id, group_type, form_id, product_source_cde, prod_id) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY carrier_operational_id, group_type, form_id, product_source_cde, prod_id
                                  ORDER BY eff_dte, end_dte) as range_dte_seq,
                carrier_operational_id,
                group_type,
                form_id,
                product_source_cde,
                prod_id,
                eff_dte,
                end_dte
        from    (select  distinct
                        carrier_operational_id
                        ,group_type
                        ,form_id
                        ,product_source_cde
                        ,prod_id
                        ,CASE WHEN grp_eff_dte < prod_eff_dte THEN prod_eff_dte
                                ELSE grp_eff_dte END as eff_dte
                        ,CASE WHEN grp_term_dte > prod_exp_dte THEN prod_exp_dte
                                ELSE grp_term_dte END as end_dte
                from    fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
                where   grp_eff_dte between prod_eff_dte and prod_exp_dte
                OR      prod_eff_dte  between grp_eff_dte and grp_term_dte ) a
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@4440@exec tdat_CREATE VOLATILE TABLE vt_bdro_carr_prod_all_d AS (
        select  max(a.end_dte) as end_dte
                ,a.eff_dte
                ,a.group_key_id
        from    vt_bdro_carr_prod_all_t a,
                (select eff_dte, group_key_id
                from    vt_bdro_carr_prod_all_t
                group by 1,2) b
                where   a.group_key_id = b.group_key_id
                and     a.eff_dte = b.eff_dte
                group by 2,3
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@4450@exec tdat_delete a
        from    vt_bdro_carr_prod_all_t a,
                vt_bdro_carr_prod_all_d b
        where   a.group_key_id = b.group_key_id
        and     a.eff_dte = b.eff_dte
        and     a.end_dte < b.end_dte @D@C@
9825@4460@exec tdat_CREATE VOLATILE TABLE vt_bdro_carr_prod_all AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY carrier_operational_id, group_type, form_id, product_source_cde, prod_id) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY carrier_operational_id, group_type, form_id, product_source_cde, prod_id
                                  ORDER BY eff_dte, end_dte) as range_dte_seq,
                carrier_operational_id,
                group_type,
                form_id,
                product_source_cde,
                prod_id,
                eff_dte,
                end_dte
        FROM    vt_bdro_carr_prod_all_t
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@4470@exec tdat_collect stats on vt_bdro_carr_prod_all index (group_key_id, range_dte_seq) @D@C@
9825@4480@exec tdat_collect stats on vt_bdro_carr_prod_all column (group_key_id) @D@C@
9825@4490@exec tdat_drop table fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? @D@C@
9825@4492@exec tdat_drop table vt_bdro_carr_prod_all_t @D@C@
9825@4493@exec tdat_drop table vt_bdro_carr_prod_all_d @D@C@
9825@4500@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        product_source_cde              INTEGER NOT NULL,
        prod_id                         INTEGER NOT NULL,
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        NO PRIMARY INDEX @D@C@
9825@4510@exec tdat_insert into fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!?
WITH RECURSIVE  bdro_carr_prod_all_fin (group_key_id_f,
                                carrier_operational_id_f, group_type_f, form_id_f, product_source_cde_f, prod_id_f,
                                eff_dte_f, end_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        carrier_operational_id, group_type, form_id, product_source_cde, prod_id,
                        eff_dte, end_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_bdro_carr_prod_all
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        carrier_operational_id, group_type, form_id, product_source_cde, prod_id,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then eff_dte_f
                                when end_dte between eff_dte_f and end_dte_f then eff_dte_f
                                else eff_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then
                                                case when end_dte < end_dte_f then end_dte_f else end_dte end
                                when end_dte between eff_dte_f and end_dte_f then
                                                case when end_dte < end_dte_f then end_dte_f else end_dte end
                                else end_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte
                                        then range_per_seq_f
                                when end_dte between eff_dte_f and end_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_bdro_carr_prod_all
                        join bdro_carr_prod_all_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  carrier_operational_id_f,
                group_type_f,
                FORM_ID_f,
                product_source_cde_f,
                prod_id_f,
                min(eff_dte_f),
                max(end_dte_f)
        FROM    bdro_carr_prod_all_fin
        group by 1,2,3,4,5, range_per_seq_f @D@C@
9825@4512@exec tdat_drop table vt_bdro_carr_prod_all @D@C@
9825@4520@//exec tdat_insert into fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!?
        select  distinct
                carrier_operational_id
                ,group_type
                ,grp_eff_dte
                ,grp_term_dte
                ,form_id
                ,product_source_cde
                ,prod_id
                ,CASE WHEN grp_eff_dte < prod_eff_dte THEN prod_eff_dte
                        ELSE grp_eff_dte END
                ,CASE WHEN grp_term_dte > prod_exp_dte THEN prod_exp_dte
                        ELSE grp_term_dte END
        from 	fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
        where   grp_eff_dte between prod_eff_dte and prod_exp_dte
	OR 	prod_eff_dte between grp_eff_dte and grp_term_dte @D@C@
9825@4530@//exec tdat_insert into fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!?
        select  distinct
                carrier_operational_id
                ,group_type
                ,grp_eff_dte
                ,grp_term_dte
                ,form_id
                ,product_source_cde
                ,prod_id
                ,prod_eff_dte
                ,prod_exp_dte
        from fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? @D@C@
9825@4540@exec tdat_collect stats on fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? column (prod_id, product_source_cde, group_type) @D@C@
9825@4550@exec tdat_collect stats on fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? column (prod_id) @D@C@
9825@4560@//*                                                                                * @D@C@
9825@4570@//*  Extract intermediate/final tbl: Link rule to client data via rule_agn         * @D@C@
9825@4580@//*                                  in order to conserve workdb space             * @D@C@
9825@4590@//*        . Also, rules will be excluded:                                         * @D@C@
9825@4600@//*          . If brand/group_type was not selected                                * @D@C@
9825@4610@//*            (Group types are: 'Y' (Med-D) and 'N' (Commercial))                 * @D@C@
9825@4620@//*          . If rule_eff_dte not within drug-list effective and end dates        * @D@C@
9825@4630@//* ===========================================================================    * @D@C@
9825@4640@//* build the semi-final table with rows for each group within the carrier.        * @D@C@
9825@4650@//*  (Carrier and contract data will be retrieved in the refresh job (9710)        * @D@C@
9825@4660@//*   via a join to table: fr_workdb.wt_BDRO_NF_client_ext2)                       * @D@C@
9825@4670@//*                                                                                * @D@C@
9825@4680@//*                                                                                * @D@C@
9825@4690@exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!? @D@C@
9825@4700@exec tdat_CREATE MULTISET TABLE FR_WORKDB.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        prod_id                         INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65),
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
NO PRIMARY INDEX @D@C@
9825@4710@exec tdat_insert into fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!?
	Select 	distinct 
		a.carrier_operational_id,
		a.group_type,
		a.form_id,
		a.prod_id,
		a.product_source_cde,
                a.prod_eff_dte,
                a.prod_exp_dte,
		b.rule_id,
		b.rule_row_id,
		b.rule_type,
                b.rule_eff_dte,
                b.rule_exp_dte,
                CASE WHEN b.calc_eff_dte < a.prod_eff_dte THEN a.prod_eff_dte
                        ELSE b.calc_eff_dte END,
                CASE WHEN b.calc_exp_dte > a.prod_exp_dte THEN a.prod_exp_dte
                        ELSE b.calc_exp_dte END,
                b.ndc9_nbr
	From 	fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!? b
	Where 	a.prod_id = b.product_id
	and 	a.product_source_cde = b.product_source_cde
	and 	a.group_type = b.med_d_ind
        And     (b.calc_eff_dte between a.prod_eff_dte and a.prod_exp_dte
                OR
                a.prod_eff_dte  between b.calc_eff_dte and b.calc_exp_dte) @D@C@
9825@4720@//*                                                                                * @D@C@
9825@4730@//* Step7: Match by rule,brand and form-id depending on the rule type              * @D@C@
9825@4740@//*        . access rules s/b non-formulary and rebate-eligible                    * @D@C@
9825@4750@//*        . non-form targeted (preferred history rules)                           * @D@C@
9825@4760@//*                       s/b formulary and rebate-eligible                        * @D@C@
9825@4770@//* ===========================================================================    * @D@C@
9825@4780@//*                                                                                * @D@C@
9825@4790@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!? column (ndc9_nbr, form_id) @D@C@
9825@4800@//*                                                                                * @D@C@
9825@4810@exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? @D@C@
9825@4820@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
	form_id				CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        Form_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        Form_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL)
UNIQUE PRIMARY INDEX ( form_id ,ndc9_nbr, rule_type) @D@C@
9825@4830@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_forms_brands_summ AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY form_id, ndc9_nbr, rule_type) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY form_id, ndc9_nbr, rule_type
                                  ORDER BY non_form_eff_dte, non_form_exp_dte) as range_dte_seq,
		form_id,
		ndc9_nbr,
		rule_type,
		non_form_eff_dte,
		non_form_exp_dte
	from 	( 
	 	select	form_id, 
			substr(ndc_nbr,1,9) as ndc9_nbr,	
			'A' as rule_type,
			non_form_eff_dte,
			non_form_exp_dte
		from  	fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? 
		group by 1,2,3,4,5 
		UNION ALL
		select  form_id,
			substr(ndc_nbr,1,9) as ndc9_nbr,
			'T' as rule_type,
			form_eff_dte,
			form_exp_dte
		from    fr_proddb_v.BDRO_forms_and_brands
		group by 1,2,3,4,5 ) a
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@4840@exec tdat_insert into fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!?
WITH RECURSIVE BDRO_NF_forms_brands_summ_fin (group_key_id_f,
                                form_id_f, ndc9_nbr_f, rule_type_f, 
				non_form_eff_dte_f, non_form_exp_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        form_id, ndc9_nbr, rule_type,
			non_form_eff_dte, non_form_exp_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_BDRO_NF_forms_brands_summ
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        form_id, ndc9_nbr, rule_type,
                        case when non_form_exp_dte_f + interval '1' day between non_form_eff_dte and non_form_exp_dte then non_form_eff_dte_f
                                when non_form_exp_dte between non_form_eff_dte_f and non_form_exp_dte then non_form_eff_dte_f
                                else non_form_eff_dte end,
                        non_form_exp_dte,
                        case when non_form_exp_dte_f + interval '1' day between non_form_eff_dte and non_form_exp_dte then range_per_seq_f
                                when non_form_exp_dte between non_form_eff_dte_f and non_form_exp_dte then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_BDRO_NF_forms_brands_summ
                        join BDRO_NF_forms_brands_summ_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  form_id_f, ndc9_nbr_f, rule_type_f,
                min(non_form_eff_dte_f),
                max(non_form_exp_dte_f)
        FROM    BDRO_NF_forms_brands_summ_fin
        group by 1,2,3,range_per_seq_f @D@C@
9825@4850@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? INDEX ( form_id ,ndc9_nbr, rule_type) @D@C@
9825@4852@exec tdat_drop table vt_BDRO_NF_forms_brands_summ @D@C@
9825@4860@//*                                                                                * @D@C@
9825@4870@//*   New 'final' table contains rule data where form-status is 'N"                * @D@C@
9825@4880@//*   for only part of the year                                                    * @D@C@
9825@4890@//*                                                                                * @D@C@
9825@4892@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@4900@exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? @D@C@
9825@4910@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL COMPRESS('Y','N'),
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        prod_id                         INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65),
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        NO PRIMARY INDEX @D@C@
9825@4920@exec tdat_insert into fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!?
        Select  distinct
                a.carrier_operational_id,
                a.group_type,
                a.form_id,
                a.prod_id,
                a.product_source_cde,
                a.prod_eff_dte,
                a.prod_exp_dte,
                a.rule_id,
                a.rule_row_id,
                a.rule_type,
                a.rule_eff_dte,
                a.rule_exp_dte,
                CASE WHEN b.form_eff_dte < a.calc_eff_dte THEN a.calc_eff_dte
                        ELSE b.form_eff_dte END,
                CASE WHEN b.form_exp_dte > a.calc_exp_dte THEN a.calc_exp_dte
                        ELSE b.form_exp_dte END,
                a.ndc9_nbr
        From    fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!?  a,
                fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? b
        Where   a.ndc9_nbr = b.ndc9_nbr
        And     a.form_id   = b.form_id
	and	a.rule_type = 'A'
	and	a.rule_type = b.rule_type
        And     ( a.calc_eff_dte between b.form_eff_dte and b.form_exp_dte
                OR b.form_eff_dte  between a.calc_eff_dte and a.calc_exp_dte) 
	and	(a.ndc9_nbr, a.form_id) in (
                select  distinct substr(ndc_nbr,1,9), form_id
                from    fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!?) @D@C@
9825@4930@//*  ????????????????????????????????                                                 * @D@C@
9825@4940@exec tdat_insert into fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!?
        Select  distinct
                a.carrier_operational_id,
                a.group_type,
                a.form_id,
                a.prod_id,
                a.product_source_cde,
                a.prod_eff_dte,
                a.prod_exp_dte,
                a.rule_id,
                a.rule_row_id,
		a.rule_type,
                a.rule_eff_dte,
                a.rule_exp_dte,
                CASE WHEN b.form_eff_dte < a.calc_eff_dte THEN a.calc_eff_dte
                        ELSE b.form_eff_dte END,
                CASE WHEN b.form_exp_dte > a.calc_exp_dte THEN a.calc_exp_dte
                        ELSE b.form_exp_dte END,
                a.ndc9_nbr
        From    fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!?  a,
                fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? b
        Where   a.ndc9_nbr = b.ndc9_nbr
        And     a.form_id   = b.form_id
	and	a.rule_type = 'T'
	and	a.rule_type = b.rule_type
        And     ( a.calc_eff_dte between b.form_eff_dte and b.form_exp_dte
                OR b.form_eff_dte  between a.calc_eff_dte and a.calc_exp_dte)
	and	(a.ndc9_nbr, a.form_id) in (
                select  distinct substr(ndc_nbr,1,9), form_id
                from    fr_proddb_v.BDRO_forms_and_brands) @D@C@
9825@4950@//?????exec tdat_collect stats on fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? @D@C@
9825@4960@//*                                                                                * @D@C@
9825@4970@//*  *** New Versioning Logic ***                                                  * @D@C@
9825@4980@//*  =============================                                                 * @D@C@
9825@4990@//*                                                                                * @D@C@
9825@5000@//* 2016-03-04:  new code added to match calculated eff and end dates in final     * @D@C@
9825@5010@//*              table to product version eff and end dates.  For each set of      * @D@C@
9825@5020@//*              dates, use max-eff and min-end dates.  These will become the      * @D@C@
9825@5030@//*              new calc-eff and calc_end dates in the final table.               * @D@C@
9825@5040@//*                                                                                * @D@C@
9825@5050@//*  Build a new work table to capture the actual rule-id and                      * @D@C@
9825@5060@//*  rule_category_cde used in subsequent processing.                              * @D@C@
9825@5070@//*                                                                                * @D@C@
9825@5080@//* Get all unique rule-ids and product-ids from latest final table...             * @D@C@
9825@5090@//*                                                                                * @D@C@
9825@5100@exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!? @D@C@
9825@5110@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_All_Products_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        prod_id                 INTEGER NOT NULL)
        PRIMARY INDEX ( prod_id ) @D@C@
9825@5120@exec tdat_insert into fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!?
        Select  prod_id
        from    fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? 
        group by 1 @D@C@
9825@5130@exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Rules_?!temp_table_suffix!? @D@C@
9825@5140@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_All_Rules_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL)
        PRIMARY INDEX ( rule_id ) @D@C@
9825@5150@exec tdat_insert into fr_workdb.wt_BDRO_NF_All_Rules_?!temp_table_suffix!?
        Select  rule_id
        from    fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? 
        group by 1 @D@C@
9825@5160@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!? INDEX (prod_id) @D@C@
9825@5170@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_All_Rules_?!temp_table_suffix!? INDEX (rule_id) @D@C@
9825@5180@//*                                                                                * @D@C@
9825@5190@//* Get all pertinent data for each rule_id                                        * @D@C@
9825@5200@//*                                                                                * @D@C@
9825@5210@exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? @D@C@
9825@5220@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_category_id                INTEGER NOT NULL,
        rule_group_id                   INTEGER NOT NULL,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX ( rule_id ,rule_group_id) @D@C@
9825@5230@exec tdat_insert into fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!?
        SELECT DISTINCT
                R.RULE_AGN_ID,
                R.RULE_CATEGORY_ID,
                RGD.RULE_GROUP_ID,
                C.RULE_CATEGORY_CDE
        FROM    IRHM_CRS_PRODDB_V.RULE_DETAIL R
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Rules_?!temp_table_suffix!? AR
        On      AR.RULE_ID = R.RULE_AGN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.RULE_GROUP_DETAIL RGD
        ON      RGD.RULE_AGN_ID = R.RULE_AGN_ID
                INNER JOIN IRHM_CRS_PRODDB_V.RULE_CATEGORY C
        ON      R.RULE_CATEGORY_ID = C.RULE_CATEGORY_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR
        ON      DR.DOMAIN_ID = R.STATUS_ID
        WHERE   C.RULE_CATEGORY_CDE IN (
                        Select  rule_cat_cde
                        from    fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!?  
                        where   column_nme = 'rule_category_cde')
        AND     DR.DOMAIN_NME NE 'WIPD'
        AND     DR.DOMAIN_NME NE 'TEST' @D@C@
9825@5240@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? INDEX ( rule_id ,rule_group_id) @D@C@
9825@5250@//*                                                                                * @D@C@
9825@5260@//* Next, for each selected rule-id, get the associated product_id and             * @D@C@
9825@5270@//*  the version dates for each product                                            * @D@C@
9825@5271@exec tdat_COLLECT STATS ON fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? COLUMN (rule_cat_cde) @D@C@
9825@5280@exec tdat_drop table fr_workdb.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!? @D@C@
9825@5290@exec tdat_CREATE SET TABLE FR_WORKDB.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        prod_id                         INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL,
        rule_id                         INTEGER NOT NULL,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ver_eff_dte                     DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        ver_exp_dte                     DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX ( prod_id ,rule_id) @D@C@
9825@5300@//exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_prod_id_versions  AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY  p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde
                                  ORDER BY ver_eff_dte, ver_exp_dte) as range_dte_seq,
                P.PRODUCT_ID,
                P.PRODUCT_SOURCE_CDE,
                ARD.RULE_ID,
                ARD.RULE_CATEGORY_CDE,
                (CAST(p.EFFECT_DATE as DATE)) as ver_eff_dte,
                (case when CAST(p.EXPIRE_DATE as DATE) > '2090-01-01'
                        then CAST ('3000-12-31' AS DATE)
                        else CAST(p.EXPIRE_DATE as DATE) end) as ver_exp_dte
        FROM    IRHM_CRS_PRODDB_V.PRODUCT P
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!?  AP
        on      AP.PROD_ID = P.PRODUCT_ID
                INNER JOIN IRHM_CRS_PRODDB_V.PRODUCT_RULE_GRP PR
        ON      P.PRODUCT_SOURCE_CDE = PR.PRODUCT_SOURCE_CDE
        AND     P.PRODUCT_ID = PR.PRODUCT_ID
        AND     P.PRODUCT_VERSION_SEQ = PR.PRODUCT_VERSION_SEQ
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? ARD
        ON      PR.RULE_GROUP_ID = ARD.RULE_GROUP_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR1
        ON      DR1.DOMAIN_ID = P.STATUS_ID
        WHERE   P.PRODUCT_SOURCE_CDE IN ('58', '65', '69')
        /* 1022 AND     ARD.RULE_CATEGORY_CDE IN (
                        Select  rule_cat_cde
                        from    fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!?
                        where   column_nme = 'rule_category_cde') */
        GROUP BY 3,4,5,6,7,8
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@5310@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_prod_id_versions_0  AS (
        select  P.PRODUCT_ID,
                P.PRODUCT_SOURCE_CDE,
                P.PRODUCT_VERSION_SEQ,
                P.STATUS_ID,
                (CAST(p.EFFECT_DATE as DATE)) as ver_eff_dte,
                (case when CAST(p.EXPIRE_DATE as DATE) > '2090-01-01'
                        then CAST ('3000-12-31' AS DATE)
                        else CAST(p.EXPIRE_DATE as DATE) end) as ver_exp_dte
        FROM    IRHM_CRS_PRODDB_V.PRODUCT P
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!?  AP
        on      AP.PROD_ID = P.PRODUCT_ID
	where 	P.PRODUCT_SOURCE_CDE IN ('58', '65', '69')
        and   	P.STATUS_ID IN (
		Select  DOMAIN_ID
		from    IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE) 
        ) WITH DATA PRIMARY INDEX(PRODUCT_ID,PRODUCT_SOURCE_CDE,PRODUCT_VERSION_SEQ) ON COMMIT PRESERVE ROWS @D@C@
9825@5320@exec tdat_COLLECT STATISTICS COLUMN (PRODUCT_ID ,PRODUCT_SOURCE_CDE) ON vt_BDRO_NF_prod_id_versions_0 @D@C@
9825@5330@exec tdat_COLLECT STATISTICS COLUMN (PRODUCT_ID ,PRODUCT_SOURCE_CDE ,PRODUCT_VERSION_SEQ) ON vt_BDRO_NF_prod_id_versions_0 @D@C@
9825@5340@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_prod_id_versions_1  AS (
        select  P.PRODUCT_ID,
                P.PRODUCT_SOURCE_CDE,
                P.PRODUCT_VERSION_SEQ,
                P.STATUS_ID,
                PR.RULE_GROUP_ID,
                p.ver_eff_dte,
                p.ver_exp_dte
        FROM    vt_BDRO_NF_prod_id_versions_0 p
                INNER JOIN IRHM_CRS_PRODDB_V.PRODUCT_RULE_GRP PR
        ON      P.PRODUCT_SOURCE_CDE = PR.PRODUCT_SOURCE_CDE
        AND     P.PRODUCT_ID = PR.PRODUCT_ID
        AND     P.PRODUCT_VERSION_SEQ = PR.PRODUCT_VERSION_SEQ
        ) WITH DATA PRIMARY INDEX(PRODUCT_ID,PRODUCT_SOURCE_CDE,RULE_GROUP_ID,ver_eff_dte) ON COMMIT PRESERVE ROWS @D@C@
9825@5341@//exec tdat_COLLECT STATISTICS COLUMN (PRODUCT_SOURCE_CDE) ON vt_BDRO_NF_prod_id_versions_1 @D@C@
9825@5342@//exec tdat_COLLECT STATISTICS COLUMN (PRODUCT_ID ,PRODUCT_SOURCE_CDE) ON vt_BDRO_NF_prod_id_versions_1 @D@C@
9825@5343@//exec tdat_COLLECT STATISTICS COLUMN (PRODUCT_ID ,PRODUCT_SOURCE_CDE ,PRODUCT_VERSION_SEQ,ver_eff_dte) 
							ON vt_BDRO_NF_prod_id_versions_0 @D@C@
9825@5344@//exec tdat_COLLECT STATISTICS COLUMN (STATUS_ID) ON vt_BDRO_NF_prod_id_versions_1 @D@C@
9825@5345@exec tdat_COLLECT STATISTICS COLUMN (RULE_GROUP_ID) ON vt_BDRO_NF_prod_id_versions_1 @D@C@
9825@5346@exec tdat_COLLECT STATISTICS COLUMN (RULE_GROUP_ID) ON fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? @D@C@
9825@5347@//exec tdat_COLLECT STATISTICS COLUMN (RULE_CATEGORY_CDE) ON fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? @D@C@
9825@5348@//exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_prod_id_versions  AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY  p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde
                                  ORDER BY ver_eff_dte, ver_exp_dte) as range_dte_seq,
                P.PRODUCT_ID,
                P.PRODUCT_SOURCE_CDE,
                ARD.RULE_ID,
                ARD.RULE_CATEGORY_CDE,
                p.ver_eff_dte,
                p.ver_exp_dte
        FROM    vt_BDRO_NF_prod_id_versions_1 p
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? ARD
        ON      P.RULE_GROUP_ID = ARD.RULE_GROUP_ID
                INNER JOIN IRHM_CRS_PRODDB_V.DOMAIN_REFERENCE DR1
        ON      DR1.DOMAIN_ID = P.STATUS_ID
        WHERE   P.PRODUCT_SOURCE_CDE IN ('58', '65', '69')
        AND     ARD.RULE_CATEGORY_CDE IN (
                        Select  rule_cat_cde
                        from    fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!?
                        where   column_nme = 'rule_category_cde')
        GROUP BY 3,4,5,6,7,8
        ) WITH DATA PRIMARY INDEX(group_key_id, ver_eff_dte) ON COMMIT PRESERVE ROWS @D@C@
9825@5350@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_prod_id_versions  AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY  p.product_id, p.product_source_cde, ard.rule_id, ard.rule_category_cde
                                  ORDER BY ver_eff_dte, ver_exp_dte) as range_dte_seq,
                P.PRODUCT_ID,
                P.PRODUCT_SOURCE_CDE,
                ARD.RULE_ID,
                ARD.RULE_CATEGORY_CDE,
                p.ver_eff_dte,
                p.ver_exp_dte
        FROM    vt_BDRO_NF_prod_id_versions_1 p
                INNER JOIN fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? ARD
        ON      P.RULE_GROUP_ID = ARD.RULE_GROUP_ID
        GROUP BY 3,4,5,6,7,8
        ) WITH DATA PRIMARY INDEX(group_key_id, ver_eff_dte) ON COMMIT PRESERVE ROWS @D@C@
9825@5360@exec tdat_collect stats on vt_BDRO_NF_prod_id_versions column (group_key_id) @D@C@
9825@5370@exec tdat_collect stats on vt_BDRO_NF_prod_id_versions column (range_dte_seq) @D@C@
9825@5380@//*  join periods into one if possible                                             * @D@C@
9825@5390@exec tdat_insert into fr_workdb.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!?
WITH RECURSIVE BDRO_NF_prod_id_versions_fin (group_key_id_f, product_id_f, product_source_cde_f, rule_id_f, rule_category_cde_f,
                                ver_eff_dte_f, ver_exp_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id, product_id, product_source_cde, rule_id, rule_category_cde,
                        ver_eff_dte, ver_exp_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_BDRO_NF_prod_id_versions
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id, product_id, product_source_cde, rule_id, rule_category_cde,
                        case when ver_exp_dte_f + interval '1' day between ver_eff_dte and ver_exp_dte then ver_eff_dte_f
                                when ver_exp_dte between ver_eff_dte_f and ver_exp_dte_f then ver_eff_dte_f
                                else ver_eff_dte end,
                        ver_exp_dte,
                        case when ver_exp_dte_f + interval '1' day between ver_eff_dte and ver_exp_dte then range_per_seq_f
                                when ver_exp_dte between ver_eff_dte_f and ver_exp_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_BDRO_NF_prod_id_versions
                        join BDRO_NF_prod_id_versions_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  product_id_f, product_source_cde_f, rule_id_f, rule_category_cde_f,
                min(ver_eff_dte_f),
                max(ver_exp_dte_f)
        FROM    BDRO_NF_prod_id_versions_fin
        group by 1,2,3,4, range_per_seq_f @D@C@
9825@5400@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!? INDEX ( prod_id ,rule_id) @D@C@
9825@5402@exec tdat_drop table vt_BDRO_NF_prod_id_versions @D@C@
9825@5403@exec tdat_drop table vt_BDRO_NF_prod_id_versions_0 @D@C@
9825@5404@exec tdat_drop table vt_BDRO_NF_prod_id_versions_1 @D@C@
9825@5410@//*                                                                                * @D@C@
9825@5412@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@5420@exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!? @D@C@
9825@5430@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        prod_id                         INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65),
        prod_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        prod_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        rule_id                         INTEGER NOT NULL,
        rule_row_id                     INTEGER NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        pid_dfo_ind                    	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        NO PRIMARY INDEX @D@C@
9825@5440@exec tdat_insert into fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
        Select  distinct
                a.carrier_operational_id,
                a.group_type,
                a.form_id,
                a.prod_id,
                a.product_source_cde,
                a.prod_eff_dte,
                a.prod_exp_dte,
                a.rule_id,
                a.rule_row_id,
		a.rule_type,
                a.rule_eff_dte,
                a.rule_exp_dte,
                CASE WHEN b.ver_eff_dte < a.calc_eff_dte THEN a.calc_eff_dte
                        ELSE b.ver_eff_dte END,
                CASE WHEN b.ver_exp_dte > a.calc_exp_dte THEN a.calc_exp_dte
                        ELSE b.ver_exp_dte END,
                a.ndc9_nbr,
		'N' as pid_dfo_ind
        From    fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? a,
                fr_workdb.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!?  b
        Where   a.prod_id            = b.prod_id
        And     a.product_source_cde = b.product_source_cde
        And     a.rule_id            = b.rule_id
        /*  And     a.rule_category_cde  = b.rule_category_cde */
        And     (b.ver_eff_dte between a.calc_eff_dte and a.calc_exp_dte
                OR
                a.calc_eff_dte  between b.ver_eff_dte and b.ver_exp_dte) @D@C@
9825@5450@//*   PID DFO linking                                                              * @D@C@
9825@5452@exec tdat_update fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
        set     pid_dfo_ind = 'Y'
        where   carrier_operational_id = '8270' @D@C@
9825@5453@exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_dfo_pid_?!temp_table_suffix!? @D@C@
9825@5454@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_BDRO_NF_final_Daily_dfo_pid_?!temp_table_suffix!?
        as fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!? with no data @D@C@
9825@5455@exec tdat_insert into fr_workdb.wt_BDRO_NF_final_Daily_dfo_pid_?!temp_table_suffix!?
        select  *
        from    fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
        where   pid_dfo_ind = 'Y' @D@C@
9825@5460@//* ===========================================================================    * @D@C@
9825@5462@//*   This data passed to BDRO refresh                                             * @D@C@
9825@5470@exec tdat_drop table fr_workdb.wt_bdro_nf_rules_calc_dte_final_?!temp_table_suffix!? @D@C@
9825@5480@exec tdat_CREATE MULTISET TABLE fr_workdb.wt_bdro_nf_rules_calc_dte_final_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        prod_id                         INTEGER NOT NULL,
        product_source_cde              INTEGER NOT NULL COMPRESS(69,58,65),
        alt_group_type                  CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        calc_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        calc_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'))
        NO PRIMARY INDEX @D@C@
9825@5490@exec tdat_CREATE VOLATILE TABLE vt_bdro_nf_rules_calc_dte_final_t AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr
                                  ORDER BY calc_eff_dte,calc_exp_dte) as range_dte_seq,
                rule_id,
                rule_eff_dte,
                rule_exp_dte,
                prod_id,
                product_source_cde,
                case when group_type = 'Y' then 'MD'
                                else 'BR' end as alt_group_type,
                ndc9_nbr,
                calc_eff_dte,
                calc_exp_dte
	From    fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
	where	pid_dfo_ind = 'N'
        Group by 3,4,5,6,7,8,9,10,11
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@5500@exec tdat_CREATE VOLATILE TABLE vt_bdro_nf_rules_calc_dte_final_d AS (
        select  min(a.calc_eff_dte) as calc_eff_dte
                ,a.calc_exp_dte
                ,a.group_key_id
        from    vt_bdro_nf_rules_calc_dte_final_t a,
                (select calc_exp_dte, group_key_id
                from    vt_bdro_nf_rules_calc_dte_final_t
                group by 1,2) b
                where   a.group_key_id = b.group_key_id
                and     a.calc_exp_dte = b.calc_exp_dte
                group by 2,3
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@5510@exec tdat_delete a
        from    vt_bdro_nf_rules_calc_dte_final_t a,
                vt_bdro_nf_rules_calc_dte_final_d b
        where   a.group_key_id = b.group_key_id
        and     a.calc_exp_dte = b.calc_exp_dte
        and     a.calc_eff_dte > b.calc_eff_dte @D@C@
9825@5520@exec tdat_CREATE VOLATILE TABLE vt_bdro_nf_rules_calc_dte_final AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr
                                  ORDER BY calc_eff_dte,calc_exp_dte) as range_dte_seq,
                rule_id,
                rule_eff_dte,
                rule_exp_dte,
                prod_id,
                product_source_cde,
                alt_group_type,
                ndc9_nbr,
                calc_eff_dte,
                calc_exp_dte
        From    vt_bdro_nf_rules_calc_dte_final_t
        Group by 3,4,5,6,7,8,9,10,11
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@5530@exec tdat_collect stats on vt_bdro_nf_rules_calc_dte_final index (group_key_id, range_dte_seq) @D@C@
9825@5540@exec tdat_collect stats on vt_bdro_nf_rules_calc_dte_final column (group_key_id) @D@C@
9825@5550@//*  join periods into one if possible                                             * @D@C@
9825@5560@exec tdat_insert into fr_workdb.wt_bdro_nf_rules_calc_dte_final_?!temp_table_suffix!?
WITH RECURSIVE bdro_nf_rules_calc_dte_fin (group_key_id_f,
				rule_id_f, rule_eff_dte_f, rule_exp_dte_f, prod_id_f, product_source_cde_f, alt_group_type_f, ndc9_nbr_f, 
				calc_eff_dte_f, calc_exp_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id, 
			rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr, 
			calc_eff_dte, calc_exp_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_bdro_nf_rules_calc_dte_final
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id, 
			rule_id, rule_eff_dte, rule_exp_dte, prod_id, product_source_cde, alt_group_type, ndc9_nbr,
                        case when calc_exp_dte_f + interval '1' day between calc_eff_dte and calc_exp_dte then calc_eff_dte_f
                                when calc_exp_dte between calc_eff_dte_f and calc_exp_dte_f then calc_eff_dte_f
                                else calc_eff_dte end,
                        case when calc_exp_dte_f + interval '1' day between calc_eff_dte and calc_exp_dte
                                        then case when calc_exp_dte < calc_exp_dte_f then calc_exp_dte_f else calc_exp_dte end
                                when calc_exp_dte between calc_eff_dte_f and calc_exp_dte_f
                                        then case when calc_exp_dte < calc_exp_dte_f then calc_exp_dte_f else calc_exp_dte end
                                else calc_exp_dte end,
                        case when calc_exp_dte_f + interval '1' day between calc_eff_dte and calc_exp_dte
                                        then range_per_seq_f
                                when calc_exp_dte between calc_eff_dte_f and calc_exp_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_bdro_nf_rules_calc_dte_final
                        join bdro_nf_rules_calc_dte_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  rule_id_f, rule_eff_dte_f, rule_exp_dte_f, prod_id_f,
                product_source_cde_f, alt_group_type_f, ndc9_nbr_f,
                min(calc_eff_dte_f),
                max(calc_exp_dte_f)
        FROM bdro_nf_rules_calc_dte_fin
        group by 1,2,3,4,5,6,7, range_per_seq_f @D@C@
9825@5562@exec tdat_drop table vt_bdro_nf_rules_calc_dte_final_t @D@C@
9825@5563@exec tdat_drop table vt_bdro_nf_rules_calc_dte_final_d @D@C@
9825@5564@exec tdat_drop table vt_bdro_nf_rules_calc_dte_final @D@C@
9825@5570@exec tdat_REPLACE view fr_proddb_v.bdro_nf_rules_calc_dte_final
        as select * from fr_workdb.wt_bdro_nf_rules_calc_dte_final_?!temp_table_suffix!? @D@C@
9825@5580@//* ===========================================================================    * @D@C@
9825@5590@//*   Create a table with distinct rule-id's within brand and group type           * @D@C@
9825@5600@//* ===========================================================================    * @D@C@
9825@5610@exec tdat_drop table fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? @D@C@
9825@5620@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        ndc9_nbr                       	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_id                         INTEGER NOT NULL,
        rule_type                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL COMPRESS('STX', 'ST1', 'FCR', 'MPA', 'ST2', 'STF', 'STM'),
        rule_originator_dsc             VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_nme                        VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        alt_group_type                  CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_changed_ind                CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        new_drug_ind                    CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        access_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@5630@exec tdat_CREATE VOLATILE TABLE vt_BDRO_NF_uniq_rules  AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY ndc9_nbr, group_type, rule_id, rule_row_id, rule_type) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY ndc9_nbr, group_type, rule_id, rule_row_id, rule_type
                                  ORDER BY rule_eff_dte, rule_exp_dte) as range_dte_seq,
                ndc9_nbr,
                group_type,
                rule_id,
		rule_type,
                rule_row_id,
                rule_eff_dte,
                rule_exp_dte
        From    fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
	where	pid_dfo_ind = 'N'
        Group by 3,4,5,6,7,8,9
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@5640@exec tdat_collect stats on vt_BDRO_NF_uniq_rules INDEX (group_key_id) @D@C@
9825@5650@exec tdat_collect stats on vt_BDRO_NF_uniq_rules column (range_dte_seq) @D@C@
9825@5660@//*  join periods into one if possible                                             * @D@C@
9825@5670@exec tdat_insert into fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
WITH RECURSIVE BDRO_NF_uniq_rules_fin (group_key_id_f, ndc9_nbr_f, group_type_f, rule_id_f, rule_row_id_f, rule_type_f,
                                rule_eff_dte_f, rule_exp_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id, ndc9_nbr, group_type, rule_id, rule_row_id, rule_type,
                        rule_eff_dte, rule_exp_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_BDRO_NF_uniq_rules
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id, ndc9_nbr, group_type, rule_id, rule_row_id, rule_type,
                        case when rule_exp_dte_f + interval '1' day between rule_eff_dte and rule_exp_dte then rule_eff_dte_f
                                when rule_exp_dte between rule_eff_dte_f and rule_exp_dte_f then rule_eff_dte_f
                                else rule_eff_dte end,
                        rule_exp_dte,
                        case when rule_exp_dte_f + interval '1' day between rule_eff_dte and rule_exp_dte then range_per_seq_f
                                when rule_exp_dte between rule_eff_dte_f and rule_exp_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_BDRO_NF_uniq_rules
                        join BDRO_NF_uniq_rules_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  ndc9_nbr_f, group_type_f, rule_id_f, rule_type_f,
                min(rule_eff_dte_f),
                max(rule_exp_dte_f),
                b.rule_category_cde,
                b.rule_originator_dsc,
                b.rule_nme,
                case when group_type_f = 'Y' then 'MD'
                        else 'BR' end,
                'N',
                'N',
                CASE WHEN rule_type_f = 'A' THEN 'Y'
                      ELSE 'N' END
        FROM    BDRO_NF_uniq_rules_fin a,
                fr_proddb_v.bdro_rule_detail b
        where   a.rule_row_id_f = b.rule_row_id
        group by 1,2,3,4,7,8,9,10,11,12,13, range_per_seq_f @D@C@
9825@5672@exec tdat_drop table vt_BDRO_NF_uniq_rules @D@C@
9825@5680@//*                                                                                * @D@C@
9825@5690@//*                 Back out previously decisioned rules that were added back      * @D@C@
9825@5700@//*   into the 'rules_brands' table.  This will prevent a new rule from being      * @D@C@
9825@5710@//*   added with the wrong group type.                                             * @D@C@
9825@5720@//*                                                                                * @D@C@
9825@5730@exec tdat_delete from fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
        Where   (ndc9_nbr, rule_id, rule_eff_dte, rule_exp_dte, access_ind) IN (
                Select ndc9_nbr, rule_id, rule_eff_dte, rule_exp_dte, access_ind
                From fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!?) @D@C@
9825@5740@//*                                                                                * @D@C@
9825@5750@//*  Non form rule types: 'A' - Access, 'T' - Targeted Preferred History           * @D@C@
9825@5760@//*                                                                                * @D@C@
9825@5770@//*  Delete any Preferred History rule if the same rule already exists in          * @D@C@
9825@5780@//*   Review or Maint tables which as 'access-targeted' or 'form-targeted'         * @D@C@
9825@5790@//*                                                                                * @D@C@
9825@5800@exec tdat_delete from fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?      a,
	fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!?  b
	Where 	a.rule_type = 'T'
	AND 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.rule_id = b.rule_id
	and 	a.alt_group_type = b.group_type
	and 	a.rule_eff_dte = b.rule_eff_dte
	and 	a.rule_exp_dte = b.rule_exp_dte @D@C@
9825@5810@//* ===================================                                            * @D@C@
9825@5820@//*  Delete any Access rule if the Brand/group-type does not exist                 * @D@C@
9825@5830@//*   in the Access brand list table                                               * @D@C@
9825@5840@//*                                                                                * @D@C@
9825@5850@exec tdat_delete from fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? 
	Where 	rule_type = 'A'
	AND 	(ndc9_nbr, group_type) NOT IN (
		select 	ndc9_nbr, med_d_ind
		from 	fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?)  @D@C@
9825@5860@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? column 
                                                        (ndc9_nbr, rule_id)                   @D@C@
9825@5870@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? column 
                                                        (rule_eff_dte)                         @D@C@
9825@5880@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? column 
                                                        (rule_exp_dte)                         @D@C@
9825@5890@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? column 
                                                        (ndc9_nbr, group_type, rule_id)       @D@C@
9825@5900@//* ===========================================================================    * @D@C@
9825@5910@//*   . Determine all unique drugs trandferred from the Informix tables:           * @D@C@
9825@5920@//*     'Review and 'Maintenance'.                                                 * @D@C@
9825@5930@//*   . Then see if any new drugs were added from the 'uniq_rules' incomming table * @D@C@
9825@5940@//*   (Drug list maintenance will be done after the control table is updated       * @D@C@
9825@5950@//*    via call to module: 'bbdrorulecatbatch'                                     * @D@C@
9825@5960@exec tdat_drop table fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!? @D@C@
9825@5970@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
        ndc9_nbr                      	CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
	group_type			CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
PRIMARY INDEX ( ndc9_nbr ,group_type ) @D@C@
9825@5980@exec tdat_insert into fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!?
	Select 	ndc9_nbr,
		group_type
	FROM 	fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
	Group by 1,2 @D@C@
9825@5990@exec tdat_delete from fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!?
	WHERE 	(ndc9_nbr, group_type) IN (
		select 	ndc9_nbr, group_type
		from 	fr_proddb.BDRO_NF_uniq_drugs_ndc) @D@C@
9825@6000@exec tdat_update a
	From 	fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? a,
		fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!?  b
	SET 	new_drug_ind = 'Y'
	WHERE 	a.ndc9_nbr  = b.ndc9_nbr
	AND 	a.group_type = b.group_type @D@C@
9825@6010@//* ===========================================================================    * @D@C@
9825@6020@//* Update rows for new or revised rule-id's                                       * @D@C@
9825@6030@//* For the selected rule-id's, Update 'originator_dsc' as per requirements.       * @D@C@
9825@6040@//*                                                                                * @D@C@
9825@6050@exec tdat_update fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
	SET 	rule_originator_dsc = 'Standard'
	WHERE 	rule_originator_dsc = 'Medco Standard' @D@C@
9825@6060@exec tdat_update fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
	SET 	rule_originator_dsc = 'Client Specific'
	WHERE 	rule_originator_dsc = 'Medco Client Specific' @D@C@
9825@6070@//*                                                                                * @D@C@
9825@6080@exec tdat_delete from fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
	where 	rule_type = 'T' 
	and 	(ndc9_nbr, alt_group_type, rule_id, rule_eff_dte) IN (
		Select 	ndc9_nbr, alt_group_type, rule_id, rule_eff_dte
		from 	fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!?
		where 	rule_type = 'A') @D@C@
9825@6090@exec tdat_drop table fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? @D@C@
9825@6100@exec tdat_CREATE SET TABLE fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        maint_cde                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_ndc9_nbr                      CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_rule_id                       INTEGER,
        c_rule_eff_dte                  DATE FORMAT 'YYYY-MM-DD',
        c_rule_exp_dte                  DATE FORMAT 'YYYY-MM-DD',
        c_rule_category_cde             CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_rule_originator_dsc           VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_rule_nme                      VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_alt_group_type                CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_rule_changed_ind              CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_new_drug_ind                  CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        c_access_ind                    CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_ndc9_nbr                      CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_rule_id                       INTEGER,
        i_rule_eff_dte                  DATE FORMAT 'YYYY-MM-DD',
        i_rule_exp_dte                  DATE FORMAT 'YYYY-MM-DD',
        i_rule_category_cde             CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_rule_originator_dsc           VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_rule_nme                      VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_group_type                    CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_alt_group_type                CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_rule_changed_ind              CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_new_drug_ind                  CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_form_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_access_ind                    CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,
        i_rule_source_ind               CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC)
        PRIMARY INDEX ( c_ndc9_nbr ,c_rule_id ,i_ndc9_nbr ,i_rule_id) @D@C@
9825@6110@exec tdat_insert into fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        select  ' '
                ,c.ndc9_nbr
                ,c.rule_id
                ,c.rule_eff_dte
                ,c.rule_exp_dte
                ,c.rule_category_cde
                ,c.rule_originator_dsc
                ,c.rule_nme
                ,c.alt_group_type
                ,c.rule_changed_ind
                ,c.new_drug_ind
                ,c.access_ind
                ,i.ndc9_nbr
                ,i.rule_id
                ,i.rule_eff_dte
                ,i.rule_exp_dte
                ,i.rule_category_cde
                ,i.rule_originator_dsc
                ,i.rule_nme
                ,i.group_type
                ,i.alt_group_type
                ,i.rule_changed_ind
                ,i.new_drug_ind
                ,i.form_ind
                ,i.access_ind
                ,i.rule_changed_ind as rule_source_ind
        From    fr_proddb.BDRO_NF_drugs_rules_ndc  i
                FULL OUTER JOIN
                fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? c
        ON      i.ndc9_nbr  = c.ndc9_nbr
        AND     i.rule_id    = c.rule_id
        AND     i.alt_group_type = c.alt_group_type
        AND     i.access_ind = c.access_ind
        AND     i.rule_eff_dte = c.rule_eff_dte
	AND   	(  c.rule_eff_dte between i.rule_eff_dte and i.rule_exp_dte
		or i.rule_eff_dte between c.rule_eff_dte and c.rule_exp_dte)
        and     i.form_ind = 'N' @D@C@
9825@6120@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        where   c_ndc9_nbr = i_ndc9_nbr
        AND     c_rule_id = i_rule_id
        AND     c_alt_group_type = i_alt_group_type
        AND     c_access_ind = i_access_ind
        AND     c_rule_eff_dte = i_rule_eff_dte
        and     c_rule_exp_dte = i_rule_exp_dte @D@C@
9825@6122@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        where   c_ndc9_nbr = i_ndc9_nbr
        AND     c_rule_id = i_rule_id
        AND     c_alt_group_type = i_alt_group_type
        AND     c_access_ind = i_access_ind
	AND   	(  c_rule_eff_dte between i_rule_eff_dte and i_rule_exp_dte
		or i_rule_eff_dte between c_rule_eff_dte and c_rule_exp_dte)
        and     c_rule_exp_dte >= i_rule_exp_dte @D@C@
9825@6130@exec tdat_update fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        set     maint_cde = 'A'
        where   c_ndc9_nbr is not null
        AND     i_ndc9_nbr is null @D@C@
9825@6140@exec tdat_update fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        set     maint_cde = 'X'
        where   maint_cde = 'A'
        and     c_rule_exp_dte < '2019-01-01' @D@C@
9825@6150@//exec tdat_update a
                  from  fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? a,
                        fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?   b
                  set   maint_cde = 'X'
                where   maint_cde = 'A'
                  and   a.c_ndc9_nbr =   b.ndc9_nbr
                  and   (
                        (a.c_alt_group_type = 'BR' and b.med_d_ind = 'N')  OR
                        (a.c_alt_group_type = 'MD' and b.med_d_ind = 'Y') )
                  and   a.c_rule_eff_dte > b.drug_exp_dte  @D@C@
9825@6152@exec tdat_update a
	from  	fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? a,
		(select ndc9_nbr, med_d_ind, max(drug_exp_dte) as drug_exp_dte 
		from 	fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? 
		group by 1,2) b
	set   	maint_cde = 'X'
	where   maint_cde = 'A'
	and   	a.c_ndc9_nbr =   b.ndc9_nbr
	and   	(
		(a.c_alt_group_type = 'BR' and b.med_d_ind = 'N')  OR
		(a.c_alt_group_type = 'MD' and b.med_d_ind = 'Y') )
	and   	a.c_rule_eff_dte > b.drug_exp_dte @D@C@
9825@6160@exec tdat_update a
                  from  fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? a,
                        fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?   b
                  set   maint_cde = 'X'
                where   maint_cde = 'A'
                  and   a.c_ndc9_nbr =   b.ndc9_nbr
                  and   (
                        (a.c_alt_group_type = 'BR' and b.med_d_ind = 'N')  OR
                        (a.c_alt_group_type = 'MD' and b.med_d_ind = 'Y') )
                  and   b.drug_eff_dte > a.c_rule_exp_dte  @D@C@
9825@6170@exec tdat_update fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        set     maint_cde = 'D'
        where   c_ndc9_nbr is null
        AND     i_ndc9_nbr is not null
        AND     i_form_ind = 'N' @D@C@
9825@6180@//* No need to process If not in CRS but already termed in IFX  @D@C@
9825@6190@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        where   i_rule_exp_dte < current_date - interval '1' day
        and     maint_cde = 'D'
        and     i_rule_source_ind = 'M' @D@C@
9825@6200@exec tdat_update fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        set     maint_cde = 'T'
        where   c_ndc9_nbr = i_ndc9_nbr
        AND     c_rule_id = i_rule_id
        AND     c_alt_group_type = i_alt_group_type
        AND     c_access_ind = i_access_ind
        AND     c_rule_eff_dte = i_rule_eff_dte
        and     c_rule_exp_dte < i_rule_exp_dte
        /* ???? AND     i_form_ind = 'N' */
        and     maint_cde = ' ' @D@C@
9825@6210@//* Create a maintenance table used to update Infrmix Table: 'bdro_rule_cat_batch' * @D@C@
9825@6220@exec tdat_drop table fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!? @D@C@
9825@6230@exec tdat_CREATE SET TABLE fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        maint_cde                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_id                         INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_category_cde               CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_originator_dsc             VARCHAR(60) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_nme                        VARCHAR(120) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        group_type                      CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_changed_ind                CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        new_drug_ind                    CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        access_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@6240@//* add new rule brand                                                             * @D@C@
9825@6250@exec tdat_insert into fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        Select  maint_cde,
                c_ndc9_nbr,
                c_rule_id,
                c_rule_eff_dte,
                max(c_rule_exp_dte),
                c_rule_category_cde,
                max(c_rule_originator_dsc),
                c_rule_nme,
                c_alt_group_type,
                c_rule_changed_ind,
                c_new_drug_ind,
                c_access_ind
        From    fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        WHERE   maint_cde = 'A'
        group by 1,2,3,4,6,8,9,10,11,12 @D@C@
9825@6260@//* Remove new rules outside of sup perioda window                                 * @D@C@
9825@6270@exec cache_select mdy(month(today), 1, year(today)) -
                        max(cast(case when sup_prd_old_typ = 'Q' then 3 * sup_period
                                when sup_prd_old_typ = 'M' then sup_period
                                else sup_period / 28 end as integer)) units month as rule_cutoff_dte
        FROM    reb_contract b,
                reb_contract_rh c
        WHERE   current BETWEEN b.oper_insert_tms AND b.oper_end_tms
        and     b.reb_contract_id = c.reb_contract_id
        and     current BETWEEN c.oper_insert_tms AND c.oper_end_tms
        and     c.end_dte > '2013-12-31'
        and     b.contract_type_cde in ('BR','MD','PD')
        and     b.contract_type_ind not in ('CM') @D@C@
9825@6280@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        WHERE   maint_cde = 'A'
        and     rule_exp_dte < ?rule_cutoff_dte? @D@C@
9825@6290@exec tdat_insert into fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        Select  maint_cde,
                i_ndc9_nbr,
                i_rule_id,
                i_rule_eff_dte,
                c_rule_exp_dte,
                i_rule_category_cde,
                i_rule_originator_dsc,
                i_rule_nme,
                i_alt_group_type,
                'T',
                'N',
                i_access_ind
        From    fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        WHERE   maint_cde = 'T' @D@C@
9825@6300@//exec tdat_insert into fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        Select  'D',
                i_ndc9_nbr,
                i_rule_id,
                i_rule_eff_dte,
                i_rule_exp_dte,
                i_rule_category_cde,
                i_rule_originator_dsc,
                i_rule_nme,
                i_alt_group_type,
                'T',
                'N',
                i_access_ind
        From    fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        WHERE   maint_cde = 'D'
        and     (i_ndc9_nbr, i_rule_id, i_rule_eff_dte) not in (
                select  i_brand_nme, i_rule_id, i_rule_eff_dte
                from    fr_workdb.bdro_rule_maint_not_term
                where   maint_cde = 'D') @D@C@
9825@6310@//*                     !!!#############                                           * @D@C@
9825@6320@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        where   maint_cde not in ('A','T') @D@C@
9825@6330@exec tdat_insert into fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        Select  'D',
                i_ndc9_nbr,
                i_rule_id,
                i_rule_eff_dte,
                i_rule_exp_dte,
                i_rule_category_cde,
                i_rule_originator_dsc,
                i_rule_nme,
                i_alt_group_type,
                'T',
                'N',
                i_access_ind
        From    fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!?
        WHERE   maint_cde = 'D'
        and     i_rule_source_ind = 'R' @D@C@
9825@6340@//*                                                                                * @D@C@
9825@6350@//* 5-3-2019: Added code below to Drop Access adds if already in Maint             * @D@C@
9825@6360@//*           where access_ind = 'Y' and form_ind = 'Y'                            * @D@C@
9825@6370@//*                                                                                * @D@C@
9825@6380@//*           Code can be removed after Maint table is updated.                    * @D@C@
9825@6390@//*                                                                                * @D@C@
9825@6400@//* 11-14-2019: Added code to delete new Phist rows if the same version of the     * @D@C@
9825@6410@//*             rule/rule_eff_dte/ndc9 already exists as targeted.                 * @D@C@
9825@6420@//*                                                                                * @D@C@
9825@6430@//*             Also: If a specific rule/rule_eff_dte/ndc9 does not exist as       * @D@C@
9825@6440@//*             targeted, but some Hist NDCs do match targeted, then set the       * @D@C@
9825@6450@//*             crs_rule_exp_dte = Hist version's rule_exp_dte                     * @D@C@
9825@6460@//*                                                                                * @D@C@
9825@6470@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
           where maint_cde = 'A'
             and access_ind = 'N'
             and(rule_id, rule_eff_dte, ndc9_nbr) IN
                (select  distinct rule_id, rule_eff_dte, ndc9_nbr
                  from fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!?
                 where match_ind = 'Y') @D@C@
9825@6480@//*                                                                                * @D@C@
9825@6490@exec tdat_drop table fr_workdb.wt_BDRO_NF_hist_Rules_All_?!temp_table_suffix!? @D@C@
9825@6500@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_hist_Rules_All_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        match_ind                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (rule_id ,rule_eff_dte) @D@C@
9825@6510@//*                                                                                  @D@C@
9825@6520@exec tdat_insert into fr_workdb.wt_BDRO_NF_hist_Rules_All_?!temp_table_suffix!?
                select  distinct rule_id,rule_eff_dte,rule_exp_dte,match_ind
                  from  fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!?  @D@C@
9825@6530@//*                                                                                  @D@C@
9825@6540@exec tdat_drop table fr_workdb.wt_BDRO_NF_hist_part_matched_?!temp_table_suffix!? @D@C@
9825@6550@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_hist_part_matched_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        row_cnt                         smallint NOT NULL)
        PRIMARY INDEX (rule_id ,rule_eff_dte, rule_exp_dte) @D@C@
9825@6560@//*                                                                                * @D@C@
9825@6570@exec tdat_insert into fr_workdb.wt_BDRO_NF_hist_part_matched_?!temp_table_suffix!?
                select  rule_id,rule_eff_dte,rule_exp_dte,count(*)
                  from  fr_workdb.wt_BDRO_NF_hist_Rules_All_?!temp_table_suffix!?
                 group by 1,2,3  having count(*) > 1  @D@C@
9825@6580@//*                                                                                * @D@C@
9825@6590@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_hist_part_matched_?!temp_table_suffix!?
                        column (rule_id ,rule_eff_dte, rule_exp_dte) @D@C@
9825@6600@//*                                                                                * @D@C@
9825@6610@exec tdat_update a
        From fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?           a,
             fr_workdb.wt_BDRO_NF_hist_part_matched_?!temp_table_suffix!? b
        SET     rule_exp_dte   = b.rule_exp_dte
        where maint_cde = 'A'
          and access_ind = 'N'
          and a.rule_id      = b.rule_id
          and a.rule_eff_dte = b.rule_eff_dte  @D@C@
9825@6620@//*                                                                                * @D@C@
9825@6630@//*  2019-11-14 AJG:    E N D   O F   C H A N G E S                                  @D@C@
9825@6640@//*================================================================================* @D@C@
9825@6650@//*                                                                                * @D@C@
9825@6652@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@6660@//* Now pass the maintenance data back to Informix and invoke the S/P to update    * @D@C@
9825@6670@//* Informix Perm Table: 'bdro_rule_cat_batch'                                     * @D@C@
9825@6680@//exec pdat_delete FROM bdro_rule_cat_maint @D@C@
9825@6690@//exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_rule_cat_maint fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
"pdat_insert into bdro_rule_cat_maint select * from t_bdro_rule_cat_maint;" @D@C@
9825@6700@//*                     !!!#############                                           * @D@C@
9825@6702@exec tdat_delete from fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
        WHERE   (ndc9_nbr,rule_id,rule_eff_dte, group_type, access_ind) in (
                Select  ndc9_nbr,
                        rule_id,
                        rule_eff_dte,
                        case when group_type = 'N' then 'BR' else 'MD' end as group_type,
			access_ind
                From    fr_workdb.wt_bdro_fix_error_rpt_9825_NFORM)  @D@C@
9825@6710@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_rule_cat_maint fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
"pdat_BEGIN;
        delete from bdro_rule_cat_maint;
        insert into bdro_rule_cat_maint
        select  *
        from    t_bdro_rule_cat_maint
	where	access_ind = 'Y';

        CREATE temp TABLE t_bdro_rule_cat_brand (
                maint_cde               char(1),
                ndc9_nbr                char(9),
                rule_id                 integer,
                rule_eff_dte            timestamp without time zone,
                rule_exp_dte            timestamp without time zone,
                rule_category_cde       CHAR(3),
                rule_originator_dsc     VARCHAR(60),
                rule_nme                VARCHAR(120),
                group_type              CHAR(2),
                rule_changed_ind        CHAR(1),
                new_drug_ind            CHAR(1),
                access_ind              CHAR(1),
                brand_nme               VARCHAR(60),
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                maint_review_ind        text);

        insert into t_bdro_rule_cat_brand
	select  maint_cde
                ,a.ndc9_nbr
                ,rule_id
                ,rule_eff_dte
                ,rule_exp_dte
                ,rule_category_cde
                ,rule_originator_dsc
                ,rule_nme
                ,group_type
                ,rule_changed_ind
                ,new_drug_ind
                ,access_ind
                ,min(trim(b.brand_ref_nme)) as brand_nme
                ,a.rule_eff_dte as eff_dte
                ,a.rule_exp_dte as end_dte
                ,' ' as maint_review_ind
        from    t_bdro_rule_cat_maint a,
                bdro_ndc_brand_ref b
        where   a.ndc9_nbr = b.ndc9_nbr
	and     now() between b.oper_insert_tms and b.oper_end_tms
	and	access_ind = 'Y'
        group by 1,2,3,4,5,6,7,8,9,10,11,12,14,15,16;

	create temp table t_bdro_rule_cat_batch
	(
	    rule_id          integer                                                              not null,
	    ndc9_nbr         char(9)                                                              not null,
	    group_type       char(2)                                                              not null,
	    access_ind       char                                                                 not null,
	    crs_rule_eff_dte timestamp                                                            not null,
	    eff_dte          timestamp                                                            not null,
	    oper_insert_tms  timestamp default now(),
	    cat_id           smallint                                                             not null,
	    rule_cat_cde     char(3)                                                              not null,
	    ident_dsc        varchar(120)                                                         not null,
	    decision_dte     timestamp                                                            not null,
	    job_run_dte      timestamp                                                            not null,
	    rule_changed_ind char                                                                 not null,
	    source_flag      varchar(60)                                                          not null,
	    new_drug_ind     char                                                                 not null,
	    crs_rule_end_dte timestamp                                                            not null,
	    end_dte          timestamp default '3000-12-31 00:00:00'::timestamp without time zone not null,
	    oper_end_tms     timestamp default '3000-12-31 23:59:59'::timestamp without time zone not null,
	    oper_id          integer                                                              not null,
	    comment_txt      varchar(255));

	create temp table t_bdro_rule_cat
	(
	    rule_id          integer,
	    ndc9_nbr         char(9)                                                              not null,
	    group_type       char(2),
	    access_ind       char                                                                 not null,
	    form_ind         char                                                                 not null,
	    crs_rule_eff_dte timestamp,
	    eff_dte          timestamp                                                            not null,
	    oper_insert_tms  timestamp default now()                                              not null,
	    cat_id           smallint                                                             not null,
	    rule_cat_cde     char(3)                                                              not null,
	    ident_dsc        varchar(120),
	    decision_dte     timestamp,
	    job_run_dte      timestamp,
	    source_flag      varchar(60),
	    crs_rule_end_dte timestamp,
	    end_dte          timestamp default '3000-12-31 00:00:00'::timestamp without time zone not null,
	    oper_end_tms     timestamp default '3000-12-31 23:59:59'::timestamp without time zone not null,
	    oper_id          integer                                                              not null,
	    comment_txt      varchar(255));

	create temp Table t_bdro_rule_cat_brand_del (
		rule_id 	INTEGER,   
		ndc9_nbr 	text,
		group_type 	text,
		access_ind 	text,
		crs_rule_eff_dte timestamptz,
		crs_rule_end_dte timestamptz,
		maint_cde text);

	insert into t_bdro_rule_cat_brand_del
	select 	a.rule_id
	     	,a.ndc9_nbr
	     	,a.group_type
	     	,a.access_ind
	     	,a.crs_rule_eff_dte
	     	,a.crs_rule_end_dte
	     	,b.maint_cde
	from 	bdro_rule_cmprhnsv a,
	     	t_bdro_rule_cat_brand b
	where 	a.rule_id = b.rule_id
	and 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.group_type = b.group_type
	and 	a.access_ind = 'Y'
	and 	a.form_ind = 'Y'
	and 	a.access_ind = b.access_ind
	and 	a.crs_rule_eff_dte = b.rule_eff_dte
	and 	a.crs_rule_end_dte = b.rule_exp_dte
	and 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	a.cat_id > 0
	group by 1, 2, 3, 4, 5, 6, 7;

	delete from t_bdro_rule_cat_brand
	where 	(rule_id, ndc9_nbr, group_type, access_ind, rule_eff_dte, rule_exp_dte) IN (
		select rule_id, ndc9_nbr, group_type, access_ind, crs_rule_eff_dte, crs_rule_end_dte
		from t_bdro_rule_cat_brand_del);

        update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_brand b
	where 	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('D')
	and     a.form_ind = 'N'
	/*and     a.access_ind = 'N'*/
	and     a.access_ind = 'Y'
	and     a.cat_id <= 0;

	insert into t_bdro_rule_cat_batch
	select 	a.rule_id
	     	,a.ndc9_nbr
	     	,a.group_type
	     	,a.access_ind
	     	,a.crs_rule_eff_dte
	     	,a.eff_dte
	     	,a.oper_insert_tms
	     	,a.cat_id
	     	,a.rule_cat_cde
	     	,a.ident_dsc
	     	,a.decision_dte
	     	,a.job_run_dte
	     	,a.rule_changed_ind
	     	,a.source_flag
	     	,a.new_drug_ind
	     	,b.rule_exp_dte
	     	,a.end_dte
	     	,a.oper_end_tms
	     	,13
                ,left((a.comment_txt || '; Terminated - CRS ' || CURRENT_DATE),255)
	from 	bdro_rule_cmprhnsv a,
	     	t_bdro_rule_cat_brand b
	where 	a.rule_id = b.rule_id
	and 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.group_type = b.group_type
	and 	a.access_ind = b.access_ind
	and 	a.crs_rule_eff_dte = b.rule_eff_dte
	and 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	b.maint_cde in ('T')
	AND 	a.cat_id <= 0 
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y'); !!!!!!!!*/
	AND 	a.access_ind = 'Y'; 

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from  	t_bdro_rule_cat_brand b
	where  	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	AND     a.cat_id <= 0 
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y'); !!!!!!!!*/
	AND 	a.access_ind = 'Y';

	update t_bdro_rule_cat_batch
	set oper_insert_tms = now() + (cat_id ||' seconds')::interval;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select 	rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		CASE when access_ind = 'Y' then 'N' else 'Y' end as form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		CASE when cat_id = 0 then -1 else cat_id end as cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
	from    t_bdro_rule_cat_batch;

	insert into t_bdro_rule_cat
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,a.form_ind
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.source_flag
		,b.rule_exp_dte
		,a.end_dte
		,a.oper_end_tms
		,13
                ,left((a.comment_txt || '; Terminated - CRS ' || CURRENT_DATE),255)
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	and     a.cat_id > 0;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_brand b 
	where 	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	and     a.cat_id > 0;

	update t_bdro_rule_cat
	set oper_insert_tms = now() + (cat_id ||' seconds')::interval;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select 	rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		'N',
		source_flag,
		'N',
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
	from 	t_bdro_rule_cat;

	CREATE TEMP TABLE t_rule_cat_sum (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		rule_eff_dte            timestamptz,
		access_ind              text,
		cat_id                  smallint,
		rule_cat_cde            text,
		cont_eff_dte            timestamptz,
		cont_end_dte            timestamptz);
	CREATE TEMP TABLE t_rule_cat_cnt (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		rule_eff_dte            timestamptz,
		access_ind              text,
		rule_cat_cde            text,
		cont_eff_dte            timestamptz,
		cont_end_dte            timestamptz,
		row_cnt                 integer);

	INSERT INTO t_rule_cat_sum
	select  min(trim(b.brand_ref_nme))
		,a.rule_id
		,a.group_type
		,a.crs_rule_eff_dte
		,a.access_ind
		,a.cat_id
		,max(a.rule_cat_cde)
		,min(a.eff_dte)
		,max(a.end_dte)
	from    bdro_rule_cmprhnsv a,
		bdro_ndc_brand_ref b
	where   a.ndc9_nbr = b.ndc9_nbr
	and	a.access_ind = 'Y'
	and	a.form_ind = 'N'
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     now() between b.oper_insert_tms and b.oper_end_tms
	and     (a.rule_id, a.group_type, trim(b.brand_ref_nme)) in (
		select distinct rule_id, group_type, brand_nme
		from    t_bdro_rule_cat_brand
		where   maint_cde in ('A'))
	and a.cat_id > 0
	group by 2,3,4,5,6;

	insert into t_rule_cat_cnt
	select  brand_nme
		,rule_id
		,group_type
		,rule_eff_dte
		,access_ind
		,rule_cat_cde
		,min(cont_eff_dte)
		,max(cont_end_dte)
		,count(*)
	from    t_rule_cat_sum
	group by 1,2,3,4,5,6;

	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
	and     (rule_id, group_type, access_ind, rule_eff_dte, brand_nme) in (
		select  rule_id, group_type, access_ind, rule_eff_dte, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 2);

	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
	and     (rule_id, group_type, access_ind, rule_eff_dte, rule_category_cde, brand_nme) in (
		select  rule_id, group_type, access_ind, rule_eff_dte, rule_cat_cde, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 2);

	update t_bdro_rule_cat_brand a
        set     maint_review_ind = 'R'
	from	(select  rule_id, group_type, access_ind, rule_eff_dte, brand_nme
                from    t_rule_cat_cnt
                where   row_cnt = 1) b
        where   a.maint_cde in ('A')
        and     a.rule_id = b.rule_id
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and     a.brand_nme = b.brand_nme
        and     a.rule_exp_dte < b.rule_eff_dte;

	update t_bdro_rule_cat_brand a
        set     maint_review_ind = 'R'
	from	(select  rule_id, group_type, access_ind, rule_eff_dte, brand_nme, rule_cat_cde
                from    t_rule_cat_cnt
                where   row_cnt = 1) b
        where   a.maint_cde in ('A')
        and     a.rule_id = b.rule_id
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and     a.brand_nme = b.brand_nme
	and	a.rule_category_cde = b.rule_cat_cde
        and     a.rule_exp_dte < b.rule_eff_dte;

        update t_bdro_rule_cat_brand a
        set     eff_dte = cont_eff_dte
                ,end_dte = b.cont_end_dte
        from    t_rule_cat_cnt b
        where   a.maint_cde in ('A')
        and     a.maint_review_ind <> 'R'
        and     a.brand_nme = b.brand_nme
        and     a.rule_id = b.rule_id
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and     a.rule_exp_dte > b.rule_eff_dte;

/* !!!!!!!!!!!!!!!!
	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
	and     (rule_id, group_type, access_ind, rule_eff_dte, brand_nme) not in (
		select  rule_id, group_type, access_ind, rule_eff_dte, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 1);

	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
	and     (rule_id, group_type, access_ind, rule_eff_dte, rule_category_cde, brand_nme) not in (
		select  rule_id, group_type, access_ind, rule_eff_dte, rule_cat_cde, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 1);

	update t_bdro_rule_cat_brand a
	set 	eff_dte = cont_eff_dte
		,end_dte = b.cont_end_dte
	from 	t_rule_cat_cnt b
	where 	a.maint_cde in ('A')
	and     a.maint_review_ind <> 'R'
	and     a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.rule_eff_dte = b.rule_eff_dte;
*/

	delete from t_bdro_rule_cat_batch;
	insert into t_bdro_rule_cat_batch
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.rule_changed_ind
		,a.source_flag
		,a.new_drug_ind
		,b.rule_eff_dte - interval '1 day'
		,a.end_dte
		,a.oper_end_tms
		,13
		,a.comment_txt
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     b.rule_eff_dte BETWEEN a.crs_rule_eff_dte AND a.crs_rule_end_dte
	and     b.rule_eff_dte > a.crs_rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('A')
	AND     a.cat_id <= 0 
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y'); !!!!!!!!*/
	AND 	a.access_ind = 'Y';

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_batch b
	where 	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.crs_rule_eff_dte
	and     a.eff_dte = b.eff_dte
	and     a.oper_insert_tms = b.oper_insert_tms
	and     now() between a.oper_insert_tms and a.oper_end_tms
	AND     a.cat_id <= 0 
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y'); !!!!!!!!*/
	AND 	a.access_ind = 'Y';

	update t_bdro_rule_cat_batch
	set     oper_insert_tms = now();

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		CASE when access_ind = 'Y' then 'N' else 'Y' end as form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		CASE when cat_id = 0 then -1 else cat_id end     as cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
		from t_bdro_rule_cat_batch;

	select  rule_id
		,ndc9_nbr
		,group_type
		,crs_rule_end_dte
	into 	temp t_bdro_rule_cat_fut
	from    bdro_rule_cat_batch
	where   false;

	insert into t_bdro_rule_cat_fut
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,min(a.crs_rule_eff_dte - interval '1 day')
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and	a.access_ind = b.access_ind
	and     a.crs_rule_end_dte between b.rule_eff_dte and b.rule_exp_dte
	and	b.rule_eff_dte < a.crs_rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('A')
	/* AND     a.cat_id <= 0 AND (a.form_ind = 'Y' OR a.access_ind = 'Y') !!!!!*/
	AND     a.cat_id <= 0 
	AND 	a.access_ind = 'Y'
	group by 1,2,3;

	CREATE TEMP TABLE t_contracted_ndcs (
		ndc9_nbr                text,
		group_type              text,
		eff_dte                 timestamptz,
		end_dte                 timestamptz);

	INSERT INTO t_contracted_ndcs
	SELECT  substr(a.ndc_nbr,1,9)
		,case when b.contract_type_cde = 'MD' then 'MD' else 'BR' end
		,min(a.eff_dte)
		,max(a.end_dte)
	FROM    base_reb_product a,
		reb_contract b,
		reb_contract_rh c,
		medical_product d
	WHERE   now() BETWEEN a.oper_insert_tms AND a.oper_end_tms
	and     a.end_dte > '2013-12-31'
	and     a.reb_contract_id = b.reb_contract_id
	and     now() BETWEEN b.oper_insert_tms AND b.oper_end_tms
	and     a.reb_contract_id = c.reb_contract_id
	and     now() BETWEEN c.oper_insert_tms AND c.oper_end_tms
	and     c.end_dte > '2013-12-31'
	and     a.ndc_nbr = d.ndc_nbr
        and     b.contract_type_cde || b.contract_type_ind not IN ('CMES', 'CMCM', 'BRCM', 'MDCM')
	GROUP BY 1,2;

	delete from t_bdro_rule_cat_batch;
	insert into t_bdro_rule_cat_batch
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,a.rule_eff_dte
		,case when c.eff_dte > a.rule_eff_dte then c.eff_dte
			else a.rule_eff_dte end
		,now()
		,0
		,a.rule_category_cde
		,a.rule_nme
		,now()
		,now()
		,a.rule_changed_ind
		,a.rule_originator_dsc
		,a.new_drug_ind
		,coalesce(b.crs_rule_end_dte, a.rule_exp_dte)
		,case when c.end_dte < coalesce(b.crs_rule_end_dte, a.rule_exp_dte) then c.end_dte
			else a.rule_exp_dte end
		,'3000-12-31 23:59:59'
		,13
		,' '
	from    t_bdro_rule_cat_brand a
		left outer join
		t_bdro_rule_cat_fut b
	on      a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
		join
		t_contracted_ndcs c
	on      a.ndc9_nbr = c.ndc9_nbr
	and     a.group_type = c.group_type
	where   a.maint_cde in ('A')
	and     a.maint_review_ind = 'R';

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select 	rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		CASE when access_ind = 'Y' then 'N' else 'Y' end as form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		CASE when cat_id = 0 then -1 else cat_id end     as cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
	from 	t_bdro_rule_cat_batch;

	delete from t_bdro_rule_cat;
	insert into t_bdro_rule_cat
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,'N'
		,a.rule_eff_dte
		,a.eff_dte
		,now()
		,b.cat_id
		,a.rule_category_cde
		,a.rule_nme
		,now()
		,now()
		,a.rule_originator_dsc
		,a.rule_exp_dte
		,a.end_dte
		,'3000-12-31 23:59:59'
		,13
		,'New NDC9 added '
	from    t_bdro_rule_cat_brand a,
		t_rule_cat_sum b
	where   a.maint_cde in ('A')
	and     a.maint_review_ind <> 'R'
	and     a.rule_id = b.rule_id
	and     a.brand_nme = b.brand_nme
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.rule_eff_dte = b.rule_eff_dte
	and   	(a.rule_id, a.ndc9_nbr,a.group_type,a.rule_eff_dte,a.access_ind,a.eff_dte) NOT IN ( /* !!!!!!!*/
		select 	c.rule_id, c.ndc9_nbr,c.group_type,c.crs_rule_eff_dte,c.access_ind,c.eff_dte
		from 	bdro_rule_cmprhnsv c
		where 	access_ind = 'Y'
		and 	now() between c.oper_insert_tms and c.oper_end_tms)
	AND cat_id > 0;

	CREATE TEMP TABLE t_bdro_rule_cat_temp1 (
		brand_nme  	        text,
		rule_id                 integer,
		ndc9_nbr                text,
		group_type              text,
		orig_eff_dte            timestamptz,
		rule_eff_dte            timestamptz,
		rule_exp_dte            timestamptz,
		cntr_eff_dte            timestamptz,
		cntr_exp_dte            timestamptz,
		access_ind              text,
		form_ind                text,
		cat_id                  smallint);

	insert into t_bdro_rule_cat_temp1
	select   c.brand_nme
		,a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,b.crs_rule_eff_dte as orig_eff_dte
		,a.crs_rule_eff_dte
		,a.crs_rule_end_dte
		,a.eff_dte
		,a.end_dte
		,a.access_ind
		,a.form_ind
		,a.cat_id
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat b,
		t_rule_cat_sum c,
		bdro_ndc_brand_ref d
	where 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	now() between d.oper_insert_tms and d.oper_end_tms
	and 	a.rule_id  = b.rule_id
	and 	a.rule_id  = c.rule_id
	and 	a.ndc9_nbr = d.ndc9_nbr
	and 	c.brand_nme  = d.brand_ref_nme
	and 	a.group_type = b.group_type
	and 	a.access_ind = b.access_ind
	and 	a.form_ind   = b.form_ind
	and 	a.cat_id > 0
	and NOT (a.crs_rule_end_dte < now() OR a.end_dte < now())
	group by 1,2,3,4,5,6,7,8,9,10,11,12;

	CREATE TEMP TABLE t_bdro_rule_cat_temp2 (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		orig_eff_dte            timestamptz,
		rule_eff_dte            timestamptz,
		access_ind              text,
		form_ind                text,
		cat_id                  smallint);

	insert into t_bdro_rule_cat_temp2
	select  brand_nme
		,rule_id
		,group_type
		,orig_eff_dte
		,rule_eff_dte
		,access_ind
		,form_ind
		,cat_id
	from  t_bdro_rule_cat_temp1
	group by 1,2,3,4,5,6,7,8;

	CREATE TEMP TABLE t_bdro_rule_cat_temp3 (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		orig_eff_dte            timestamptz,
		rule_eff_dte            timestamptz,
		access_ind              text,
		form_ind                text,
		row_cnt                 integer);

	insert into t_bdro_rule_cat_temp3
	select  brand_nme
		,rule_id
		,group_type
		,orig_eff_dte
		,rule_eff_dte
		,access_ind
		,form_ind
		,count(*)
	from  t_bdro_rule_cat_temp2
	group by 1,2,3,4,5,6,7;

	update t_bdro_rule_cat_temp2 a
	set 	cat_id = 0
	from 	t_bdro_rule_cat_temp3 b
	where 	a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.rule_eff_dte = b.rule_eff_dte
	and     a.access_ind = b.access_ind
	and     a.form_ind   = b.form_ind
	and     b.row_cnt > 1;

	select  brand_nme
		,rule_id
		,group_type
		,orig_eff_dte
		,min(rule_eff_dte) as rule_eff_dte
		,access_ind
		,form_ind
		,cat_id
	into temp t_bdro_rule_cat_temp2A
	from  	t_bdro_rule_cat_temp2
        group by 1,2,3,4,6,7,8;

	select  min(trim(c.brand_ref_nme)) as brand_nme
		,a.*
	into temp t_bdro_rule_cat_brand_NM
	from    t_bdro_rule_cat a,
		t_bdro_rule_cat_temp2A b,
		bdro_ndc_brand_ref c
	where   a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.orig_eff_dte
	and    a.ndc9_nbr = c.ndc9_nbr
	group by 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20;

	update t_bdro_rule_cat_brand_NM a
	set 	cat_id = b.cat_id
	from 	t_bdro_rule_cat_temp2A b
	where	 a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.orig_eff_dte
	and     a.access_ind = b.access_ind
	and     a.form_ind   = b.form_ind;

        insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id
		,ndc9_nbr
		,group_type
		,access_ind
		,form_ind
		,crs_rule_eff_dte
		,eff_dte
		,now()
		,cat_id
		,rule_cat_cde
		,ident_dsc
		,now()
		,now()
		,'N'
		,source_flag
		,'N'
		,crs_rule_end_dte
		,end_dte
		,'3000-12-31 23:59:59'
		,13
		,'New NDC9 added '
	from 	t_bdro_rule_cat_brand_NM
	where 	cat_id > 0;
COMMIT;" @D@C@
9825@6720@//* 02-18-2019 AJG:                                         @D@C@
9825@6730@//    . Remove access rules from review if:                               @D@C@
9825@6740@//     . crs-rule_eff   >  contract_end                                   @D@C@
9825@6750@//     . crs-rule_end   <  contract_eff                                   @D@C@
9825@6760@//     . cntr_end_dte < '2019-01-01'                                      @D@C@
9825@6770@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     access_ind = 'Y'
        and     crs_rule_eff_dte > end_dte
        /*and 	(access_ind = 'Y' OR form_ind = 'Y') and cat_id > 0 !!!!!!*/
	and 	cat_id <= 0 @D@C@
9825@6780@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     access_ind = 'Y'
        and     crs_rule_end_dte < eff_dte
        /*and 	(access_ind = 'Y' OR form_ind = 'Y') and cat_id > 0 !!!!!!*/
	and 	cat_id <= 0 @D@C@
9825@6782@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     access_ind = 'Y'
        and     end_dte < '2019-01-01'
        /*and 	(access_ind = 'Y' OR form_ind = 'Y') and cat_id > 0 !!!!!!*/
	and 	cat_id <= 0 @D@C@
9825@6783@//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = @D@C@
9825@6784@//  2021-11-10 AJG: Add rows to Maint or Review if new contract dates @D@C@
9825@6785@//                  found in Access Brand list table                  @D@C@
9825@6786@//                                                                    @D@C@
9825@6787@//// !!!!!!!!!! RS exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_access_brands fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!?
"pdat_BEGIN;
        delete from bdro_access_brands;
        insert into bdro_access_brands
        SELECT  ndc9_nbr,
                CASE  WHEN med_d_ind = 'Y' THEN 'MD'
                        ELSE 'BR' END,
                drug_eff_dte,
                drug_exp_dte
        FROM    t_bdro_access_brands
	Where drug_exp_dte >= '2019-01-01';

        Update bdro_access_brands a
        set 	brand_nme = brand_ref_nme
	from 	bdro_ndc_brand_ref b
	where 	now() between b.oper_insert_tms and b.oper_end_tms
	and 	a.ndc9_nbr = b.ndc9_nbr;

	delete from bdro_access_brands
	where 	eff_dte = end_dte;

/* -- See which rows need to be added to maint or Review */
/* -- */
        CREATE temp TABLE t_bdro_candidates (
                brand_nme               VARCHAR(30),
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                rule_eff_dte            timestamp without time zone,
                rule_exp_dte            timestamp without time zone,
                decision_dte            timestamp without time zone,
                job_run_dte             timestamp without time zone,
                rule_id                 integer,
                ndc9_nbr                char(9),
                group_type              CHAR(2),
                access_ind              CHAR(1),
                form_ind                CHAR(1),
                oper_ins_tms            timestamp without time zone,
                cat_id                  smallint,
                brand_cat_cnt           smallint);

	insert into t_bdro_candidates
	select brand_ref_nme,a.eff_dte,a.end_dte,a.crs_rule_eff_dte,
		a.crs_rule_end_dte,a.decision_dte,a.job_run_dte,
		a.rule_id,a.ndc9_nbr,a.group_type,a.access_ind,a.form_ind,
		a.oper_insert_tms,a.cat_id,0
	from    bdro_rule_cmprhnsv a,
		bdro_access_brands b,
		bdro_ndc_brand_ref c
	where 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	now() between c.oper_insert_tms and c.oper_end_tms
	and 	a.ndc9_nbr = c.ndc9_nbr
	and 	access_ind = 'Y' 
	and 	form_ind = 'N'
	and 	crs_rule_end_dte >= '2019-01-01'
	and 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.group_type = b.group_type
	AND 	b.end_dte >= '2019-01-01'
	AND (
	    (a.eff_dte >= '2019-01-01' and
	     b.eff_dte <  a.eff_dte   and
	     b.end_dte <= a.end_dte)
	  OR
	    (b.eff_dte > a.eff_dte    and
	     b.eff_dte > a.end_dte)
	  OR
	    (b.eff_dte < a.eff_dte    and
	     b.eff_dte < a.end_dte)
	  OR
	    (b.eff_dte >= a.eff_dte   and
	     b.end_dte >  a.end_dte)
	  OR
	    (b.eff_dte < a.eff_dte    and
	     b.end_dte > a.end_dte)
          )
	  group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15;


/* For each Maint rule/NDC9/group, save the mini(eff-dte) and max(end_dte) */

        CREATE temp TABLE t_bdro_maint_TL_dtl (
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                rule_id                 integer,
                ndc9_nbr                char(9),
                group_type              CHAR(2),
                access_ind              CHAR(1),
                form_ind                CHAR(1));

        CREATE temp TABLE t_bdro_maint_TL_sum (
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                rule_id                 integer,
                ndc9_nbr                char(9),
                group_type              CHAR(2),
                access_ind              CHAR(1),
                form_ind                CHAR(1));

insert into t_bdro_maint_TL_dtl
select distinct a.eff_dte,a.end_dte,
a.rule_id,a.ndc9_nbr,a.group_type,a.access_ind,a.form_ind
from  bdro_rule_cmprhnsv a,
      bdro_ndc_brand_ref c
  where now() between a.oper_insert_tms and a.oper_end_tms
   and now() between c.oper_insert_tms and c.oper_end_tms
   and a.ndc9_nbr = c.ndc9_nbr
   and access_ind = 'Y' and form_ind = 'N';
/*--   and brand_ref_nme IN (*/
/* -- 'EMGALITY SYRINGE')*/

insert into t_bdro_maint_TL_sum
select min(a.eff_dte),max(a.end_dte),
a.rule_id,a.ndc9_nbr,a.group_type,a.access_ind,a.form_ind
from  t_bdro_maint_TL_dtl a
group by 3,4,5,6,7;

/* new rows to be added to Maint or Review. */

/* Add to Review if more than one decision exists in Maint */
/* for a given brand.  Otherwise add to Maint */

     create temp table t_bdro_maint_new   as
     select * from t_bdro_candidates
       with no data;

    insert into t_bdro_maint_new
         select a.brand_nme,
                b.eff_dte, /* brand_eff */
                a.eff_dte - interval '1 day', /* maint_eff */
                a.rule_eff_dte,
                a.rule_exp_dte,
                a.decision_dte,
                a.job_run_dte,
                a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.access_ind,
                a.form_ind,
                a.oper_ins_tms,
                case when brand_cat_cnt = 1
                     then a.cat_id
                     else -1 end,
                a.brand_cat_cnt
            from t_bdro_candidates a,
                 bdro_access_brands b
           where a.ndc9_nbr = b.ndc9_nbr
             and a.group_type = b.group_type
             and b.eff_dte <  a.eff_dte
             and b.end_dte <= a.end_dte;

    insert into t_bdro_maint_new
         select a.brand_nme,
                a.end_dte + interval '1 day', /* maint_end */
                b.end_dte, /* Brand_end */
                a.rule_eff_dte,
                a.rule_exp_dte,
                a.decision_dte,
                a.job_run_dte,
                a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.access_ind,
                a.form_ind,
                a.oper_ins_tms,
                case when brand_cat_cnt = 1
                     then a.cat_id
                     else -1 end,
                a.brand_cat_cnt
            from t_bdro_candidates a,
                 bdro_access_brands b
           where a.ndc9_nbr = b.ndc9_nbr
             and a.group_type = b.group_type
             and b.eff_dte >= a.eff_dte
             and b.end_dte >  a.end_dte;
 
    insert into t_bdro_maint_new
         select a.brand_nme,
                b.eff_dte, /* brand_eff */
                a.eff_dte - interval '1 day', /* maint_eff */
                a.rule_eff_dte,
                a.rule_exp_dte,
                a.decision_dte,
                a.job_run_dte,
                a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.access_ind,
                a.form_ind,
                a.oper_ins_tms,
                case when brand_cat_cnt = 1
                     then a.cat_id
                     else -1 end,
                a.brand_cat_cnt
            from t_bdro_candidates a,
                 bdro_access_brands b
           where a.ndc9_nbr = b.ndc9_nbr
             and a.group_type = b.group_type
             and b.eff_dte < a.eff_dte
             and b.end_dte > a.end_dte;

    insert into t_bdro_maint_new
         select a.brand_nme,
                a.end_dte + interval '1 day', /* maint_end */
                b.end_dte, /* brand_end */
                a.rule_eff_dte,
                a.rule_exp_dte,
                a.decision_dte,
                a.job_run_dte,
                a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.access_ind,
                a.form_ind,
                a.oper_ins_tms,
                case when brand_cat_cnt = 1
                     then a.cat_id
                     else -1 end,
                a.brand_cat_cnt
            from t_bdro_candidates a,
                 bdro_access_brands b
           where a.ndc9_nbr = b.ndc9_nbr
             and a.group_type = b.group_type
             and b.eff_dte < a.eff_dte
             and b.end_dte > a.end_dte;

    /* If eff_dte is calculated, it cannot be */
    /* less than the eff-dte from the Access brand list for the same NDC */

        Update t_bdro_maint_new a
        set eff_dte = b.eff_dte
          from bdro_access_brands b
         where a.ndc9_nbr   = b.ndc9_nbr
           and a.group_type = b.group_type
           and a.eff_dte   <  b.eff_dte;

 /* If end_dte is calculated, it cannot be */
 /* greater than the end-dte from the Access brand list for the same NDC */

        Update t_bdro_maint_new a
        set end_dte = b.end_dte
          from bdro_access_brands b
         where a.ndc9_nbr   = b.ndc9_nbr
           and a.group_type = b.group_type
           and a.eff_dte   <= b.eff_dte
           and a.end_dte   >  b.end_dte;

 /* if mult rows exist with same min-eff-dte, */
 /* keep only the one with lowest end-dte     */

      CREATE temp TABLE t_bdro_maint_new_dups (
                rule_id                 integer,
                ndc9_nbr                char(9),
                group_type              CHAR(2),
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                rule_eff_dte            timestamp without time zone,
                rule_exp_dte            timestamp without time zone);

      insert into t_bdro_maint_new_dups
         select a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                min(a.eff_dte),
                min(a.end_dte),
                a.rule_eff_dte,
                a.rule_exp_dte
            from t_bdro_maint_new a
           group by 1,2,3,6,7;

      delete
          from t_bdro_maint_new a
      using t_bdro_maint_new_dups b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.rule_eff_dte = b.rule_eff_dte
          and a.rule_exp_dte = b.rule_exp_dte
          and a.eff_dte = b.eff_dte
          and a.end_dte <> b.end_dte;

/*  Delete rows if new_maint contract dates are */
/*  already contained in old maint */

      delete
          from t_bdro_maint_new a
         using bdro_rule_cmprhnsv b
        where now() between b.oper_insert_tms and b.oper_end_tms
          and a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.access_ind = b.access_ind
          and a.rule_eff_dte = b.crs_rule_eff_dte
          and a.rule_exp_dte = b.crs_rule_end_dte
          and a.eff_dte >= b.eff_dte
          and a.end_dte <= b.end_dte;

      delete
          from t_bdro_maint_new a
      using t_bdro_maint_TL_sum b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.access_ind = b.access_ind
          and a.eff_dte >= b.eff_dte
          and a.end_dte <= b.end_dte;

/* Drop dup rows that may exist if rows were copied in the UI */

     create temp table t_bdro_maint_new_2  as
     select * from t_bdro_maint_new
       with no data;

     insert into t_bdro_maint_new_2
      select distinct
                 brand_nme
                ,eff_dte
                ,end_dte
                ,rule_eff_dte
                ,rule_exp_dte
                ,decision_dte
                ,job_run_dte
                ,rule_id
                ,ndc9_nbr
                ,group_type
                ,access_ind
                ,form_ind
                ,oper_ins_tms
                ,cat_id
                ,brand_cat_cnt
      from t_bdro_maint_new;

/* perform standard deletes before adding to maint */

      delete from t_bdro_maint_new_2
       where end_dte < '2019-01-01';

      delete from t_bdro_maint_new_2
       where rule_eff_dte > end_dte;

      delete from t_bdro_maint_new_2
       where rule_exp_dte <= eff_dte;

/* -------------------------------------*/
/* -- 2022-01-05 New code added: */

/*--* Get existing Maint rows that match on rule/ndc/group/rule_eff/rule_end/form_ind */
/*--*/
      CREATE temp TABLE t_bdro_maint_curr (
                rule_id                 integer,
                ndc9_nbr                char(9),
                group_type              CHAR(2),
                cat_id                  smallint,
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                rule_eff_dte            timestamp without time zone,
                rule_exp_dte            timestamp without time zone,
                decision_dte            timestamp without time zone,
                job_run_dte             timestamp without time zone);

      insert into t_bdro_maint_curr
         select distinct a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.cat_id,
                a.eff_dte,
                a.end_dte,
                a.crs_rule_eff_dte,
                a.crs_rule_end_dte,
                a.decision_dte,
                a.job_run_dte
            from bdro_rule_cmprhnsv a,
                 t_bdro_maint_new_2 b
        where now() between a.oper_insert_tms and a.oper_end_tms
          and a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.access_ind = 'Y';

/*--*/
/*-- Delete Redundant rows */
/*--*/
      delete
          from t_bdro_maint_new_2  a
         using t_bdro_maint_curr   b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.end_dte = b.end_dte
          and a.eff_dte < b.eff_dte
          and b.eff_dte < '2019-01-01';
/*--*/
/*-- Change contract dates for the new rows based on existing maint rows.*/
/*--*/
        Update t_bdro_maint_new_2 a
        set end_dte = b.eff_dte - interval '1 day'
         from t_bdro_maint_curr   b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.end_dte = b.end_dte
          and a.eff_dte < b.eff_dte
          and b.eff_dte > '2019-01-01';

        Update t_bdro_maint_new_2 a
        set eff_dte = b.end_dte + interval '1 day'
         from t_bdro_maint_curr   b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.eff_dte = b.eff_dte
          and a.end_dte > b.end_dte;

      delete
          from t_bdro_maint_new_2  a
         using t_bdro_maint_curr   b
        where a.rule_id = b.rule_id
          and a.ndc9_nbr = b.ndc9_nbr
          and a.group_type = b.group_type
          and a.end_dte between
              b.eff_dte and b.end_dte;

/* --In some cases, dups may exist after updates */
/* --Drop dups with max(decision date) + max(job run date) */

     create temp table t_bdro_maint_new_3  as
     select * from t_bdro_maint_new_2
       with no data;

    insert into t_bdro_maint_new_3
    select brand_nme,
           eff_dte,
           end_dte,
           rule_eff_dte,
           rule_exp_dte,
           min(decision_dte),
           min(job_run_dte),
           rule_id,
           ndc9_nbr,
           group_type,
           access_ind,
           form_ind,
           min(oper_ins_tms),
           cat_id,
           brand_cat_cnt
      from t_bdro_maint_new_2
    group by 1,2,3,4,5,8,9,10,11,12,14,15;

/* -- 2022-01-05 End of new code */
/* -------------------------------------*/

/* -- 2022-01-14 New code added: */
/* --                                                      */
/* -- Up to this point, all cat_ids defaulted to -1.       */
/* --   Update the cat-id for the new rows that were added */
/* --   using the new test cases supplied by Christine M.  */
/* --                                                      */

        CREATE temp TABLE t_brand_cats (
                brand_nme               VARCHAR(30),
                rule_id                 integer,
                group_type              CHAR(2),
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                ndc9_nbr                char(9),
                cat_id                  smallint,
                row_cnt                 smallint);

        CREATE temp TABLE t_brand_cat_cnts (
                brand_nme               VARCHAR(30),
                rule_id                 integer,
                group_type              CHAR(2),
                cat_id                  smallint,
                row_cnt                 smallint);

        CREATE temp TABLE t_brand_cnts (
                brand_nme               VARCHAR(30),
                rule_id                 integer,
                group_type              CHAR(2),
                row_cnt                 smallint);


 /* Determine how many decisions exist for each brand */

        insert into t_brand_cats
        select brand_ref_nme,rule_id,group_type,
               eff_dte,end_dte,a.ndc9_nbr,cat_id,1
          from bdro_rule_cmprhnsv a,
               bdro_ndc_brand_ref b
        where now() between a.oper_insert_tms and a.oper_end_tms
          and now() between b.oper_insert_tms and b.oper_end_tms
          and a.ndc9_nbr = b.ndc9_nbr
          and access_ind = 'Y' and form_ind = 'N'
          and cat_id > 0
        group by 1,2,3,4,5,6,7,8;

       insert into t_brand_cat_cnts
        select brand_nme,rule_id,group_type,cat_id,1
          from t_brand_cats
            where row_cnt = 1
         group by 1,2,3,4;

        insert into t_brand_cnts
        select brand_nme,rule_id,group_type,count(*)
          from t_brand_cat_cnts
         group by 1,2,3;

 /* Update the cat-id as per new test cases         */
 /* submitted by Christine M. (1/14/2022)           */

        Update t_bdro_maint_new_3 a
        set cat_id = b.cat_id
         from t_bdro_maint_curr   b,
              t_brand_cnts        c
        where c.row_cnt    = 1
          and a.rule_id    = b.rule_id
          and a.ndc9_nbr   = b.ndc9_nbr
          and a.group_type = b.group_type
/*--          and a.rule_eff_dte = b.rule_eff_dte */
/*--          and a.rule_exp_dte = b.rule_exp_dte */
/*--          and a.decision_dte = b.decision_dte */
/*--          and a.job_run_dte  = b.job_run_dte  */
          and a.brand_nme  = c.brand_nme
          and a.rule_id    = c.rule_id
          and a.group_type = c.group_type
          and (
              (a.end_dte = (b.eff_dte - interval '1 day'))
                OR
              (a.eff_dte = (b.end_dte + interval '1 day'))
           OR (
              (a.eff_dte = b.eff_dte)
                and
              (a.end_dte > b.end_dte)
                and
              (a.eff_dte < b.rule_exp_dte) )
              );

        Update t_bdro_maint_new_3 a
        set cat_id = b.cat_id
         from t_bdro_maint_curr   b,
              t_brand_cnts        c
        where c.row_cnt    > 1
          and a.rule_id    = b.rule_id
          and a.ndc9_nbr   = b.ndc9_nbr
          and a.group_type = b.group_type
/*--          and a.rule_eff_dte = b.rule_eff_dte */
/*--          and a.rule_exp_dte = b.rule_exp_dte */
/*--          and a.decision_dte = b.decision_dte */
/*--          and a.job_run_dte  = b.job_run_dte  */
          and a.brand_nme  = c.brand_nme
          and a.rule_id    = c.rule_id
          and a.group_type = c.group_type
          and (
              (a.eff_dte = b.eff_dte)
                and
              (a.end_dte > b.end_dte)
                and
              (a.eff_dte < b.rule_exp_dte)
              );

/* -- 2022-01-14 End of new code */
/* -------------------------------------*/

/*  Now add new rows to maint */

     create temp table temp_bdro_rule_cmprhnsv_t as
     select * from bdro_rule_cmprhnsv
       with no data;

        insert into temp_bdro_rule_cmprhnsv_t
        select  a.rule_id
                ,a.ndc9_nbr
                ,a.group_type
                ,a.access_ind
                ,a.form_ind
                ,a.crs_rule_eff_dte
                ,b.eff_dte
                ,now()
                ,b.cat_id
                ,a.rule_cat_cde
                ,a.ident_dsc
                ,current_date  /* a.decision_dte */
                ,current_date  /* a.job_run_dte  */
                ,a.rule_changed_ind
                ,a.source_flag
                ,a.new_drug_ind
                ,a.crs_rule_end_dte
                ,b.end_dte
                ,a.oper_end_tms
                ,13
                ,'New cntr dates added from Brand List '|| current_date
        from    bdro_rule_cmprhnsv a,
                t_bdro_maint_new_3   b
        where now() between a.oper_insert_tms and a.oper_end_tms
        and     a.rule_id = b.rule_id
        and     a.ndc9_nbr = b.ndc9_nbr
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and   a.decision_dte = b.decision_dte
        and   a.job_run_dte  = b.job_run_dte
        AND     a.access_ind = 'Y';

     create temp table t_bdro_rule_cmprhnsv2 as
     select * from bdro_rule_cmprhnsv
       with no data;

 /*  Drop new rows if duplicated */

    insert into t_bdro_rule_cmprhnsv2
    select * from temp_bdro_rule_cmprhnsv_t
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28;

 /*  Final check before adding to Perm table... */

      delete from t_bdro_rule_cmprhnsv2
       where eff_dte >= crs_rule_end_dte;

      delete from t_bdro_rule_cmprhnsv2
       where eff_dte >= end_dte;

/*  Add new contract date rows to the perm Maint table */

        insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
                form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms,
                cat_id, rule_cat_cde, ident_dsc, decision_dte, job_run_dte, rule_changed_ind, 
                source_flag, new_drug_ind, crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
        select  rule_id
                ,ndc9_nbr
                ,group_type
                ,access_ind
                ,form_ind
                ,crs_rule_eff_dte
                ,eff_dte
                ,oper_insert_tms
                ,cat_id
                ,rule_cat_cde
                ,ident_dsc
                ,decision_dte
                ,job_run_dte
                ,rule_changed_ind
                ,source_flag
                ,new_drug_ind
                ,crs_rule_end_dte
                ,end_dte
                ,'3000-12-31 23:59:59'
                ,13
                ,comment_txt
        from    t_bdro_rule_cmprhnsv2;
COMMIT;" @D@C@
9825@6800@//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = @D@C@
9825@6801@//* 07-09-2020 AJG:                                                   @D@C@
9825@6802@//    . Code added to update the bdro_drug_hist table                 @D@C@
9825@6803@//    . after latest  preferred History rules are added to cmprhnsv   @D@C@
9825@6804@//= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = @D@C@
9825@6805@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_rule_cat_maint fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!?
"pdat_begin;
        delete from bdro_rule_cat_maint;
        insert into bdro_rule_cat_maint
	select	* 
	from 	t_bdro_rule_cat_maint
        where   access_ind = 'N';

        CREATE temp TABLE t_bdro_rule_cat_brand (
                maint_cde               char(1),
                ndc9_nbr                char(9),
                rule_id                 integer,
                rule_eff_dte            timestamp without time zone,
                rule_exp_dte            timestamp without time zone,
                rule_category_cde       CHAR(3),
                rule_originator_dsc     VARCHAR(60),
                rule_nme                VARCHAR(120),
                group_type              CHAR(2),
                rule_changed_ind        CHAR(1),
                new_drug_ind            CHAR(1),
                access_ind              CHAR(1),
                brand_nme               VARCHAR(60),
                eff_dte                 timestamp without time zone,
                end_dte                 timestamp without time zone,
                maint_review_ind        text);

        insert into t_bdro_rule_cat_brand
        select  maint_cde
                ,a.ndc9_nbr
                ,rule_id
                ,rule_eff_dte
                ,rule_exp_dte
                ,rule_category_cde
                ,rule_originator_dsc
                ,rule_nme
                ,group_type
                ,rule_changed_ind
                ,new_drug_ind
                ,access_ind
                ,min(trim(b.brand_ref_nme)) as brand_nme
                ,a.rule_eff_dte as eff_dte
                ,a.rule_exp_dte as end_dte
                ,' ' as maint_review_ind
        from    t_bdro_rule_cat_maint a,
                bdro_ndc_brand_ref b
        where   a.ndc9_nbr = b.ndc9_nbr
	and     now() between b.oper_insert_tms and b.oper_end_tms
        and     access_ind = 'N'
        group by 1,2,3,4,5,6,7,8,9,10,11,12,14,15,16;

	create temp table t_bdro_nf_rule_cat_batch (
		rule_id          integer                                                              not null,
		ndc9_nbr         char(9)                                                              not null,
		group_type       char(2)                                                              not null,
		crs_rule_eff_dte timestamp                                                            not null,
		eff_dte          timestamp                                                            not null,
		oper_insert_tms  timestamp default now(),
		cat_id           smallint                                                             not null,
		rule_cat_cde     char(3)                                                              not null,
		ident_dsc        varchar(120)                                                         not null,
		decision_dte     timestamp                                                            not null,
		job_run_dte      timestamp                                                            not null,
		rule_changed_ind char                                                                 not null,
		source_flag      varchar(60)                                                          not null,
		new_drug_ind     char                                                                 not null,
		crs_rule_end_dte timestamp                                                            not null,
		end_dte          timestamp default '3000-12-31 00:00:00'::timestamp without time zone not null,
		oper_end_tms     timestamp default '3000-12-31 23:59:59'::timestamp without time zone not null,
		oper_id          integer                                                              not null,
		comment_txt      varchar(255));
	create temp table t_bdro_rule_cat (
		rule_id          integer,
		ndc9_nbr         char(9)                                                              not null,
		group_type       char(2),
		access_ind       char                                                                 not null,
		form_ind         char                                                                 not null,
		crs_rule_eff_dte timestamp,
		eff_dte          timestamp                                                            not null,
		oper_insert_tms  timestamp default now()                                              not null,
		cat_id           smallint                                                             not null,
		rule_cat_cde     char(3)                                                              not null,
		ident_dsc        varchar(120),
		decision_dte     timestamp,
		job_run_dte      timestamp,
		source_flag      varchar(60),
		crs_rule_end_dte timestamp,
		end_dte          timestamp default '3000-12-31 00:00:00'::timestamp without time zone not null,
		oper_end_tms     timestamp default '3000-12-31 23:59:59'::timestamp without time zone not null,
		oper_id          integer                                                              not null,
		comment_txt      varchar(255));

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_brand b
	where 	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('D')
	and 	a.form_ind = 'N'
	and 	a.access_ind = 'N'
	and     a.cat_id <= 0;

	insert into t_bdro_nf_rule_cat_batch
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.rule_changed_ind
		,a.source_flag
		,a.new_drug_ind
		,b.rule_exp_dte
		,a.end_dte
		,a.oper_end_tms
		,13
                ,left((a.comment_txt || '; Terminated - CRS ' || CURRENT_DATE),255)
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and   	a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	and 	a.form_ind = 'N'
	and 	a.access_ind = 'N'
	and 	a.cat_id <= 0;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_brand b
	where 	a.rule_id = b.rule_id
	and   	a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	and 	a.form_ind = 'N'
	and 	a.access_ind = 'N'
	and 	a.cat_id <= 0;

	update t_bdro_nf_rule_cat_batch
	set     oper_insert_tms = now() + (cat_id||' seconds')::interval;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id,
	       ndc9_nbr,
	       group_type,
	       'N',
	       'N',
	       crs_rule_eff_dte,
	       eff_dte,
	       oper_insert_tms,
	       case when cat_id = 0 then -1 else cat_id end,
	       rule_cat_cde,
	       ident_dsc,
	       decision_dte,
	       job_run_dte,
	       rule_changed_ind,
	       source_flag,
	       new_drug_ind,
	       crs_rule_end_dte,
	       end_dte,
	       oper_end_tms,
	       oper_id,
	       comment_txt
	from t_bdro_nf_rule_cat_batch;

	insert into t_bdro_rule_cat
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,a.form_ind
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.source_flag
		,b.rule_exp_dte
		,a.end_dte
		,a.oper_end_tms
		,13
                ,left((a.comment_txt || '; Terminated - CRS ' || CURRENT_DATE),255)
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and	a.form_ind = 'N'
	and     a.crs_rule_eff_dte = b.rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('T')
	and     a.cat_id > 0;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
	from 	t_bdro_rule_cat_brand b
	where  	a.rule_id = b.rule_id
        and     a.ndc9_nbr = b.ndc9_nbr
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and	a.form_ind = 'N'
        and     a.crs_rule_eff_dte = b.rule_eff_dte
        and     now() between a.oper_insert_tms and a.oper_end_tms
        and     b.maint_cde in ('T')
        and     a.cat_id > 0;

	update t_bdro_rule_cat
	set     oper_insert_tms = now() + (cat_id||' seconds')::interval;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id,
	       ndc9_nbr,
	       group_type,
	       access_ind,
	       form_ind,
	       crs_rule_eff_dte,
	       eff_dte,
	       oper_insert_tms,
	       cat_id,
	       rule_cat_cde,
	       ident_dsc,
	       decision_dte,
	       job_run_dte,
	       'N',
	       source_flag,
	       'N',
	       crs_rule_end_dte,
	       end_dte,
	       oper_end_tms,
	       oper_id,
	       comment_txt
	from    t_bdro_rule_cat;

	CREATE TEMP TABLE t_rule_cat_sum (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		rule_eff_dte            timestamptz,
		access_ind              text,
		cat_id                  smallint,
		rule_cat_cde            text,
		cont_eff_dte            timestamptz,
		cont_end_dte            timestamptz);
	CREATE TEMP TABLE t_rule_cat_cnt (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		rule_eff_dte            timestamptz,
		access_ind              text,
		rule_cat_cde            text,
		cont_eff_dte            timestamptz,
		cont_end_dte            timestamptz,
		row_cnt                 integer);

	INSERT INTO t_rule_cat_sum
	select  min(b.brand_ref_nme)
		,a.rule_id
		,a.group_type
		,a.crs_rule_eff_dte
		,a.access_ind
		,a.cat_id
		,max(a.rule_cat_cde)
		,min(a.eff_dte)
		,max(a.end_dte)
	from    bdro_rule_cmprhnsv a,
		bdro_ndc_brand_ref b
	where   a.ndc9_nbr = b.ndc9_nbr
	and	a.access_ind = 'N'
	and	a.form_ind = 'N' 
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and 	a.cat_id > 0
        and     (a.rule_id, a.group_type, trim(b.brand_ref_nme)) in (
                select distinct rule_id, group_type, brand_nme
		from    t_bdro_rule_cat_brand
		where   maint_cde in ('A'))
	group by 2,3,4,5,6;

	insert into t_rule_cat_cnt
	select  brand_nme
		,rule_id
		,group_type
		,rule_eff_dte
		,access_ind
		,rule_cat_cde
		,min(cont_eff_dte)
		,max(cont_end_dte)
		,count(*)
	from    t_rule_cat_sum
	group by 1,2,3,4,5,6;

	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
        and     (rule_id, group_type, access_ind, rule_eff_dte, brand_nme) not in (
                select  rule_id, group_type, access_ind, rule_eff_dte, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 1);

	update t_bdro_rule_cat_brand
	set     maint_review_ind = 'R'
	where   maint_cde in ('A')
        and     (rule_id, group_type, access_ind, rule_eff_dte, rule_category_cde, brand_nme) not in (
                select  rule_id, group_type, access_ind, rule_eff_dte, rule_cat_cde, brand_nme
		from    t_rule_cat_cnt
		where   row_cnt = 1);

	update t_bdro_rule_cat_brand a
	set 	eff_dte = b.cont_eff_dte,
		end_dte = b.cont_end_dte
	from 	t_rule_cat_cnt b
	where 	a.maint_cde in ('A')
	and     a.maint_review_ind <> 'R'
	and     a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.rule_eff_dte = b.rule_eff_dte;

	delete from t_bdro_nf_rule_cat_batch;
	insert into t_bdro_nf_rule_cat_batch
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.rule_changed_ind
		,a.source_flag
		,a.new_drug_ind
		,b.rule_eff_dte - interval '1 day'
		,a.end_dte
		,a.oper_end_tms
		,13
		,a.comment_txt
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat_brand b
	where   a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     b.rule_eff_dte BETWEEN a.crs_rule_eff_dte AND a.crs_rule_end_dte
	and 	b.rule_eff_dte > a.crs_rule_eff_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     b.maint_cde in ('A')
	and 	a.form_ind = 'N'
	and 	a.access_ind = 'N'
	and 	a.cat_id <= 0;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now() - interval '1 second'
	from 	t_bdro_nf_rule_cat_batch b
	where 	a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.crs_rule_eff_dte
	and     a.eff_dte = b.eff_dte
	and     a.oper_insert_tms = b.oper_insert_tms
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and 	a.form_ind = 'N'
	and 	a.access_ind = 'N'
	and 	a.cat_id <= 0;

	update t_bdro_nf_rule_cat_batch
	set     oper_insert_tms = now();

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id,
	       ndc9_nbr,
	       group_type,
	       'N',
	       'N',
	       crs_rule_eff_dte,
	       eff_dte,
	       oper_insert_tms,
	       case when cat_id = 0 then -1 else cat_id end,
	       rule_cat_cde,
	       ident_dsc,
	       decision_dte,
	       job_run_dte,
	       rule_changed_ind,
	       source_flag,
	       new_drug_ind,
	       crs_rule_end_dte,
	       end_dte,
	       oper_end_tms,
	       oper_id,
	       comment_txt
	from t_bdro_nf_rule_cat_batch;

	select  rule_id
		,ndc9_nbr
		,group_type
		,crs_rule_end_dte
	into temp t_bdro_rule_cat_fut
	from    bdro_rule_cmprhnsv
	where   false;

	insert into t_bdro_rule_cat_fut
        select  a.rule_id
                ,a.ndc9_nbr
                ,a.group_type
                ,min(a.crs_rule_eff_dte - interval '1 day')
        from    bdro_rule_cmprhnsv a,
                t_bdro_rule_cat_brand b
        where   a.rule_id = b.rule_id
        and     a.ndc9_nbr = b.ndc9_nbr
        and     a.group_type = b.group_type
        and     a.crs_rule_end_dte between b.rule_eff_dte and b.rule_exp_dte
	and	b.rule_eff_dte < a.crs_rule_eff_dte
        and     now() between a.oper_insert_tms and a.oper_end_tms
        and     b.maint_cde in ('A')
        and 	a.form_ind = 'N'
        and 	a.access_ind = 'N'
        and 	a.cat_id <= 0
        group by 1,2,3;

	CREATE TEMP TABLE t_contracted_ndcs (
		ndc9_nbr                text,
		group_type              text,
		eff_dte                 timestamptz,
		end_dte                 timestamptz);

	INSERT INTO t_contracted_ndcs
	SELECT  substr(a.ndc_nbr, 1,9)
		,case when b.contract_type_cde = 'MD' then 'MD' else 'BR' end
		,min(a.eff_dte)
		,max(a.end_dte)
	FROM    base_reb_product a,
		reb_contract b,
		reb_contract_rh c,
		medical_product d
	WHERE   now() BETWEEN a.oper_insert_tms AND a.oper_end_tms
	and     a.end_dte > '2013-12-31'
	and     a.reb_contract_id = b.reb_contract_id
	and     now() BETWEEN b.oper_insert_tms AND b.oper_end_tms
	and     a.reb_contract_id = c.reb_contract_id
	and     now() BETWEEN c.oper_insert_tms AND c.oper_end_tms
	and     c.end_dte > '2013-12-31'
	and     a.ndc_nbr = d.ndc_nbr
        and     b.contract_type_cde || b.contract_type_ind not IN ('CMES', 'CMCM', 'BRCM', 'MDCM')
	GROUP BY 1,2;

	delete from t_bdro_nf_rule_cat_batch;
	insert into t_bdro_nf_rule_cat_batch
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.rule_eff_dte
		,case when c.eff_dte > a.rule_eff_dte then c.eff_dte
		    else a.rule_eff_dte end
		,now()
		,0
		,a.rule_category_cde
		,a.rule_nme
		,now()
		,now()
		,a.rule_changed_ind
		,a.rule_originator_dsc
		,a.new_drug_ind
		,coalesce(b.crs_rule_end_dte, a.rule_exp_dte)
		,case when c.end_dte < coalesce(b.crs_rule_end_dte, a.rule_exp_dte) then c.end_dte
		    else a.rule_exp_dte end
		,'3000-12-31 23:59:59'
		,13
		,' '
	from    t_bdro_rule_cat_brand a
		left outer join
		t_bdro_rule_cat_fut b
	on      a.rule_id = b.rule_id
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.group_type = b.group_type
		join
		t_contracted_ndcs c
	on      a.ndc9_nbr = c.ndc9_nbr
	and     a.group_type = c.group_type
	where   a.maint_cde in ('A')
	and     a.maint_review_ind = 'R';

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select rule_id,
	       ndc9_nbr,
	       group_type,
	       'N',
	       'N',
	       crs_rule_eff_dte,
	       eff_dte,
	       oper_insert_tms,
	       case when cat_id = 0 then -1 else cat_id end,
	       rule_cat_cde,
	       ident_dsc,
	       decision_dte,
	       job_run_dte,
	       rule_changed_ind,
	       source_flag,
	       new_drug_ind,
	       crs_rule_end_dte,
	       end_dte,
	       oper_end_tms,
	       oper_id,
	       comment_txt
	from 	t_bdro_nf_rule_cat_batch;

	delete from t_bdro_rule_cat;
	insert into t_bdro_rule_cat
	select  a.rule_id
		,a.ndc9_nbr
                ,a.group_type
                ,a.access_ind
                ,'N'
                ,a.rule_eff_dte
                ,a.eff_dte
                ,now()
                ,b.cat_id
                ,a.rule_category_cde
                ,a.rule_nme
                ,now()
                ,now()
                ,a.rule_originator_dsc
                ,a.rule_exp_dte
                ,a.end_dte
                ,'3000-12-31 23:59:59'
                ,13
                ,'New NDC9 added '
        from    t_bdro_rule_cat_brand a,
                t_rule_cat_sum b
        where   a.maint_cde in ('A')
        and     a.maint_review_ind <> 'R'
        and     a.rule_id = b.rule_id
        and     a.brand_nme = b.brand_nme
        and     a.group_type = b.group_type
        and     a.access_ind = b.access_ind
        and     a.rule_eff_dte = b.rule_eff_dte;

	CREATE TEMP TABLE t_bdro_rule_cat_temp1 (
		brand_nme               text,
		rule_id                 integer,
		ndc9_nbr                text,
		group_type              text,
		orig_eff_dte            timestamptz,
		rule_eff_dte            timestamptz,
		rule_exp_dte            timestamptz,
		cntr_eff_dte            timestamptz,
		cntr_exp_dte            timestamptz,
		access_ind              text,
		form_ind                text,
		cat_id                  smallint);

	insert into t_bdro_rule_cat_temp1
	select   c.brand_nme
		,a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,b.crs_rule_eff_dte as orig_eff_dte
		,a.crs_rule_eff_dte
		,a.crs_rule_end_dte
		,a.eff_dte
		,a.end_dte
		,a.access_ind
		,a.form_ind
		,a.cat_id
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_cat b,
		t_rule_cat_sum c,
		bdro_ndc_brand_ref d
	where 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	now() between d.oper_insert_tms and d.oper_end_tms
	and 	a.rule_id  = b.rule_id
	and 	a.rule_id  = c.rule_id
	and 	a.ndc9_nbr = d.ndc9_nbr
	and 	c.brand_nme  = d.brand_ref_nme
	and 	a.group_type = b.group_type
	and 	a.access_ind = b.access_ind
	and 	a.form_ind   = b.form_ind
	and 	a.cat_id > 0
	and NOT (a.crs_rule_end_dte < now() OR a.end_dte < now())
	group by 1,2,3,4,5,6,7,8,9,10,11,12;

	CREATE TEMP TABLE t_bdro_rule_cat_temp2 (
		brand_nme               text,
		rule_id                 integer,
		group_type              text,
		orig_eff_dte            timestamptz,
		rule_eff_dte            timestamptz,
		access_ind              text,
		form_ind                text,
		cat_id                  smallint);

        insert into t_bdro_rule_cat_temp2
        select  brand_nme
                ,rule_id
                ,group_type
                ,orig_eff_dte
                ,rule_eff_dte
                ,access_ind
                ,form_ind
                ,cat_id
        from  t_bdro_rule_cat_temp1
        group by 1,2,3,4,5,6,7,8;

	CREATE TEMP TABLE t_bdro_rule_cat_temp3 (
		brand_nme               varchar(30),
		rule_id                 integer,
		group_type              CHAR(2),
		orig_eff_dte            date,
		rule_eff_dte            date,
		access_ind              char(1),
		form_ind                char(1),
		row_cnt                 integer);

	insert into t_bdro_rule_cat_temp3
	select  brand_nme
		,rule_id
		,group_type
		,orig_eff_dte
		,rule_eff_dte
		,access_ind
		,form_ind
		,count(*)
	from  	t_bdro_rule_cat_temp2
	group by 1,2,3,4,5,6,7;

	update t_bdro_rule_cat_temp2 a
	set 	cat_id = 0
	from 	t_bdro_rule_cat_temp3 b
	where 	a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.rule_eff_dte = b.rule_eff_dte
	and     a.access_ind = b.access_ind
	and     a.form_ind   = b.form_ind
	and     b.row_cnt > 1;

	select  brand_nme
		,rule_id
		,group_type
		,orig_eff_dte
		,min(rule_eff_dte) as rule_eff_dte
		,access_ind
		,form_ind
		,cat_id
	into temp t_bdro_rule_cat_temp2A
	from  t_bdro_rule_cat_temp2
	group by 1,2,3,4,6,7,8;

	select  min(trim(c.brand_ref_nme)) as brand_nme
		,a.*
	into temp t_bdro_rule_cat_brand_NM
	from    t_bdro_rule_cat a,
		t_bdro_rule_cat_temp2A b,
		bdro_ndc_brand_ref c
	where   a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.crs_rule_eff_dte = b.orig_eff_dte
	and    a.ndc9_nbr = c.ndc9_nbr
	group by 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20;

	update t_bdro_rule_cat_brand_NM a
	set 	cat_id = b.cat_id
	from 	t_bdro_rule_cat_temp2A b
	where 	a.brand_nme = b.brand_nme
	and     a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.crs_rule_eff_dte = b.orig_eff_dte
	and     a.access_ind = b.access_ind
	and     a.form_ind   = b.form_ind;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select   rule_id
		,ndc9_nbr
		,group_type
		,access_ind
		,form_ind
		,crs_rule_eff_dte
		,eff_dte
		,now()
		,cat_id
		,rule_cat_cde
		,ident_dsc
		,now()
		,now()
		,'N'
		,source_flag
		,'N'
		,crs_rule_end_dte
		,end_dte
		,'3000-12-31 23:59:59'
		,13
		,'New NDC9 added '
	from    t_bdro_rule_cat_brand_NM
	where 	cat_id > 0;

COMMIT;" @D@C@
9825@6810@//* 02-18-2019 AJG:                                         @D@C@
9825@6820@//    . Remove preferred history rules from review if:                    @D@C@
9825@6830@//     . crs-rule_eff   >  contract_end                                   @D@C@
9825@6840@//     . crs-rule_end   <  contract_eff                                   @D@C@
9825@6850@//     . cntr_end_dte < '2019-01-01'                                      @D@C@
9825@6855@//*                                                                     * @D@C@
9825@6860@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     crs_rule_eff_dte > end_dte
        and 	form_ind = 'N' 
	and 	access_ind = 'N' 
	and 	cat_id <= 0 @D@C@
9825@6870@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     crs_rule_end_dte < eff_dte
        and 	form_ind = 'N' 
	and 	access_ind = 'N' 
	and 	cat_id <= 0 @D@C@
9825@6880@exec pdat_delete from bdro_rule_cmprhnsv
        where   now() between oper_insert_tms and oper_end_tms
        and     end_dte < '2019-01-01'
        and 	form_ind = 'N' 
	and 	access_ind = 'N' 
	and 	cat_id <= 0 @D@C@
9825@6887@//*                                                                                * @D@C@
9825@6890@//* ========================================================================       * @D@C@
9825@6900@//* Create work tables of all unique rule-id's,form-id's and carriers              * @D@C@
9825@6910@//* that were selected for Access + Preferred History rules                        * @D@C@
9825@6920@//*                                                                                * @D@C@
9825@6930@//*  Access Rules... 'A'                                                           * @D@C@
9825@6940@//*  Preferred Hist rules... 'N'                                                   * @D@C@
9825@6950@exec tdat_drop table fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!? @D@C@
9825@6960@exec tdat_CREATE SET TABLE fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC default ' ',
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        eff_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        end_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        source_template_cde             CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX ( rule_id ,form_id ,carrier_operational_id ,source_template_cde ) @D@C@
9825@6970@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
                t_rule_form_id     fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_rule_form_id
        (rule_id             integer
        ,form_id             CHAR(5)         
        ,carrier_id          VARCHAR(18)  
        ,ndc9_nbr            CHAR(9)          
        ,eff_dte             DATE
        ,end_dte             DATE
        ,source_template_cde CHAR(1));
        INSERT INTO t_rule_form_id
        SELECT  rule_id,
                formulary_id,
                carrier_id,
		ndc9_nbr,
                eff_dte,
                end_dte,
                source_template_cde
        FROM    BDRO_RULE_FORM_ID
        Where   now() BETWEEN oper_insert_tms AND oper_end_tms;" @D@C@
9825@6972@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@6975@exec tdat_update fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!?
	set 	carrier_operational_id = ' '
	where	carrier_operational_id is null @D@C@
9825@6980@//*  Populate the permanent 'Rule/form_id' table              * @D@C@
9825@6990@exec tdat_delete from fr_proddb.bdro_rules_forms ALL @D@C@
9825@6995@exec tdat_delete from fr_proddb.bdro_rules_forms_arch
        where 	run_dte < current_date -  INTERVAL '8' day @D@C@
9825@7000@exec tdat_delete from fr_proddb.bdro_rules_forms_arch
                     Where run_dte = current_date @D@C@
9825@7010@exec tdat_insert into fr_proddb.bdro_rules_forms
        Select  rule_id,
                form_id,
                carrier_operational_id,
                eff_dte,
                end_dte,
                source_template_cde,
		ndc9_nbr
        From    fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!? @D@C@
9825@7020@exec tdat_insert into fr_proddb.bdro_rules_forms_arch
        Select  current_date,
                a.*
        From    fr_proddb.bdro_rules_forms a @D@C@
9825@7030@//* Create a work table of all unique rule-id's,form-id's and carriers             * @D@C@
9825@7040@exec tdat_CREATE VOLATILE TABLE vt_bdro_rule_form_t AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde
                                  ORDER BY eff_dte, end_dte) as range_dte_seq,
                rule_id,
                FORM_ID,
                carrier_operational_id,
                ndc9_nbr,
		source_template_cde,
                eff_dte,
                end_dte
        FROM    (select rule_id,
                        FORM_ID,
                        carrier_operational_id,
                        ndc9_nbr,
			CASE WHEN rule_type = 'A' THEN 'A'
			      ELSE 'N' END as source_template_cde,
                        calc_eff_dte as eff_dte,
                        calc_exp_dte as end_dte
                From    fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!?
                Group by 1,2,3,4,5,6,7 ) a
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@7050@exec tdat_CREATE VOLATILE TABLE vt_bdro_rule_form_d AS (
	select 	min(a.eff_dte) as eff_dte
		,a.end_dte
		,a.group_key_id
	from 	vt_bdro_rule_form_t a,
		(select	end_dte, group_key_id
		from 	vt_bdro_rule_form_t
		group by 1,2) b
		where 	a.group_key_id = b.group_key_id 
		and 	a.end_dte = b.end_dte
		group by 2,3
        ) WITH DATA PRIMARY INDEX(group_key_id) ON COMMIT PRESERVE ROWS @D@C@
9825@7060@exec tdat_delete a
	from 	vt_bdro_rule_form_t a,
		vt_bdro_rule_form_d b 
	where 	a.group_key_id = b.group_key_id
	and 	a.end_dte = b.end_dte
	and 	a.eff_dte > b.eff_dte @D@C@
9825@7070@exec tdat_CREATE VOLATILE TABLE vt_bdro_rule_form AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde
                                  ORDER BY eff_dte, end_dte) as range_dte_seq,
                rule_id,
                FORM_ID,
                carrier_operational_id,
		ndc9_nbr,
                source_template_cde,
                eff_dte,
                end_dte
        FROM   	vt_bdro_rule_form_t 
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@7080@exec tdat_collect stats on vt_bdro_rule_form index (group_key_id, range_dte_seq) @D@C@
9825@7090@exec tdat_collect stats on vt_bdro_rule_form column (group_key_id) @D@C@
9825@7100@exec tdat_drop table fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!? @D@C@
9825@7110@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        form_id                         CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        carrier_operational_id          VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        source_template_cde             CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        grp_form_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        grp_form_end_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL COMPRESS (DATE '3000-12-31'),
        eff_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        end_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX (rule_id ,form_id ,carrier_operational_id, ndc9_nbr) @D@C@
9825@7120@exec tdat_insert into fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?
WITH RECURSIVE  bdro_rule_form_fin (group_key_id_f,
                                rule_id_f, FORM_ID_f, carrier_operational_id_f, ndc9_nbr_f, source_template_cde_f,
                                eff_dte_f, end_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde,
                        eff_dte, end_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_bdro_rule_form
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then eff_dte_f
                                when end_dte between eff_dte_f and end_dte_f then eff_dte_f
                                else eff_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then 
						case when end_dte < end_dte_f then end_dte_f else end_dte end
                                when end_dte between eff_dte_f and end_dte_f then 
						case when end_dte < end_dte_f then end_dte_f else end_dte end
                                else end_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte
                                        then range_per_seq_f
                                when end_dte between eff_dte_f and end_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_bdro_rule_form
                        join bdro_rule_form_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  rule_id_f,
                FORM_ID_f,
                carrier_operational_id_f,
		ndc9_nbr_f,
                source_template_cde_f,
		'1800-01-01',
		'3000-12-31',
                min(eff_dte_f),
                max(end_dte_f)
        FROM    bdro_rule_form_fin
        group by 1,2,3,4,5,6,7, range_per_seq_f @D@C@
9825@7122@exec tdat_drop table vt_bdro_rule_form_t @D@C@
9825@7123@exec tdat_drop table vt_bdro_rule_form_d @D@C@
9825@7124@exec tdat_drop table vt_bdro_rule_form @D@C@
9825@7130@//* add data from form propcess                                                    * @D@C@
9825@7140@exec tdat_insert into fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?
        select  rule_id
                ,form_id
                ,carrier_operational_id
		,ndc9_nbr
                ,'F'
		,'1800-01-01'   /*grp_form_eff_dte */
		,'3000-12-31'  /*grp_form_end_dte */
                ,eff_dte
                ,end_dte
        from    fr_proddb_v.bdro_rule_form_id_formulary @D@C@
9825@7150@//*                                                                                * @D@C@
9825@7152@exec pdat_delete FROM bdro_category where cat_id > 9999 @D@C@
9825@7160@exec tdat_drop table fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!? @D@C@
9825@7170@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        source_template_cde             CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (rule_id) @D@C@
9825@7180@exec tdat_insert into fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!?
        Select  rule_id,
                CASE WHEN access_ind = 'N' and form_ind = 'Y'  THEN 'F'
                        WHEN access_ind = 'Y' and form_ind = 'N'  THEN 'A'
                        WHEN access_ind = 'N' and form_ind = 'N'  THEN 'N'
                        ELSE 'X' END as source_template_cde
        from    fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!?
        where   (rule_id, source_template_cde) not in (
                select  distinct rule_id, source_template_cde
                from    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?)
        and     rule_id in (
                select  distinct rule_id
                from    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?)
        Group by 1,2 @D@C@
9825@7190@exec tdat_delete from fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!?
	where	source_template_cde = 'X' @D@C@
9825@7200@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!? INDEX (rule_id) @D@C@
9825@7210@//*                                                                                * @D@C@
9825@7220@exec tdat_CREATE VOLATILE TABLE vt_bdro_miss_rules AS (
        select  RANK() OVER(PARTITION BY ' '
                                  ORDER BY a.rule_id, a.FORM_ID, a.carrier_operational_id, b.source_template_cde) as group_key_id,
                ROW_NUMBER() OVER(PARTITION BY a.rule_id, a.FORM_ID, a.carrier_operational_id, b.source_template_cde
                                  ORDER BY eff_dte, end_dte) as range_dte_seq,
                a.rule_id,
                a.FORM_ID,
                a.carrier_operational_id,
		a.ndc9_nbr,
                b.source_template_cde,
		a.grp_form_eff_dte,
		a.grp_form_end_dte,
                a.eff_dte,
                a.end_dte
        from    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!? a,
                fr_workdb.wt_BDRO_NF_miss_rules_?!temp_table_suffix!? b
        where   a.rule_id = b.rule_id
        ) WITH DATA PRIMARY INDEX(group_key_id, range_dte_seq) ON COMMIT PRESERVE ROWS @D@C@
9825@7230@exec tdat_insert into fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?
WITH RECURSIVE  bdro_miss_rules_fin (group_key_id_f,
                                rule_id_f, FORM_ID_f, carrier_operational_id_f, ndc9_nbr_f, source_template_cde_f,
                                grp_form_eff_dte_f, grp_form_end_dte_f,
                                eff_dte_f, end_dte_f,
                                range_per_seq_f, range_dte_seq_f)
        AS (
                SELECT  group_key_id,
                        rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde,
                        grp_form_eff_dte, grp_form_end_dte,
                        eff_dte, end_dte,
                        range_dte_seq, range_dte_seq
                FROM    vt_bdro_miss_rules
                WHERE   range_dte_seq = 1
                UNION ALL
                SELECT  group_key_id,
                        rule_id, FORM_ID, carrier_operational_id, ndc9_nbr, source_template_cde,
                        grp_form_eff_dte, grp_form_end_dte,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then eff_dte_f
                                when end_dte between eff_dte_f and end_dte_f then eff_dte_f
                                else eff_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte then
                                                case when end_dte < end_dte_f then end_dte_f else end_dte end
                                when end_dte between eff_dte_f and end_dte_f then
                                                case when end_dte < end_dte_f then end_dte_f else end_dte end
                                else end_dte end,
                        case when end_dte_f + interval '1' day between eff_dte and end_dte
                                        then range_per_seq_f
                                when end_dte between eff_dte_f and end_dte_f then range_per_seq_f
                                else range_dte_seq end,
                        range_dte_seq
                FROM    vt_bdro_miss_rules
                        join bdro_miss_rules_fin
                on      group_key_id = group_key_id_f
                AND     range_dte_seq = range_dte_seq_f + 1
        )
        SELECT  rule_id_f,
                FORM_ID_f,
                carrier_operational_id_f,
		ndc9_nbr_f,
                source_template_cde_f,
		grp_form_eff_dte_f, 
		grp_form_end_dte_f,
                min(eff_dte_f),
                max(end_dte_f)
        FROM    bdro_miss_rules_fin
        group by 1,2,3,4,5,6,7, range_per_seq_f @D@C@
9825@7232@exec tdat_drop table vt_bdro_miss_rules @D@C@
9825@7240@//exec tdat_update a
        from    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!? a,
                (select form_id, carrier_operational_id,
                        min(grp_form_eff_dte) as grp_form_eff_dte,
                        max(grp_form_end_dte) as grp_form_end_dte
                 from   fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!?
                 group by 1,2) b
        set     grp_form_eff_dte = b.grp_form_eff_dte
                ,grp_form_end_dte = b.grp_form_end_dte
        where   a.form_id = b.form_id
        and     a.carrier_operational_id = b.carrier_operational_id 
	and	source_template_cde in ('A','N') @D@C@
9825@7250@//*                                                                                * @D@C@
9825@7260@//* Create a maintenance table used to update Infrmix Table: 'bdro_rule_form_id'   * @D@C@
9825@7270@//*                                                                                * @D@C@
9825@7280@exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!? @D@C@
9825@7290@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        maint_cde                       CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        source_template_cde             CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_id                         INTEGER NOT NULL,
        formulary_id                    CHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        carrier_id                      VARCHAR(18) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        eff_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        end_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX ( maint_cde ,rule_id ,formulary_id ,carrier_id ) @D@C@
9825@7300@exec tdat_insert into fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!?
        Select  'D',
                b.source_template_cde,
                b.rule_id,
                b.form_id,
                b.carrier_operational_id,
		b.ndc9_nbr,
                b.eff_dte,
                b.end_dte
        From    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?  a
                FULL OUTER JOIN
                fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!? b
        ON      a.rule_id    = b.rule_id
        AND     a.form_id    = b.form_id
        AND     a.carrier_operational_id = b.carrier_operational_id
        AND     a.source_template_cde = b.source_template_cde
        AND     a.ndc9_nbr = b.ndc9_nbr
        and     a.eff_dte = b.eff_dte
        and     a.end_dte = b.end_dte
        WHERE   a.rule_id is NULL @D@C@
9825@7310@exec tdat_insert into fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!?
        Select  'A',
                a.source_template_cde,
                a.rule_id,
                a.form_id,
                a.carrier_operational_id,
                a.ndc9_nbr,
                a.eff_dte,
                max(a.end_dte)
        From    fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!?  a
                FULL OUTER JOIN
                fr_workdb.wt_bdro_rule_form_temp_?!temp_table_suffix!? b
        ON      a.rule_id    = b.rule_id
        AND     a.form_id    = b.form_id
        AND     a.carrier_operational_id = b.carrier_operational_id
        AND     a.source_template_cde = b.source_template_cde
        AND     a.ndc9_nbr = b.ndc9_nbr
        and     a.eff_dte = b.eff_dte
        and     a.end_dte = b.end_dte
        WHERE   b.rule_id is NULL
        group by 1,2,3,4,5,6,7 @D@C@
9825@7320@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                rule_form_maint fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!?
"pdat_BEGIN;
	update bdro_rule_form_id a 
	set 	oper_end_tms = now()
	from 	t_rule_form_maint b
	where 	a.rule_id = b.rule_id
        and     a.formulary_id = b.formulary_id
        and     a.carrier_id = b.carrier_id
	and	a.ndc9_nbr = b.ndc9_nbr
        and     a.eff_dte = b.eff_dte
        and     a.end_dte = b.end_dte
        and     a.source_template_cde = b.source_template_cde
        and     now() between a.oper_insert_tms and a.oper_end_tms
        and     b.maint_cde = 'D';

	CREATE TEMP TABLE t_rule_list (
	rule_id      		integer,
	source_template_cde	text);

	insert into t_rule_list
	select  distinct rule_id
		,case  when access_ind = 'N' and form_ind = 'Y' then 'F'
			when access_ind = 'Y' then 'A' 
			else 'N' end 
	from    bdro_rule_cmprhnsv
	WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
	and 	bdro_rule_cmprhnsv.cat_id > 0;

	insert into t_rule_list
	select  distinct rule_id
		,case  when access_ind = 'N' then 'F'
			when access_ind = 'Y' then 'A' 
			else 'N' end 
	from    bdro_rule_cmprhnsv
	WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
	and 	(access_ind = 'Y' or form_ind = 'Y' /*????*/) 
	and 	cat_id <= 0;

	insert into t_rule_list
	select  distinct rule_id
		,'N'
	from    bdro_rule_cmprhnsv
	WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
	and 	access_ind = 'N' 
	and 	form_ind = 'N' 
	and 	cat_id <= 0;

	insert into bdro_rule_form_id
        select  rule_id
                ,formulary_id
                ,trim(carrier_id)
		,ndc9_nbr
                ,eff_dte
                ,case when source_template_cde = 'F' then now()
			when source_template_cde = 'A' then now() + interval '1 second'
                        else now() + interval '2 seconds' end
                ,source_template_cde
                ,end_dte
                ,'3000-12-31 23:59:59'
                ,13
                ,' '
        from    t_rule_form_maint
        where   maint_cde = 'A'
        and     (rule_id, source_template_cde) in (
                select  rule_id, source_template_cde
                from    t_rule_list);
COMMIT;" @D@C@
9825@7330@//* ===========================================================================    * @D@C@
9825@7340@//* Update the permanent NF Drug list table.                                       * @D@C@
9825@7350@//*                                                                                * @D@C@
9825@7360@//* Insert all existing drugs that were extracted from the Informix tables         * @D@C@
9825@7370@//* Insert all new  drugs that were extracted from the current rule extract        * @D@C@
9825@7380@//*             ????????????????????????                                           * @D@C@
9825@7390@exec tdat_delete from fr_proddb.BDRO_NF_uniq_drugs_ndc all  @D@C@
9825@7400@exec tdat_insert into fr_proddb.BDRO_NF_uniq_drugs_ndc
	Select 	ndc9_nbr,
		group_type
	From 	fr_proddb.BDRO_NF_drugs_rules_ndc 
	Group by 1,2 @D@C@
9825@7410@exec tdat_insert into fr_proddb.BDRO_NF_uniq_drugs_ndc
        Select *
        FROM fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!?    @D@C@
9825@7420@//* ===========================================================================    * @D@C@
9825@7430@//* 8/28/2018 AJG...                                                               * @D@C@
9825@7440@//*   Code added to drop Dups from Maint table.  Can be removed after fix          * @D@C@
9825@7450@//*                                                                                * @D@C@
9825@7460@exec tdat_drop table fr_workdb.wt_bdro_dup_maint_?!temp_table_suffix!? @D@C@
9825@7470@exec tdat_CREATE SET TABLE fr_workdb.wt_bdro_dup_maint_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        ( 
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL, 
        rule_id                         INTEGER NOT NULL, 
        group_type                      CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL, 
        oper_insert_tms              TIMESTAMP(0)  NOT NULL,
        crs_rule_eff_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL, 
        crs_rule_exp_dte                DATE FORMAT 'YYYY-MM-DD' NOT NULL, 
        eff_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL, 
        end_dte                         DATE FORMAT 'YYYY-MM-DD' NOT NULL, 
        access_ind                      CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL, 
        form_ind                        CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL, 
        cat_id                         INTEGER NOT NULL) 
        PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@7480@//*                                                                                * @D@C@
9825@7490@//* Capture Maint dups until fixed.                                                * @D@C@
9825@7492@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
        t_rule_cat_dup fr_workdb.wt_bdro_dup_maint_?!temp_table_suffix!?
"pdat_BEGIN;
        CREATE TEMP TABLE t_rule_cat_dup (
		ndc9_nbr text not null 
		,rule_id integer
		,group_type text not null  
		,oper_insert_tms TIMESTAMP(0) not null 
		,crs_rule_eff_dte DATE not null 
		,crs_rule_end_dte DATE not null 
		,eff_dte DATE not null
		,end_dte DATE not null
		,access_ind text not null
		,form_ind text not null
		,cat_id smallint not null);

	insert into t_rule_cat_dup
	select   ndc9_nbr
		,rule_id 
		,group_type 
		,max(oper_insert_tms)
		,crs_rule_eff_dte 
		,crs_rule_end_dte 
		,eff_dte
		,end_dte
		,access_ind
		,form_ind
		,cat_id 
	from 	bdro_rule_cmprhnsv 
	where 	now() between oper_insert_tms and oper_end_tms
	and 	cat_id > 0
	group by 1,2,3,5,6,7,8,9,10,11  
	having count(*) > 1;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now(),
		comment_txt = trim(comment_txt) || '- Dup row deleted'
	from 	t_rule_cat_dup b
	where 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.rule_id  = b.rule_id
	and 	a.group_type = b.group_type
	and 	a.oper_insert_tms  = b.oper_insert_tms
	and 	a.crs_rule_eff_dte = b.crs_rule_eff_dte
	and 	a.crs_rule_end_dte = b.crs_rule_end_dte
	and 	a.eff_dte    = b.eff_dte 
	and 	a.end_dte    = b.end_dte 
	and 	a.access_ind = b.access_ind
	and 	a.form_ind   = b.form_ind
	and 	a.cat_id     = b.cat_id
	and 	now() between a.oper_insert_tms and a.oper_end_tms
	and     a.cat_id > 0;

	update bdro_rule_cmprhnsv a
	set 	eff_dte = b.eff_dte
		,comment_txt = 'Contract dates changed to align with brand list'
	from 	bdro_brand_list b
	where 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.group_type = b.contract_type_cde
	and 	a.access_ind = 'Y'  
	and 	b.ndc_type_ind = 'A'
	and 	a.eff_dte < b.eff_dte
	and 	now() between a.oper_insert_tms and a.oper_end_tms
	and 	now() between b.oper_insert_tms and b.oper_end_tms
	AND     a.cat_id <= 0;
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y')!!!!*/

	update bdro_rule_cmprhnsv a
	set 	end_dte = b.end_dte
		,comment_txt = 'Contract dates changed to align with brand list'
	from 	bdro_brand_list b
	where 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.group_type = b.contract_type_cde 	
	and 	a.access_ind = 'Y' 
	 and 	b.ndc_type_ind = 'A'	
	and 	a.end_dte > b.end_dte
	and 	b.end_dte > a.eff_dte
	and    	now() between a.oper_insert_tms and a.oper_end_tms
	and    	now() between b.oper_insert_tms and b.oper_end_tms
	AND     a.cat_id <= 0;
	/*AND 	(a.form_ind = 'Y' OR a.access_ind = 'Y')!!!!*/
COMMIT;" @D@C@
9825@7494@// Temp code: 12/20/21  remove new brand list entries going to Review @D@C@
9825@7498@exec pdat_delete from bdro_rule_cmprhnsv
                where   now() between oper_insert_tms and oper_end_tms
                   and cat_id < 0
                   and (
                     (comment_txt like 'Contract dates changed to align with brand%')
                       )
                   and date(oper_insert_tms) > '2021-12-19' @D@C@
9825@7502@//**********************************************************************  @D@C@
9825@7504@// 2020-06-09 AJG: . Add code to update any rule in the bdro_cmprhnsv     @D@C@
9825@7505@//                   table if crs_rule_exp_dte >                          @D@C@
9825@7506@//                   max(crs_rule_exp_dte) extracted from CRS today       @D@C@
9825@7507@//                                                                        @D@C@
9825@7508@//    after updates, check for dup rows (possible for old rows)           @D@C@
9825@7510@//**********************************************************************  @D@C@
9825@7512@exec tdat_drop table fr_workdb.wt_BDRO_rule_max_exp_?!temp_table_suffix!? @D@C@
9825@7514@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_rule_max_exp_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        max_exp_dte                     TIMESTAMP(6))
        PRIMARY INDEX (rule_id ) @D@C@
9825@7516@exec tdat_insert into fr_workdb.wt_BDRO_rule_max_exp_?!temp_table_suffix!?
        SELECT rule_id,
           max(expire_date)
          FROM fr_proddb_v.bdro_temp_rule_product
         GROUP BY 1   @D@C@
9825@7518@//*                                                                                * @D@C@
9825@7520@exec tdat_collect stats on fr_workdb.wt_BDRO_rule_max_exp_?!temp_table_suffix!?
              INDEX (rule_id ) @D@C@
9825@7522@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                 bdro_rule_max_exp  fr_workdb.wt_bdro_rule_max_exp_?!temp_table_suffix!?
"pdat_delete from bdro_rule_max_exp;
        insert into bdro_rule_max_exp
        select  * 
        from    t_bdro_rule_max_exp;
commit;

	create temp table t_bdro_rule_cat
	(
	    rule_id          integer,
	    ndc9_nbr         char(9)                                                              not null,
	    group_type       char(2),
	    access_ind       char                                                                 not null,
	    form_ind         char                                                                 not null,
	    crs_rule_eff_dte timestamp,
	    eff_dte          timestamp                                                            not null,
	    oper_insert_tms  timestamp default now()                                              not null,
	    cat_id           smallint                                                             not null,
	    rule_cat_cde     char(3)                                                              not null,
	    ident_dsc        varchar(120),
	    decision_dte     timestamp,
	    job_run_dte      timestamp,
            rule_changed_ind char(1)                                                              not null,
	    source_flag      varchar(60),
            new_drug_ind     char(1)                                                              not null,
	    crs_rule_end_dte timestamp,
	    end_dte          timestamp default '3000-12-31 00:00:00'::timestamp without time zone not null,
	    oper_end_tms     timestamp default '3000-12-31 23:59:59'::timestamp without time zone not null,
	    oper_id          integer                                                              not null,
	    comment_txt      varchar(255));

	insert into t_bdro_rule_cat
	select  a.rule_id
		,a.ndc9_nbr
		,a.group_type
		,a.access_ind
		,a.form_ind
		,a.crs_rule_eff_dte
		,a.eff_dte
		,a.oper_insert_tms
		,a.cat_id
		,a.rule_cat_cde
		,a.ident_dsc
		,a.decision_dte
		,a.job_run_dte
		,a.rule_changed_ind
		,a.source_flag
		,a.new_drug_ind
		,b.max_exp_dte
		,a.end_dte
		,a.oper_end_tms
		,a.oper_id
		,a.comment_txt || '; CRS end_dte fix ' || current_date
	from    bdro_rule_cmprhnsv a,
		t_bdro_rule_max_exp b
	where   a.rule_id = b.rule_id
	and     a.crs_rule_end_dte > b.max_exp_dte
	and     now() between a.oper_insert_tms and a.oper_end_tms;

	update bdro_rule_cmprhnsv a
	set 	oper_end_tms = now()
               ,comment_txt  = a.comment_txt || '; CRS end_dte old '
	from 	t_bdro_rule_cat b 
	where 	a.rule_id    = b.rule_id
	and     a.ndc9_nbr   = b.ndc9_nbr
	and     a.group_type = b.group_type
	and     a.access_ind = b.access_ind
	and     a.form_ind   = b.form_ind  
	and     a.crs_rule_eff_dte = b.crs_rule_eff_dte
	and     a.eff_dte    = b.eff_dte
	and     a.oper_insert_tms = b.oper_insert_tms
	and     now() between a.oper_insert_tms and a.oper_end_tms;

	update t_bdro_rule_cat
	set oper_insert_tms = now() + (cat_id ||' seconds')::interval;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind, 
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde, 
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind, 
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select 	rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
	from 	t_bdro_rule_cat;

	CREATE TEMP TABLE t_Dup_Maint (
	 rule_id                integer
        ,ndc9_nbr               char(9) not null
        ,group_type             char(2) not null
	,access_ind             char(1)
	,form_ind               char(1)
        ,crs_rule_eff_dte       DATE
        ,crs_rule_end_dte       DATE
        ,eff_dte                date
	,end_dte                date
        ,cat_id                 smallint
        ,row_cnt                smallint
        ,oper_insert_tms        timestamp default now());

	insert into t_dup_maint
	select rule_id,ndc9_nbr,group_type,access_ind,form_ind,
	crs_rule_eff_dte,crs_rule_end_dte,eff_dte,end_dte,
	cat_id,count(*),min(oper_insert_tms)
	from  bdro_rule_cmprhnsv a
	where now() between oper_insert_tms and oper_end_tms
	group by 1,2,3,4,5,6,7,8,9,10 having count(*) > 1;

	delete from bdro_rule_cmprhnsv
	where
         (rule_id, ndc9_nbr, group_type, access_ind, form_ind,
          crs_rule_eff_dte, crs_rule_end_dte,
          eff_dte, end_dte, cat_id, oper_insert_tms)  IN
            (select rule_id, ndc9_nbr, group_type, access_ind, form_ind,
               crs_rule_eff_dte, crs_rule_end_dte, eff_dte, end_dte, cat_id, oper_insert_tms
              from t_Dup_Maint);

COMMIT;" @D@C@
9825@7524@//*=============================================================================* @D@C@
9825@7526@//  2019-07-09 AJG: Add code to match all Targeted vs Hist rule versions.         @D@C@
9825@7528@//                  Build new Drug Hist table using preferred hist rules          @D@C@
9825@7530@//                  in maint or review where Phist rule version matches the       @D@C@
9825@7532@//                  unique Hist rule versions that were matched to targeted.      @D@C@
9825@7540@//*=============================================================================* @D@C@
9825@7550@//*                                                                             * @D@C@
9825@7560@//* Unload all active and latest Phist rows from maint and review               * @D@C@
9825@7570@//*                                                                             * @D@C@
9825@7580@exec tdat_drop table fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!? @D@C@
9825@7590@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	oper_id				INTEGER NOT NULL,
	cat_id				SMALLINT NOT NULL,
	comment_txt			VARCHAR(260) CHARACTER SET LATIN NOT CASESPECIFIC)
	PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@7600@exec !_?fastload_dir?/fastload_postgresql_to_teradata ?request_id?
	t_nf_latest_Phist   fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?
"pdat_CREATE TEMP TABLE t_nf_Dup_Phist
        (rule_id                integer
        ,ndc9_nbr               char(9) not null
        ,group_type             char(2) not null
        ,crs_rule_eff_dte       DATE
        ,eff_dte                DATE not null
        ,oper_insert_tms        timestamp default now()
        ,row_cnt                smallint not null);

        INSERT INTO t_nf_Dup_Phist
        select rule_id,ndc9_nbr,group_type,crs_rule_eff_dte,
        eff_dte,max(oper_insert_tms),count(*)
        from bdro_rule_cmprhnsv
        where now() between oper_insert_tms and oper_end_tms
        and form_ind = 'N' and access_ind = 'N'
        group by 1,2,3,4,5  having count(*) > 1;

CREATE TEMP TABLE t_nf_temp_Phist
        (rule_id                integer
        ,ndc9_nbr               char(9) not null
        ,group_type             char(2) not null
        ,crs_rule_eff_dte       DATE
        ,crs_rule_end_dte       DATE
        ,eff_dte                DATE not null
        ,end_dte                DATE not null
        ,oper_insert_tms        timestamp default now()
        ,oper_id                integer not null
        ,cat_id                 smallint not null
        ,drop_ind               char(1) not null
        ,comment_txt            varchar(250));
        INSERT INTO t_nf_temp_Phist
        SELECT  rule_id
               ,ndc9_nbr
               ,group_type
               ,crs_rule_eff_dte
               ,crs_rule_end_dte
               ,eff_dte
               ,end_dte
               ,oper_insert_tms
               ,oper_id
               ,cat_id
               ,' '
               ,substr(comment_txt,1,250)
        FROM    bdro_rule_cmprhnsv
        WHERE   now() BETWEEN oper_insert_tms AND oper_end_tms
        AND     form_ind = 'N'
        AND     access_ind = 'N';

        update t_nf_temp_Phist a
        set  drop_ind = 'Y'
        from    t_nf_Dup_Phist b
        where   a.rule_id = b.rule_id
        and     a.ndc9_nbr = b.ndc9_nbr
        and     a.group_type = b.group_type
        and     a.crs_rule_eff_dte = b.crs_rule_eff_dte
        and     a.eff_dte = b.eff_dte
        and     a.oper_insert_tms <> b.oper_insert_tms;

CREATE TEMP TABLE t_nf_latest_Phist
        (rule_id                integer
        ,ndc9_nbr               char(9) not null
        ,group_type             char(2) not null
        ,crs_rule_eff_dte       DATE
        ,crs_rule_end_dte       DATE
        ,eff_dte                DATE not null
        ,end_dte                DATE not null
        ,oper_id                integer not null
        ,cat_id                 smallint not null
        ,comment_txt            varchar(250));
        INSERT INTO t_nf_latest_Phist
        SELECT  rule_id
               ,ndc9_nbr
               ,group_type
               ,crs_rule_eff_dte
               ,crs_rule_end_dte
               ,eff_dte
               ,end_dte
               ,oper_id
               ,cat_id
               ,substr(comment_txt,1,250)
        FROM    t_nf_temp_Phist
        WHERE   drop_ind <> 'Y';

	CREATE TEMP TABLE t_contracted_ndcs (
        ndc9_nbr               char(9) not null,
        group_type             char(2) not null,
        eff_dte                 DATE,
        end_dte                 DATE);
        INSERT INTO t_contracted_ndcs
        SELECT  substr(a.ndc_nbr, 1, 9)
		,case when b.contract_type_cde = 'MD' then 'MD' else 'BR' end
                ,min(a.eff_dte)
                ,max(a.end_dte)
        FROM    base_reb_product a,
                reb_contract b,
                reb_contract_rh c,
                medical_product d
        WHERE   now() BETWEEN a.oper_insert_tms AND a.oper_end_tms
        and     a.end_dte > '?w_cntr_end_dte?'
        and     a.reb_contract_id = b.reb_contract_id
        and     now() BETWEEN b.oper_insert_tms AND b.oper_end_tms
        and     a.reb_contract_id = c.reb_contract_id
        and     now() BETWEEN c.oper_insert_tms AND c.oper_end_tms
        and     c.end_dte > '?w_cntr_end_dte?'
        and     b.contract_type_cde || b.contract_type_ind not IN ('CMES', 'CMCM', 'BRCM', 'MDCM') 
        and     a.ndc_nbr = d.ndc_nbr
        GROUP BY 1,2;

	Delete from t_nf_latest_Phist
	where
         (ndc9_nbr, group_type) NOT IN
            (select ndc9_nbr, group_type from t_contracted_ndcs);

	Delete from t_nf_latest_Phist
	where crs_rule_end_dte < '?w_min_end_dte?'; 

	Delete from t_nf_latest_Phist
	where end_dte < '?w_min_end_dte?'; 

        delete from t_nf_latest_Phist
        where   crs_rule_eff_dte > end_dte;

        delete from t_nf_latest_Phist
        where   crs_rule_end_dte < eff_dte;

COMMIT;" @D@C@
9825@7610@//*                                                                             * @D@C@
9825@7630@exec tdat_update fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?
        set comment_txt = ' '
        where comment_txt is null  @D@C@
9825@7640@//*                                                                               @D@C@
9825@7642@//*=============================================================================* @D@C@
9825@7644@// 2019-07-09 AJG: get all rule versions that are unique to History             * @D@C@
9825@7646@//               Exclude all rules that match to targeted and contain           * @D@C@
9825@7648@//               the same rule/NDC/version eff+end dates                        * @D@C@
9825@7650@//*=============================================================================* @D@C@
9825@7652@//*                                                                             * @D@C@
9825@7660@exec tdat_drop table fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!? @D@C@
9825@7670@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        rule_id                         INTEGER NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
        rule_eff_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL,
        rule_exp_dte                    DATE FORMAT 'YYYY-MM-DD' NOT NULL)
        PRIMARY INDEX (rule_id ,rule_eff_dte ,ndc9_nbr) @D@C@
9825@7672@//*                                                                                  @D@C@
9825@7680@exec tdat_insert into fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
        SELECT a.rule_id
              ,a.ndc9_nbr
              ,a.rule_eff_dte
              ,a.rule_exp_dte
          from fr_workdb.wt_BDRO_NF_ALL_hist_versions_?!temp_table_suffix!? a
         Where match_ind <> 'Y'
           and a.rule_id IN
            (select distinct b.rule_id
               from fr_proddb_v.bdro_ALL_target_versions b) @D@C@
9825@7682@//*                                                                               @D@C@
9825@7690@exec tdat_collect stats on fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
                        column (rule_id,ndc9_nbr) @D@C@
9825@7700@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?
                        column (rule_id,ndc9_nbr) @D@C@
9825@7710@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?
                        column (rule_eff_dte) @D@C@
9825@7720@exec tdat_collect stats on fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?
                        column (rule_exp_dte) @D@C@
9825@7722@//*                                                                             * @D@C@
9825@7724@//*  Delete the majority of history rules that are not found in Review or maint * @D@C@
9825@7726@//*                                                                             * @D@C@
9825@7730@exec tdat_delete from fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
              where   (rule_id,ndc9_nbr ) NOT IN 
               (SELECT  distinct rule_id,ndc9_nbr
                From  fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!?)  @D@C@
9825@7740@//*                                                                             * @D@C@
9825@7750@exec tdat_collect stats on fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
                        column (rule_id,ndc9_nbr) @D@C@
9825@7760@exec tdat_collect stats on fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
                        column (rule_eff_dte) @D@C@
9825@7770@exec tdat_collect stats on fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!?
                        column (rule_exp_dte) @D@C@
9825@7772@//*                                                                             * @D@C@
9825@7774@//* Build the latest drug history table from maint + review                     * @D@C@
9825@7776@//*                                                                             * @D@C@
9825@7780@exec tdat_drop table fr_workdb.wt_BDRO_NF_drug_hist_?!temp_table_suffix!? @D@C@
9825@7790@exec tdat_CREATE SET TABLE fr_workdb.wt_BDRO_NF_drug_hist_?!temp_table_suffix!? ,NO FALLBACK ,
	NO BEFORE JOURNAL,
	NO AFTER JOURNAL,
	CHECKSUM = DEFAULT,
	DEFAULT MERGEBLOCKRATIO
	(
	rule_id				INTEGER NOT NULL,
        ndc9_nbr                        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	group_type			CHAR(2) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,
	rule_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	rule_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_eff_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	cntr_exp_dte			DATE FORMAT 'YYYY-MM-DD' NOT NULL,
	oper_id				INTEGER NOT NULL,
	cat_id				SMALLINT NOT NULL,
	comment_txt			VARCHAR(260) CHARACTER SET LATIN NOT CASESPECIFIC)
	PRIMARY INDEX (ndc9_nbr ,rule_id) @D@C@
9825@7800@//*                                                                             * @D@C@
9825@7810@exec tdat_insert into fr_workdb.wt_BDRO_NF_drug_hist_?!temp_table_suffix!?
        SELECT a.rule_id
              ,a.ndc9_nbr
              ,a.group_type
              ,a.rule_eff_dte
              ,a.rule_exp_dte
              ,a.cntr_eff_dte
              ,a.cntr_exp_dte
              ,a.oper_id
              ,a.cat_id
              ,a.comment_txt
          from fr_workdb.wt_BDRO_NF_latest_Phist_?!temp_table_suffix!? a,
               fr_workdb.wt_BDRO_DH_hist_unique_?!temp_table_suffix!? b
         Where a.rule_id = b.rule_id
           and a.ndc9_nbr = b.ndc9_nbr
           and (
               (a.rule_eff_dte between b.rule_eff_dte and b.rule_exp_dte)
                  OR
               (b.rule_eff_dte between a.rule_eff_dte and a.rule_exp_dte)
               )  @D@C@
9825@7812@//*                                                                               @D@C@
9825@7814@//*  Restore the drug history table with the latest Phist data                    @D@C@
9825@7816@//*                                                                               @D@C@
9825@7820@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                drug_hist fr_workdb.wt_BDRO_NF_drug_hist_?!temp_table_suffix!?
"pdat_delete from bdro_drug_hist_temp;
	insert into bdro_drug_hist_temp
        SELECT rule_id
              ,ndc9_nbr
              ,group_type
              ,rule_eff_dte
	      ,now() + interval '3 second'
              ,rule_exp_dte
              ,cntr_eff_dte
              ,cntr_exp_dte
              ,'3000-12-31 23:59:59'
              ,oper_id
              ,cat_id
              ,comment_txt
        from    t_drug_hist;

        delete from bdro_drug_hist;
        insert into bdro_drug_hist
	  select * from bdro_drug_hist_temp;

COMMIT;" @D@C@
9825@7851@//*                                                                     * @D@C@
9825@7852@//* 07-20-2020 AJG:                                                       @D@C@
9825@7853@//    . Remove Drug History rows using similar code                       @D@C@
9825@7854@//      used for bdro_rule_cmprhnsv  (preferred History rows)             @D@C@
9825@7855@//*                                                                     * @D@C@
9825@7860@//exec pdat_delete from bdro_drug_hist
        where   now() between oper_insert_tms and oper_end_tms
        and     crs_rule_eff_dte > end_dte @D@C@
9825@7870@//exec pdat_delete from bdro_drug_hist
        where   now() between oper_insert_tms and oper_end_tms
        and     crs_rule_end_dte < eff_dte @D@C@
9825@7880@//exec pdat_delete from bdro_drug_hist
        where   now() between oper_insert_tms and oper_end_tms
	and     end_dte < ?w_min_end_dte?  @D@C@
9825@7882@//*======================================================================* @D@C@
9825@7900@//*     ADD missing NDC                                                  * @D@C@
9825@7910@exec tdat_drop table fr_workdb.wt_bdro_match_ndc_?!temp_table_suffix!? @D@C@
9825@7920@exec tdat_CREATE SET TABLE FR_WORKDB.wt_bdro_match_ndc_?!temp_table_suffix!? ,NO FALLBACK ,
        NO BEFORE JOURNAL,
        NO AFTER JOURNAL,
        CHECKSUM = DEFAULT,
        DEFAULT MERGEBLOCKRATIO
        (
        ndc9_nbr        CHAR(9) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL)
        PRIMARY INDEX (ndc9_nbr) @D@C@
9825@7930@exec tdat_insert into fr_workdb.wt_bdro_match_ndc_?!temp_table_suffix!?
        select  distinct ndc9_nbr
        from    fr_workdb.wt_bdro_rules_brands_incm_t01_?!fm_temp_table_suffix!? @D@C@
9825@7940@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_match_ndc fr_workdb.wt_bdro_match_ndc_?!temp_table_suffix!?
"pdat_BEGIN;
        create temp table t_bdro_match_ndc_brand as
        (select b.ndc9_nbr
                ,b.brand_ref_nme
                ,' ' as stat_ind
        from    t_bdro_match_ndc a,
                bdro_ndc_brand_ref b
        where   a.ndc9_nbr = b.ndc9_nbr
        and     now() between b.oper_insert_tms and b.oper_end_tms
        group by 1,2) with data;

        update t_bdro_match_ndc_brand
        set stat_ind = 'C'
        where   ndc9_nbr in (
                select  substring(ndc_nbr, 1, 9)
                from    base_reb_product a,
                        reb_contract b
                where   a.eff_dte > '2013-12-31'
                and     now() between a.oper_insert_tms and a.oper_end_tms
                and     a.reb_contract_id = b.reb_contract_id
                and     b.contract_type_cde not in ('CM'));

        delete from t_bdro_match_ndc_brand
        where   stat_ind <> 'C';

	/* ----------------------------------------------------------- */

	create temp table t_review_rules as 
	(select rule_id, group_type, access_ind, form_ind, ndc9_nbr
	from	bdro_rule_cmprhnsv_deleted
	where 	cat_id = -1
	group by 1,2,3,4,5) with data;

	delete from t_review_rules
	where 	(rule_id, group_type, access_ind, form_ind, ndc9_nbr) in (
		select  rule_id, group_type, access_ind, form_ind, ndc9_nbr
		from 	bdro_rule_cmprhnsv
		where 	cat_id = -1);

	insert into t_review_rules
	select 	rule_id, group_type, access_ind, form_ind, ndc9_nbr
	from 	bdro_rule_cmprhnsv
	where 	cat_id = -1
	group by 1,2,3,4,5;

	create temp table t_maint_rules_brand_0 as
	(select a.rule_id,
		a.group_type,
		a.access_ind,
		a.form_ind,
		a.crs_rule_eff_dte,
		a.eff_dte,
		a.cat_id,
		a.rule_cat_cde,
		trim(a.ident_dsc) as ident_dsc,
		a.job_run_dte,
		a.source_flag,
		b.brand_ref_nme,
		max(a.end_dte) as end_dte,
		max(a.crs_rule_end_dte) as crs_rule_end_dte,
		max(decision_dte) as decision_dte
	from    bdro_rule_cmprhnsv a,
		bdro_ndc_brand_ref b
	where   a.ndc9_nbr = b.ndc9_nbr
	and     a.cat_id > -1
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     now() between b.oper_insert_tms and b.oper_end_tms
	group by 1,2,3,4,5,6,7,8,9,10,11,12) with data;

	create temp table t_maint_rules_brand_max as
	(select rule_id,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		cat_id,
		rule_cat_cde,
		brand_ref_nme,
		max(job_run_dte) as job_run_dte
	from    t_maint_rules_brand_0 
	group by 1,2,3,4,5,6,7,8,9) with data;

	create temp table t_maint_rules_brand as
	(select a.rule_id,
		a.group_type,
		a.access_ind,
		a.form_ind,
		a.crs_rule_eff_dte,
		a.eff_dte,
		a.cat_id,
		a.rule_cat_cde,
		a.ident_dsc,
		a.decision_dte,
		a.crs_rule_end_dte,
		a.end_dte,
		a.source_flag,
		a.brand_ref_nme
	from    t_maint_rules_brand_0 a,
		t_maint_rules_brand_max b
	where   a.rule_id = b.rule_id
	and	a.group_type = b.group_type
	and	a.access_ind = b.access_ind
	and	a.form_ind = b.form_ind
	and	a.crs_rule_eff_dte = b.crs_rule_eff_dte
	and	a.eff_dte = b.eff_dte
	and	a.cat_id = b.cat_id
	and	a.rule_cat_cde = b.rule_cat_cde
	and	a.brand_ref_nme = b.brand_ref_nme
	and	a.job_run_dte = b.job_run_dte) with data;

        create temp table t_maint_brand_cat_cnt as
        (select	brand_ref_nme
		,count(*) as brand_cnt
	from	(select eff_dte,
			cat_id,
			brand_ref_nme
		from    t_maint_rules_brand
		group by 1,2,3) a
	group by 1
	) with data;

	create temp table t_maint_rules_all_ndc as
	(select distinct a.rule_id,
		a.group_type,
		a.access_ind,
		a.form_ind,
		a.crs_rule_eff_dte,
		a.eff_dte,
		a.cat_id,
		a.rule_cat_cde,
		a.ident_dsc,
		a.decision_dte,
		a.crs_rule_end_dte,
		a.end_dte,
		a.source_flag,
		a.brand_ref_nme,
		b.ndc9_nbr,
		'Y' as copy_ind
	from 	t_maint_rules_brand a,
		bdro_ndc_brand_ref b
	where 	a.brand_ref_nme = b.brand_ref_nme
	and 	now() between b.oper_insert_tms and b.oper_end_tms
	and 	b.ndc9_nbr in (
		select 	substring(ndc_nbr, 1, 9) 
		from 	base_reb_product a,
			reb_contract b 
		where 	a.eff_dte > '2013-12-31'
		and 	now() between a.oper_insert_tms and a.oper_end_tms
		and	a.reb_contract_id = b.reb_contract_id
		and	b.contract_type_cde not in ('CM')) 
	and 	b.ndc9_nbr in (
		select 	substring(ndc_nbr, 1, 9) 
		from 	medical_product 
		where 	obsolete_dte > '2013-12-31')) with data;

	update t_maint_rules_all_ndc a
	set 	copy_ind = 'N' 
	from  	t_review_rules b
	where 	a.rule_id = b.rule_id
	and 	a.group_type = b.group_type
	and 	a.ndc9_nbr = b.ndc9_nbr
	and 	a.form_ind = b.form_ind
	and 	a.access_ind = b.access_ind;

	create temp table t_maint_rules_curr as
	(select	rule_id, 
		group_type, 
		access_ind, 
		form_ind, 
		crs_rule_eff_dte, 
		ndc9_nbr,
		crs_rule_end_dte, 
		eff_dte, 
		end_dte, 
		rule_cat_cde, 
		cat_id
	from 	bdro_rule_cmprhnsv a
	where 	cat_id > -1
	and 	now() between a.oper_insert_tms and a.oper_end_tms) with data;

	create temp table t_bdro_rule_cmprhnsv_cp   as
	(select  a.rule_id,
		a.ndc9_nbr,
		a.group_type,
		a.access_ind,
		a.form_ind,
		a.crs_rule_eff_dte,
		a.eff_dte,
		now() as oper_insert_tms,
		a.cat_id,
		a.rule_cat_cde,
		a.ident_dsc,
		now() as decision_dte,
		now() as job_run_dte,
		'N' as rule_changed_ind,
		a.source_flag,
		'N' as new_drug_ind,
		a.crs_rule_end_dte,
		a.end_dte,
		cast('3000-12-31 23:59:59' as timestamp(6)) as oper_end_tms,
		13 as oper_id,
		'New NDC9 added - catchup' as comment_txt
	from    t_maint_rules_all_ndc a
		left outer join
		t_maint_rules_curr b
	on      a.rule_id = b.rule_id
	and     a.group_type = b.group_type
	and     a.ndc9_nbr = b.ndc9_nbr
	and     a.form_ind = b.form_ind
	and     a.access_ind = b.access_ind
	where   b.rule_id is null
	and	copy_ind = 'Y') with data;

	create temp table t_bdro_rule_cmprhnsv_dups as
	(select rule_id, 
		ndc9_nbr, 
		group_type, 
		access_ind, 
		form_ind, 
		crs_rule_eff_dte, 
		eff_dte, 
		oper_insert_tms
	from 	t_bdro_rule_cmprhnsv_cp 
	group by rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
	having count(*) > 1) with data;

	create temp table t_bdro_rule_cmprhnsv_error as
	(select	a.* 
		,' ' as error_cde
	from    t_bdro_rule_cmprhnsv_cp a 
	where 	(rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in ( 
		select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
		from	t_bdro_rule_cmprhnsv_dups)) with data;

	delete from t_bdro_rule_cmprhnsv_cp
	where 	(rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in ( 
		select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
		from	t_bdro_rule_cmprhnsv_dups);

	/*------------ insert into prod -----------------------*/

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind,
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde,
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind,
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select  rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms, 
		oper_id,
		comment_txt 
	from 	t_bdro_rule_cmprhnsv_cp;    

	create temp table t_bdro_rule_cmprhnsv_dups_1 as
	(select rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms
	from    t_bdro_rule_cmprhnsv_error
	where	cat_id <> 3
	group by rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
	having count(*) > 1) with data;

	update t_bdro_rule_cmprhnsv_error
	set	error_cde = 'D'
	where 	(rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in ( 
		select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
		from	t_bdro_rule_cmprhnsv_dups_1);

	update t_bdro_rule_cmprhnsv_error
	set	error_cde = '3'
	where	error_cde = ' '
	and	cat_id = 3;

	insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind,
		form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde,
		ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind,
		crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
	select  rule_id,
		ndc9_nbr,
		group_type,
		access_ind,
		form_ind,
		crs_rule_eff_dte,
		eff_dte,
		oper_insert_tms,
		cat_id,
		rule_cat_cde,
		ident_dsc,
		decision_dte,
		job_run_dte,
		rule_changed_ind,
		source_flag,
		new_drug_ind,
		crs_rule_end_dte,
		end_dte,
		oper_end_tms,
		oper_id,
		comment_txt
	from    t_bdro_rule_cmprhnsv_error
	where	error_cde = ' ';

	delete from bdro_rule_cmprhnsv_error
	where   error_dte = current_date;

	insert into bdro_rule_cmprhnsv_error
	select  *
		,current_date
	from    t_bdro_rule_cmprhnsv_error;

	/*------------ not copied rules -----------------------*/

        create temp table t_bdro_rule_cmprhnsv_ncp   as
        (select  a.rule_id,
                a.ndc9_nbr,
                a.group_type,
                a.access_ind,
                a.form_ind,
                a.crs_rule_eff_dte,
                a.eff_dte,
                now() as oper_insert_tms,
                a.cat_id,
                a.rule_cat_cde,
                a.ident_dsc,
                now() as decision_dte,
                now() as job_run_dte,
                'N' as rule_changed_ind,
                a.source_flag,
                'N' as new_drug_ind,
                a.crs_rule_end_dte,
                a.end_dte,
                cast('3000-12-31 23:59:59' as timestamp(6)) as oper_end_tms,
                13 as oper_id,
                'New NDC9 added - catchup ncp' as comment_txt
        from    t_maint_rules_all_ndc a
                left outer join
                t_maint_rules_curr b
        on      a.rule_id = b.rule_id
        and     a.group_type = b.group_type
        and     a.ndc9_nbr = b.ndc9_nbr
        and     a.form_ind = b.form_ind
        and     a.access_ind = b.access_ind
        where   b.rule_id is null
        and     copy_ind = 'N') with data;

	delete from t_bdro_rule_cmprhnsv_ncp
	where	ndc9_nbr not in (
		select	distinct ndc9_nbr
		from 	t_bdro_match_ndc_brand);

	drop table t_bdro_rule_cmprhnsv_dups;
	drop table t_bdro_rule_cmprhnsv_error;

        create temp table t_bdro_rule_cmprhnsv_dups as
        (select rule_id,
                ndc9_nbr,
                group_type,
                access_ind,
                form_ind,
                crs_rule_eff_dte,
                eff_dte,
                oper_insert_tms
        from    t_bdro_rule_cmprhnsv_ncp
        group by rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
        having count(*) > 1) with data;

        create temp table t_bdro_rule_cmprhnsv_error as
        (select a.*
                ,' ' as error_cde
        from    t_bdro_rule_cmprhnsv_ncp a
        where   (rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in (
                select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
                from    t_bdro_rule_cmprhnsv_dups)) with data;

        delete from t_bdro_rule_cmprhnsv_ncp
        where   (rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in (
                select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
                from    t_bdro_rule_cmprhnsv_dups);

        insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind,
                form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde,
                ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind,
                crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
        select  rule_id,
                ndc9_nbr,
                group_type,
                access_ind,
                form_ind,
                crs_rule_eff_dte,
                eff_dte,
                oper_insert_tms,
                cat_id,
                rule_cat_cde,
                ident_dsc,
                decision_dte,
                job_run_dte,
                rule_changed_ind,
                source_flag,
                new_drug_ind,
                crs_rule_end_dte,
                end_dte,
                oper_end_tms,
                oper_id,
                comment_txt
        from    t_bdro_rule_cmprhnsv_ncp;

	drop table t_bdro_rule_cmprhnsv_dups_1;
        create temp table t_bdro_rule_cmprhnsv_dups_1 as
        (select rule_id,
                ndc9_nbr,
                group_type,
                access_ind,
                form_ind,
                crs_rule_eff_dte,
                eff_dte,
                oper_insert_tms
        from    t_bdro_rule_cmprhnsv_error
        where   cat_id <> 3
        group by rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
        having count(*) > 1) with data;

        update t_bdro_rule_cmprhnsv_error
        set     error_cde = 'C'
        where   (rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms) in (
                select rule_id, ndc9_nbr, group_type, access_ind, form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms
                from    t_bdro_rule_cmprhnsv_dups_1);

        update t_bdro_rule_cmprhnsv_error
        set     error_cde = '4'
        where   error_cde = ' '
        and     cat_id = 3;

        insert into bdro_rule_cmprhnsv (rule_id, ndc9_nbr, group_type, access_ind,
                form_ind, crs_rule_eff_dte, eff_dte, oper_insert_tms, cat_id, rule_cat_cde,
                ident_dsc, decision_dte, job_run_dte, rule_changed_ind, source_flag, new_drug_ind,
                crs_rule_end_dte, end_dte, oper_end_tms, oper_id, comment_txt)
        select  rule_id,
                ndc9_nbr,
                group_type,
                access_ind,
                form_ind,
                crs_rule_eff_dte,
                eff_dte,
                oper_insert_tms,
                cat_id,
                rule_cat_cde,
                ident_dsc,
                decision_dte,
                job_run_dte,
                rule_changed_ind,
                source_flag,
                new_drug_ind,
                crs_rule_end_dte,
                end_dte,
                oper_end_tms,
                oper_id,
                comment_txt
        from    t_bdro_rule_cmprhnsv_error
        where   error_cde = ' ';

        insert into bdro_rule_cmprhnsv_error
        select  *
                ,current_date
        from    t_bdro_rule_cmprhnsv_error;

COMMIT;" @D@C@
9825@7950@exec !_?fastload_dir?/load_teradata_to_postgresql ?request_id?
                bdro_match_ndc fr_workdb.wt_bdro_match_ndc_?!temp_table_suffix!?
"pdat_BEGIN;
        create temp table t_bdro_dfo_ndc_brand as
        (select distinct b.ndc9_nbr
                ,b.brand_ref_nme
                ,' ' as stat_ind
        from    bdro_dfo_cntl a,
                bdro_ndc_brand_ref b
        where   a.ndc9_nbr = b.ndc9_nbr
        and     now() between a.oper_insert_tms and a.oper_end_tms
        and     now() between b.oper_insert_tms and b.oper_end_tms
        group by 1,2) with data;

        update t_bdro_dfo_ndc_brand
        set stat_ind = 'C'
        where   ndc9_nbr in (
                select  substring(ndc_nbr, 1, 9)
                from    base_reb_product a,
                        reb_contract b
                where   a.eff_dte > '2013-12-31'
                and     now() between a.oper_insert_tms and a.oper_end_tms
                and     a.reb_contract_id = b.reb_contract_id
                and     b.contract_type_ind not in ('CM'));

        delete from t_bdro_dfo_ndc_brand
        where   stat_ind <> 'C';

	/* ----------------------------------------------------------- */

	create temp table t_dfo_rules_brand_0 as
	(select max(a.file_id) as file_id, 
		a.carrier_id, 
		a.contract_id, 
		a.group_type, 
		a.eff_dte,
		a.cat_id,
		a.ident_dsc,
		a.decision_oper_id,
		a.decision_dte,
		b.brand_ref_nme,
		max(a.end_dte) as end_dte,
		max(a.oper_insert_tms) as oper_insert_tms
	from    bdro_dfo_cntl a,
		bdro_ndc_brand_ref b
	where   a.ndc9_nbr = b.ndc9_nbr
	and     now() between a.oper_insert_tms and a.oper_end_tms
	and     now() between b.oper_insert_tms and b.oper_end_tms
	group by 2,3,4,5,6,7,8,9,10) with data;

	create temp table t_dfo_rules_brand_max_0 as
	(select carrier_id, 
		contract_id, 
		group_type, 
		eff_dte,
		cat_id,
		brand_ref_nme,
		oper_insert_tms,
		max(decision_dte) as decision_dte
	from    t_dfo_rules_brand_0 
	group by 1,2,3,4,5,6,7) with data;

        create temp table t_dfo_rules_brand_max as
        (select carrier_id,
                contract_id,
                group_type,
                eff_dte,
                cat_id,
                brand_ref_nme,
                decision_dte,
                max(oper_insert_tms) as oper_insert_tms
        from    t_dfo_rules_brand_max_0
        group by 1,2,3,4,5,6,7) with data;

	create temp table t_dfo_rules_brand as
	(select a.file_id, 
		a.carrier_id, 
		a.contract_id, 
		a.group_type, 
		a.eff_dte,
		a.cat_id,
		a.ident_dsc,
		a.decision_oper_id,
		a.decision_dte,
		a.brand_ref_nme,
		a.end_dte
	from	t_dfo_rules_brand_0 a,
		t_dfo_rules_brand_max b
	where	a.carrier_id = b.carrier_id
	and	a.contract_id = b.contract_id
	and	a.group_type = b.group_type
	and	a.eff_dte = b.eff_dte
	and	a.cat_id = b.cat_id
	and	a.brand_ref_nme = b.brand_ref_nme
	and	a.oper_insert_tms = b.oper_insert_tms
	and	a.decision_dte = b.decision_dte) with data;

	create temp table t_dfo_rules_all_ndc as
	(select a.file_id, 
		a.carrier_id, 
		a.contract_id, 
		a.group_type, 
		a.eff_dte,
		a.cat_id,
		a.ident_dsc,
		a.decision_oper_id,
		a.decision_dte,
		a.brand_ref_nme,
		a.end_dte,
		b.ndc9_nbr
	from 	t_dfo_rules_brand a,
		bdro_ndc_brand_ref b
	where 	a.brand_ref_nme = b.brand_ref_nme
	and 	now() between b.oper_insert_tms and b.oper_end_tms
	and 	b.ndc9_nbr in (
		select 	substring(ndc_nbr, 1, 9) 
		from 	base_reb_product a,
			reb_contract b 
		where 	a.eff_dte > '2013-12-31'
		and 	now() between a.oper_insert_tms and a.oper_end_tms
		and	a.reb_contract_id = b.reb_contract_id
		and	b.contract_type_cde not in ('CM')) 
	and 	b.ndc9_nbr in (
		select 	substring(ndc_nbr, 1, 9) 
		from 	medical_product 
		where 	obsolete_dte > '2013-12-31')) with data;

	create temp table t_bdro_dfo_cntl_curr as
	(select file_id, 
		carrier_id, 
		contract_id, 
		group_type, 
		ndc9_nbr,
		eff_dte,
		cat_id,
		ident_dsc,
		decision_dte,
		end_dte,
		decision_oper_id
	from	bdro_dfo_cntl
	where 	now() between oper_insert_tms and oper_end_tms) with data;

	create temp table t_bdro_dfo_cntl as
        (select  a.file_id
                ,a.carrier_id
                ,a.contract_id
                ,a.group_type
                ,a.ndc9_nbr
                ,a.eff_dte
		,now() as oper_insert_tms
                ,a.cat_id
                ,a.ident_dsc
                ,a.decision_dte
                ,a.end_dte
		,cast('3000-12-31 23:59:59' as timestamp(6)) as oper_end_tms
                ,13 as oper_id
                ,a.decision_oper_id
		,'New NDC9 added - catchup' as comment_txt
	from    t_dfo_rules_all_ndc a
		left outer join
		t_bdro_dfo_cntl_curr b
	on   	a.carrier_id = b.carrier_id
	and	a.contract_id = b.contract_id
	and	a.group_type = b.group_type
	and     a.ndc9_nbr = b.ndc9_nbr
	where   b.carrier_id is null) with data;

	create temp table t_bdro_dfo_dups as
	(select carrier_id, 
		contract_id,
		group_type, 
		ndc9_nbr, 
		eff_dte, 
		oper_insert_tms
	from 	t_bdro_dfo_cntl 
	group by 1,2,3,4,5,6
	having count(*) > 1) with data;

	create temp table t_bdro_dfo_error as
	(select	a.* 
		,' ' as error_cde
	from    t_bdro_dfo_cntl a 
	where 	(carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms) in ( 
		select 	carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms
		from	t_bdro_dfo_dups)) with data;

	delete from t_bdro_dfo_cntl
	where 	(carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms) in ( 
		select 	carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms
		from	t_bdro_dfo_dups);

        insert into bdro_dfo_cntl
        select  file_id
                ,carrier_id
                ,contract_id
                ,group_type
                ,ndc9_nbr
                ,eff_dte
                ,oper_insert_tms
                ,cat_id
                ,ident_dsc
                ,decision_dte
                ,end_dte
                ,oper_end_tms
                ,oper_id
                ,decision_oper_id
                ,comment_txt
        from    t_bdro_dfo_cntl;

	create temp table t_bdro_dfo_dups_1 as
	(select carrier_id, 
		contract_id,
		group_type, 
		ndc9_nbr, 
		eff_dte, 
		oper_insert_tms
	from 	t_bdro_dfo_error 
	where	cat_id <> 3
	group by 1,2,3,4,5,6
	having count(*) > 1) with data;

	update t_bdro_dfo_error
	set	error_cde = 'D'
	where 	(carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms) in ( 
		select 	carrier_id, contract_id, group_type, ndc9_nbr, eff_dte, oper_insert_tms
		from	t_bdro_dfo_dups_1);

	update t_bdro_dfo_error
	set	error_cde = '3'
	where	error_cde = ' '
	and	cat_id = 3;

        insert into bdro_dfo_cntl
        select  file_id
                ,carrier_id
                ,contract_id
                ,group_type
                ,ndc9_nbr
                ,eff_dte
                ,oper_insert_tms
                ,cat_id
                ,ident_dsc
                ,decision_dte
                ,end_dte
                ,oper_end_tms
                ,oper_id
                ,decision_oper_id
                ,comment_txt
	from    t_bdro_dfo_error
	where	error_cde = ' ';

	delete from bdro_dfo_cntl_error 
	where   error_dte = current_date;

	insert into bdro_dfo_cntl_error
	select  *
		,current_date
	from   t_bdro_dfo_error;

COMMIT;" @D@C@
9825@8500@exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_and_brands_all_?!temp_table_suffix!? @D@C@
9825@8502@//exec tdat_drop table fr_workdb.wt_bdro_parm_file_?!temp_table_suffix!? @D@C@
9825@8504@//exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_cat_batch_?!temp_table_suffix!? @D@C@
9825@8506@//exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_cat_?!temp_table_suffix!? @D@C@
9825@8508@//exec tdat_drop table fr_workdb.wt_BDRO_NF_targeted_rules_t02_?!temp_table_suffix!? @D@C@
9825@8510@//exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_and_brands_?!temp_table_suffix!? @D@C@
9825@8512@//exec tdat_drop table fr_workdb.wt_BDRO_CLNT_Profile_Groups_?!temp_table_suffix!? @D@C@
9825@8514@//exec tdat_drop table fr_workdb.wt_BDRO_group_prod_?!temp_table_suffix!? @D@C@
9825@8516@//exec tdat_drop table fr_workdb.wt_BDRO_NF_client_prod_?!temp_table_suffix!? @D@C@
9825@8518@////exec tdat_drop table fr_workdb.wt_BDRO_NF_prod_rule_A_?!temp_table_suffix!? @D@C@
9825@8520@//exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_products_?!temp_table_suffix!? @D@C@
9825@8522@//exec tdat_drop table fr_workdb.wt_BDRO_NF_Med_prod_ALL_?!temp_table_suffix!? @D@C@
9825@8524@//exec tdat_drop table fr_workdb.wt_BDRO_NF_ACC_Brands_?!temp_table_suffix!? @D@C@
9825@8526@//exec tdat_drop table fr_workdb.wt_BDRO_NF_ACC_rules_brands_?!temp_table_suffix!? @D@C@
9825@8528@//exec tdat_drop table fr_workdb.wt_BDRO_NF_missing_rules_brands_?!temp_table_suffix!? @D@C@
9825@8530@//exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_rules_brands_?!temp_table_suffix!? @D@C@
9825@8532@//exec tdat_drop table fr_workdb.wt_BDRO_NF_client_ext1_summ_?!temp_table_suffix!? @D@C@
9825@8534@//exec tdat_drop table fr_workdb.wt_BDRO_NF_init_targeted_?!temp_table_suffix!? @D@C@
9825@8536@//exec tdat_drop table fr_workdb.wt_BDRO_Temp_rule_product_NF_?!temp_table_suffix!? @D@C@
9825@8538@//exec tdat_drop table fr_workdb.wt_BDRO_NF_Hist_Rule_Ext1_?!temp_table_suffix!? @D@C@
9825@8540@//exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_rules_brands_?!temp_table_suffix!? @D@C@
9825@8542@//exec tdat_drop TABLE fr_workdb.wt_BDRO_Hist_Reb_Elig_?!temp_table_suffix!? @D@C@
9825@8544@//exec tdat_drop table fr_workdb.wt_BDRO_NF_MAX_HIST_rule_nme_?!temp_table_suffix!? @D@C@
9825@8546@//exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_rules_Matched_?!temp_table_suffix!? @D@C@
9825@8548@//exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_Hist_Targeted_?!temp_table_suffix!? @D@C@
9825@8550@//exec tdat_drop table fr_workdb.wt_BDRO_NF_ALL_Hist_Preferred_?!temp_table_suffix!?  @D@C@
9825@8552@//exec tdat_drop TABLE fr_workdb.wt_BDRO_NF_Hist_Rule_Ext2_?!temp_table_suffix!? @D@C@
9825@8554@//exec tdat_drop table fr_workdb.wt_BDRO_NF_HIST_products_?!temp_table_suffix!? @D@C@
9825@8556@//exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_rules_brands_tmp_?!temp_table_suffix!? @D@C@
9825@8558@//exec tdat_drop table fr_workdb.wt_BDRO_NF_TGT_rules_brands_?!temp_table_suffix!? @D@C@
9825@8560@//exec tdat_drop table fr_workdb.wt_BDRO_NF_rules_brands_?!temp_table_suffix!? @D@C@
9825@8562@//exec tdat_drop table fr_workdb.wt_bdro_carr_prod_all_?!temp_table_suffix!? @D@C@
9825@8564@//exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t01_?!temp_table_suffix!? @D@C@
9825@8566@//exec tdat_drop table fr_workdb.wt_BDRO_NF_forms_brands_summ_?!temp_table_suffix!? @D@C@
9825@8568@//exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t02A_?!temp_table_suffix!? @D@C@
9825@8570@//exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Products_?!temp_table_suffix!? @D@C@
9825@8572@//exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Rules_?!temp_table_suffix!? @D@C@
9825@8574@//exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Rule_Data_?!temp_table_suffix!? @D@C@
9825@8576@//exec tdat_drop table fr_workdb.wt_BDRO_NF_prod_id_versions_?!temp_table_suffix!? @D@C@
9825@8578@//exec tdat_drop table fr_workdb.wt_BDRO_NF_final_Daily_t03_?!temp_table_suffix!? @D@C@
9825@8580@//exec tdat_drop table fr_workdb.wt_BDRO_NF_uniq_rules_t01_?!temp_table_suffix!? @D@C@
9825@8582@//exec tdat_drop table fr_workdb.wt_BDRO_NF_new_drugs_t01_?!temp_table_suffix!? @D@C@
9825@8584@//exec tdat_drop table fr_workdb.wt_bdro_rule_maint_temp_?!temp_table_suffix!? @D@C@
9825@8586@//exec tdat_drop table fr_workdb.wt_bdro_rule_maint_?!temp_table_suffix!? @D@C@
9825@8588@//exec tdat_drop table fr_workdb.wt_BDRO_NF_rules_and_forms_?!temp_table_suffix!? @D@C@
9825@8590@//exec tdat_drop table fr_workdb.wt_BDRO_NF_rule_form_maint_?!temp_table_suffix!? @D@C@
9825@8592@//exec tdat_drop table fr_workdb.wt_BDRO_NF_All_Maint_Curr_?!temp_table_suffix!? @D@C@
9825@8594@//exec tdat_drop table fr_workdb.wt_BDRO_NF_SEL_Missing_Maint_?!temp_table_suffix!? @D@C@
9825@8596@//exec tdat_drop table fr_workdb.wt_BDRO_NF_clnt_rule_ALL_?!temp_table_suffix!? @D@C@
9825@8598@//exec tdat_drop table fr_workdb.wt_bdro_rule_mkey_brand_?!temp_table_suffix!? @D@C@
9825@8600@//exec !_/Production/frp/bin/radm 82   @D@C@
